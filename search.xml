<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>創站首篇文章</title>
    <url>/posts/2051013919/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<p>自2018年開始撰寫Blogger紀錄工作上會遇到的內容，藉由紀錄的過程也有助於加深對於某項技術的印象。想當初我遇到問題的時候也是不斷Google，受惠於很多網路大神的文章才解決了問題，期許我也能夠成為網路世界中有用的人，撰寫出一些能夠對這個世界有所幫助的文章。</p>
<p>礙於我對於Blogger的調整不是很熟悉，常常影片上傳失敗或分頁的過程會無法完整呈現，有一天當我遇到Hexo-nexT的主題時，驚為天人，這完全就是我理想中的部落格外觀，因此就決定藉由學習一項新的技術的同時也來重建一下以前醜醜的Google
Blogger...</p>
<span id="more"></span>
<p>##🌟 為什麼想要重建一個部落格?</p>
<h3 id="主要原因">主要原因</h3>
<blockquote>
<p>Hexo-nexT相當簡潔有力</p>
</blockquote>
<p>於我而言，理想中的部落格就是只要可以介紹我是誰、方便訪客查看文章、留言，這幾項基本功能即可</p>
<p>剛好Hexo的nexT主題可以說是專為這些內容而生的靜態頁面渲染器，內建的文章目錄、可以直接使用markdown語法進行渲染的內容，還有各種留言外掛可供利用，完全符合我的需求。</p>
<h3 id="額外好處">額外好處</h3>
<blockquote>
<p>網站自主權，非常的重要!</p>
</blockquote>
<p>Hexo可以在本地端透過hexo-cli套件進行靜態網頁渲染，讓使用者可以儲存原始檔案，不怕有一天服務收掉卻沒有原始檔可以復原。</p>
<p>渲染後的內容要給網路看必須要找個空間進行部署，剛好<strong>GitHubPage</strong>有提供這項服務，如有購買網域，也可以進行CNAME設定即可擁有自己的官方網站部落格了，是不是很讚!</p>
<hr />
<h2 id="未來文章組成方向">⤴️未來文章組成方向</h2>
<p>這幾年來做了不少個side
project，專案執行過程也能有幸與各地網友交流，因為我本身是名工程人員，對於資訊人員所能撰寫的素材，我可以再多融入有關工程上的應用，而這些內容也是眾多網友所關注的內容，包含規劃、設計、監造、工務行政...等。</p>
<p>在此，我很感謝曾經幫助過我的朋友，因為有你們的支持，也才能讓我有動力繼續研究開發。</p>
<h3 id="基本概念">基本概念</h3>
<p>當遇到的問題的時候就知道要去找答案了，這是我在自學的過程中所領悟到的一件事，看過程式碼其實不代表你已經會了，而是必須要把答案寫出來並解決了問題才是真的會了!</p>
<blockquote>
<p>寫程式本身就是一個不斷遇到錯誤、修正錯誤的過程</p>
</blockquote>
<p>我會將解決問題的過程中，那些值得紀錄的基本概念寫在我的部落格中，有一天網路上相遇時能幫助到你我會很開心。</p>
<h3 id="專案開發">專案開發</h3>
<p>寫程式的目標，往往是透過完成小專案合併成一個大專案來解決實務上的問題，懂得拆分需求也是一名好的資訊人員所需要的基本技能，開發過程難免會遇到一些奇怪的問題，但這些問題又偏離基本概念太遠，主要訴求是為了解決專案內容而生，因此這部分為以解決<strong>實務上的問題</strong>為內容，將我踩過的坑分享給各位同樣遇見該問題的人，而不再多琢磨基本概念。</p>
<blockquote>
<p>專案項目如果能進行良好的拆分並進行<strong>單元測試</strong>真的很有幫助</p>
</blockquote>
<h3 id="專案成果">專案成果</h3>
<blockquote>
<p>專案完成一定的程度就會需要進行測試，透過實際上的測試，了解專案的瑕疵在哪裡。</p>
</blockquote>
<p>既然會有操作，那把專案的相關文件撰寫清楚，才可能會有辦法好好操作，因此這階段的內容是將開發完成的專案使用情況、操作步驟好好描述，在此，很感謝願意進行測試的好朋友，有你們才能讓專案趨於完整，由衷感謝!!!</p>
<h3 id="需求回饋">需求回饋</h3>
<p>不同的使用者有各式各樣的需求，這部分對我而言都是很好的回饋，如果這些需求能夠讓程式更適用於大多數人的需求，這樣對於專案執行的發展方向就會是健康的，畢竟功能好壞各有所主觀意識，但若能夠大部分的人都認為這樣很棒，那我也很樂意為之。</p>
<blockquote>
<p>當實務上遇到問題的時候請用力告訴我，聯絡LINE還是Mail都可以!(詳見左方側邊攔)</p>
</blockquote>
]]></content>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>土方計算-方格法(VBA)</title>
    <url>/posts/4262718496/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<p>本篇主要介紹利用 <strong>AutoCAD VBA</strong> 的物件操作+
<strong>Excel VBA</strong>
的工作表函數來簡化<strong>平坦地貌</strong>收方作業的過程。</p>
<blockquote>
<p>土方計算是工程施作時有關於甲乙方針對土方數量時的重要依據，分為小型工程及大型工程來討論。</p>
</blockquote>
<h3 id="小型工程">小型工程</h3>
<p>土方金額佔比不高的情況下，通常契約數量多少就多少，甲乙雙方不太會有意見。</p>
<h3 id="大型工程">大型工程</h3>
<p>土方金額佔比高的情況下，甲乙雙方會針對設計原始地貌進行收方作業並作成土方報告，並以此作為契約數量修正的依據，再根據結構體的設計高程及圖說指定的開挖方式重新計算挖填方數量。</p>
<h2 id="計算方法選定">計算方法選定</h2>
<p>地形模型的建立會根據地貌狀況而定</p>
<ul>
<li>具有複雜地形特徵的地區，使用TIN(不規則三角網)</li>
<li>地形變化相對平緩的地區，使用DEM(數字高程模型)</li>
</ul>
<p>方格法便是使用DEM的概念，透過每個方格頂點計算方格平均高程後推算求得土方體積，高程頂點則利用IDW(反距離加權法)來進行高程賦值，插值過程會需要大量的基本運算。</p>
<blockquote>
<p>有關不規則三角網另請參考筆者前文 <a
href="https://hankvba.blogspot.com/2023/01/cad-vba.html">CAD
VBA@收方作業(不規則三角網法)</a></p>
</blockquote>
<span id="more"></span>
<h2 id="影片操作">🎬影片操作</h2>
<iframe width="560" height="315" src="https://www.youtube.com/embed/OJ6uFdUgUi4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>
</iframe>
<blockquote>
<p>有收方作業的需求歡迎透過左方側邊欄內容聯繫E-mail或LINE進行諮詢。</p>
</blockquote>
<h2 id="實現邏輯">👉實現邏輯</h2>
<h3 id="建立測量點影片未出現">建立測量點(影片未出現)</h3>
<ol type="1">
<li>將設計圖面所記錄的高程點放入工作表("DESIGN")</li>
</ol>
<figure>
<img src="H_List.JPG" alt="Fig1. 設計圖面高程" />
<figcaption aria-hidden="true">Fig1. 設計圖面高程</figcaption>
</figure>
<ol start="2" type="1">
<li>將收方作業所記錄的高程點放入工作表("CHECK")</li>
</ol>
<figure>
<img src="H2_List.JPG" alt="Fig2.收方作業高程" />
<figcaption aria-hidden="true">Fig2.收方作業高程</figcaption>
</figure>
<table>
<thead>
<tr class="header">
<th>欄位名稱</th>
<th>用途說明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Num</td>
<td>點名稱</td>
</tr>
<tr class="even">
<td>X</td>
<td>TWD97-E座標</td>
</tr>
<tr class="odd">
<td>Y</td>
<td>TWD97-N座標</td>
</tr>
<tr class="even">
<td>Z</td>
<td>高程</td>
</tr>
<tr class="odd">
<td>Length</td>
<td>與頂點的距離</td>
</tr>
</tbody>
</table>
<p>此處的Length會由每一點去與range("F1")、range("G1")進行距離換算(IDW使用)</p>
<h3 id="建立方格">建立方格</h3>
<ol type="1">
<li>取得計畫範圍之後，找出其邊界位置</li>
<li>方格會在邊界內依序繪製並與計畫範圍判釋兩多邊形位置關係</li>
<li>位置關係可分為下列三種
<ul>
<li>計畫範圍外&gt;&gt;刪除</li>
<li>計畫範圍內&gt;&gt;保留不動</li>
<li>計畫範圍與之相交&gt;&gt;另外建立計畫範圍外部面積。(這裡會需要手動調整下)</li>
</ul></li>
</ol>
<h3 id="方格編號及面積">方格編號及面積</h3>
<ol type="1">
<li>框選所有方格及外部面積</li>
<li>方格由左上到右下依序編號</li>
<li>計算外部面積形心到所有方格的位置並指定其歸屬哪個方格</li>
<li>由指定內容進行面積扣除</li>
</ol>
<figure>
<img src="GRID_Num.JPG" alt="Fig3.方格資料主要頁面" />
<figcaption aria-hidden="true">Fig3.方格資料主要頁面</figcaption>
</figure>
<table>
<thead>
<tr class="header">
<th>欄位名稱</th>
<th>用途說明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Num</td>
<td>方格編號</td>
</tr>
<tr class="even">
<td>Grid_Handle</td>
<td>方格在CAD中的連接碼</td>
</tr>
<tr class="odd">
<td>Centroid_X</td>
<td>方格形心X座標</td>
</tr>
<tr class="even">
<td>Centroid_Y</td>
<td>方格形心Y座標</td>
</tr>
<tr class="odd">
<td>DESIGN</td>
<td>平均頂點設計高程</td>
</tr>
<tr class="even">
<td>CHECK</td>
<td>平均頂點收方高程</td>
</tr>
<tr class="odd">
<td>Volume</td>
<td>土方體積</td>
</tr>
</tbody>
</table>
<h3 id="方格頂點計算插值">方格頂點計算插值</h3>
<ol type="1">
<li>匯出所有方格不重複頂點</li>
<li>針對每個頂點進行IDW插值</li>
<li>搜尋半徑預設為方格大小，計算點數預設為3點</li>
<li>如頂點因為高程點的分布關係無法滿足上述條件則插值為0</li>
</ol>
<figure>
<img src="GRID_pts.JPG" alt="Fig4.方格頂點資料" />
<figcaption aria-hidden="true">Fig4.方格頂點資料</figcaption>
</figure>
<h3 id="方格土方體積計算">方格土方體積計算</h3>
<ol type="1">
<li>透過Grid_Handle連接該方格在CAD中的各頂點</li>
<li>將各頂點與設計高程座標比對計算該方格平均頂點設計高程</li>
<li>將各頂點與收方高程座標比對計算該方格平均頂點收方高程</li>
<li>由平均收方高程扣除平均設計高程與方格面積進行相乘求得方格土方體積</li>
</ol>
<h3 id="土方報告">土方報告</h3>
<p>將上述計算成果放入工作表("REPORT")</p>
<figure>
<img src="REPORT.JPG" alt="Fig5.土方計算書" />
<figcaption aria-hidden="true">Fig5.土方計算書</figcaption>
</figure>
<h3 id="可視化呈現">可視化呈現</h3>
<p>方格可以透過建立3D
BOX的方式進行可視化呈現，因為高程的差異只有一點點，所以還是需要將高程倍數放大讓使用者可以更清楚掌握細節。</p>
<figure>
<img src="5x5-elevationdiff-sharp.JPG"
alt="Fig6.土方高程差可視化呈現" />
<figcaption aria-hidden="true">Fig6.土方高程差可視化呈現</figcaption>
</figure>
<p>除了以柱狀體方式呈現以外，也可以透過Hatch的顏色差異進行挖方填方的判釋，比如說挖方區域就給綠色，填方區域就給紅色。</p>
<h2 id="幾何圖學判釋">👨‍🏫幾何圖學判釋</h2>
<blockquote>
<p>整體還有很多實現細節可以進去程式碼裡面看!完整的程式碼(包含操作軟體)取得請洽作者諮詢。</p>
</blockquote>
<h3 id="判斷點跟多邊形的關係">判斷點跟多邊形的關係</h3>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Function</span> IsPointInPolygon(X, Y, poly() <span class="keyword">As</span> <span class="type">Double</span>) <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line">    <span class="comment">&#x27; Check if a point is inside a polygon.</span></span><br><span class="line">    <span class="comment">&#x27; Args:</span></span><br><span class="line">    <span class="comment">&#x27;   x: X coordinate of the point.</span></span><br><span class="line">    <span class="comment">&#x27;   y: Y coordinate of the point.</span></span><br><span class="line">    <span class="comment">&#x27;   poly: An array representing the vertices of the polygon.</span></span><br><span class="line">    <span class="comment">&#x27; Returns:</span></span><br><span class="line">    <span class="comment">&#x27;   True if the point is inside the polygon, False otherwise.</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="type">Integer</span>, j <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">    <span class="keyword">Dim</span> numVertices <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">    <span class="keyword">Dim</span> oddNodes <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line"></span><br><span class="line">    numVertices = UBound(poly) \ <span class="number">2</span> + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27; Check if the point is inside the polygon using the ray-casting algorithm</span></span><br><span class="line">    j = numVertices - <span class="number">1</span></span><br><span class="line">    oddNodes = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> numVertices - <span class="number">1</span></span><br><span class="line">        <span class="keyword">If</span> (poly(<span class="number">2</span> * i + <span class="number">1</span>) &gt; Y) &lt;&gt; (poly(<span class="number">2</span> * j + <span class="number">1</span>) &gt; Y) <span class="keyword">Then</span></span><br><span class="line">            <span class="keyword">If</span> (poly(<span class="number">2</span> * j + <span class="number">1</span>) - poly(<span class="number">2</span> * i + <span class="number">1</span>)) &lt;&gt; <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line">                <span class="keyword">If</span> X &lt; (poly(<span class="number">2</span> * j) - poly(<span class="number">2</span> * i)) * (Y - poly(<span class="number">2</span> * i + <span class="number">1</span>)) / (poly(<span class="number">2</span> * j + <span class="number">1</span>) - poly(<span class="number">2</span> * i + <span class="number">1</span>)) + poly(<span class="number">2</span> * i) <span class="keyword">Then</span></span><br><span class="line">                    oddNodes = <span class="built_in">Not</span> oddNodes</span><br><span class="line">                <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        j = i</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27; Check if the point is exactly on a vertex or an edge</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> numVertices - <span class="number">1</span></span><br><span class="line">        j = (i + <span class="number">1</span>) <span class="built_in">Mod</span> numVertices</span><br><span class="line">        <span class="comment">&#x27; Check if the point is on a vertex</span></span><br><span class="line">        <span class="keyword">If</span> X = poly(<span class="number">2</span> * i) <span class="built_in">And</span> Y = poly(<span class="number">2</span> * i + <span class="number">1</span>) <span class="keyword">Then</span></span><br><span class="line">            IsPointInPolygon = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="comment">&#x27; Check if the point is on an edge</span></span><br><span class="line">        <span class="keyword">If</span> ((poly(<span class="number">2</span> * i + <span class="number">1</span>) &lt;= Y <span class="built_in">And</span> Y &lt;= poly(<span class="number">2</span> * j + <span class="number">1</span>)) <span class="built_in">Or</span> (poly(<span class="number">2</span> * j + <span class="number">1</span>) &lt;= Y <span class="built_in">And</span> Y &lt;= poly(<span class="number">2</span> * i + <span class="number">1</span>))) <span class="built_in">And</span> _</span><br><span class="line">           (X &lt;= myMax(poly(<span class="number">2</span> * i), poly(<span class="number">2</span> * j))) <span class="built_in">And</span> (poly(<span class="number">2</span> * j + <span class="number">1</span>) - poly(<span class="number">2</span> * i + <span class="number">1</span>) &lt;&gt; <span class="number">0</span>) <span class="keyword">Then</span></span><br><span class="line">            <span class="keyword">If</span> X = (poly(<span class="number">2</span> * j) - poly(<span class="number">2</span> * i)) * (Y - poly(<span class="number">2</span> * i + <span class="number">1</span>)) / (poly(<span class="number">2</span> * j + <span class="number">1</span>) - poly(<span class="number">2</span> * i + <span class="number">1</span>)) + poly(<span class="number">2</span> * i) <span class="keyword">Then</span></span><br><span class="line">                IsPointInPolygon = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"></span><br><span class="line">    IsPointInPolygon = oddNodes</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="判斷多邊形的位置關係">判斷多邊形的位置關係</h3>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Function</span> PolygonsRelation(poly1() <span class="keyword">As</span> <span class="type">Double</span>, poly2() <span class="keyword">As</span> <span class="type">Double</span>) <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    <span class="comment">&#x27; Check relation between two closed polygons.</span></span><br><span class="line">    <span class="comment">&#x27; Args:</span></span><br><span class="line">    <span class="comment">&#x27;   poly1: An array representing the vertices of the first closed polygon.</span></span><br><span class="line">    <span class="comment">&#x27;   poly2: An array representing the vertices of the second closed polygon.</span></span><br><span class="line">    <span class="comment">&#x27; Returns:</span></span><br><span class="line">    <span class="comment">&#x27;   String indicating the relation between two polygons:</span></span><br><span class="line">    <span class="comment">&#x27;     - &quot;Disjoint&quot;: If polygons are disjoint.</span></span><br><span class="line">    <span class="comment">&#x27;     - &quot;Contains&quot;: If poly1 contains poly2.</span></span><br><span class="line">    <span class="comment">&#x27;     - &quot;Contained By&quot;: If poly2 contains poly1.</span></span><br><span class="line">    <span class="comment">&#x27;     - &quot;Overlap&quot;: If polygons overlap.</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="type">Integer</span>, j <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">    <span class="keyword">Dim</span> numVertices1 <span class="keyword">As</span> <span class="type">Integer</span>, numVertices2 <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">    <span class="keyword">Dim</span> containsPoly1 <span class="keyword">As</span> <span class="type">Boolean</span>, containsPoly2 <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line">    <span class="keyword">Dim</span> intersects <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line">    <span class="keyword">Dim</span> X <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line">    <span class="keyword">Dim</span> Y <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line">    numVertices1 = UBound(poly1) \ <span class="number">2</span> + <span class="number">1</span></span><br><span class="line">    numVertices2 = UBound(poly2) \ <span class="number">2</span> + <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; Check if one polygon is completely contained in the other</span></span><br><span class="line">    containsPoly1 = <span class="literal">False</span></span><br><span class="line">    containsPoly2 = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> numVertices1 - <span class="number">1</span> <span class="comment">&#x27;檢查點資料是否在poly2裡面</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">If</span> IsPointInPolygon(poly1(<span class="number">2</span> * i), poly1(<span class="number">2</span> * i + <span class="number">1</span>), poly2) <span class="keyword">Then</span></span><br><span class="line">            containsPoly1 = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">Exit</span> <span class="keyword">For</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> numVertices2 - <span class="number">1</span> <span class="comment">&#x27;檢查點資料是否在poly1裡面</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">If</span> IsPointInPolygon(poly2(<span class="number">2</span> * j), poly2(<span class="number">2</span> * j + <span class="number">1</span>), poly1) <span class="keyword">Then</span></span><br><span class="line">            containsPoly2 = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">Exit</span> <span class="keyword">For</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span> j</span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; Check if polygons are disjoint</span></span><br><span class="line">    <span class="keyword">If</span> <span class="built_in">Not</span> containsPoly1 <span class="built_in">And</span> <span class="built_in">Not</span> containsPoly2 <span class="keyword">Then</span></span><br><span class="line">        intersects = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> numVertices1 - <span class="number">1</span></span><br><span class="line">            <span class="keyword">For</span> j = <span class="number">0</span> <span class="keyword">To</span> numVertices2 - <span class="number">1</span></span><br><span class="line">                <span class="keyword">If</span> DoIntersect(poly1(<span class="number">2</span> * i), poly1(<span class="number">2</span> * i + <span class="number">1</span>), poly1((<span class="number">2</span> * ((i + <span class="number">1</span>) <span class="built_in">Mod</span> numVertices1))), poly1((<span class="number">2</span> * ((i + <span class="number">1</span>) <span class="built_in">Mod</span> numVertices1)) + <span class="number">1</span>), _</span><br><span class="line">                               poly2(<span class="number">2</span> * j), poly2(<span class="number">2</span> * j + <span class="number">1</span>), poly2((<span class="number">2</span> * ((j + <span class="number">1</span>) <span class="built_in">Mod</span> numVertices2))), poly2((<span class="number">2</span> * ((j + <span class="number">1</span>) <span class="built_in">Mod</span> numVertices2)) + <span class="number">1</span>)) <span class="keyword">Then</span></span><br><span class="line">                    intersects = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">Exit</span> <span class="keyword">For</span></span><br><span class="line">                <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            <span class="keyword">Next</span> j</span><br><span class="line">            <span class="keyword">If</span> intersects <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">For</span></span><br><span class="line">        <span class="keyword">Next</span> i</span><br><span class="line">        <span class="keyword">If</span> <span class="built_in">Not</span> intersects <span class="keyword">Then</span></span><br><span class="line">            PolygonsRelation = <span class="string">&quot;Disjoint&quot;</span></span><br><span class="line">            <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; Check for containment</span></span><br><span class="line">    <span class="keyword">If</span> containsPoly1 <span class="built_in">And</span> containsPoly2 <span class="keyword">Then</span></span><br><span class="line">        PolygonsRelation = <span class="string">&quot;Overlap&quot;</span></span><br><span class="line">    <span class="keyword">ElseIf</span> containsPoly1 <span class="keyword">Then</span></span><br><span class="line">        PolygonsRelation = <span class="string">&quot;Contains&quot;</span></span><br><span class="line">    <span class="keyword">ElseIf</span> containsPoly2 <span class="keyword">Then</span></span><br><span class="line">        PolygonsRelation = <span class="string">&quot;Contained By&quot;</span></span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        PolygonsRelation = <span class="string">&quot;Overlap&quot;</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<h2 id="開發小結">🎯開發小結</h2>
<ul>
<li><p>進行IDW會需要計算距離，建議透過內建函數去執行，不要從VBA算完Length之後再<strong>填儲存格</strong>，效能差很多。</p></li>
<li><p>判定多邊形幾何關係時，需要額外考量四個頂點都在計畫範圍外但是計畫範圍有凸多邊形插在方格中的情形。</p></li>
<li><p>電腦計算能力很強的可以將計畫範圍切成5*5的方格，但是還是要考量點資料的密度是否足夠，密度不足會導致很多頂點都是不合理的，程式會自動判釋為0</p></li>
<li><p>IDW計算時可以透過Cross
Validation的方式判斷目前模型的合理程度，影響IDW有搜尋半徑、計算最少點數、距離倒數的幕次。</p></li>
</ul>
]]></content>
      <categories>
        <category>專案成果</category>
      </categories>
      <tags>
        <tag>AutoCAD VBA</tag>
        <tag>Excel VBA</tag>
        <tag>土方計算</tag>
      </tags>
  </entry>
  <entry>
    <title>Streamlit做手繪簽名</title>
    <url>/posts/213685522/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>工程執行過程免不了會有很多品管文件需要製作，紙本文件的加值應用相當困難，通常都會放置於一堆又一堆的資料夾中，有需要再去相互參照，大多流於形式，倘若工程文件能夠數位化，對於整個工程資料的保存、查詢會有很多好處，但經過幾次查核委員的建議，關於簽名這件事情他們有意見，既然是需要在現場進行檢查的文件，那<strong>當然</strong>會是手寫的才最香，殊不知很多委員還是認為電腦直接出的文件不能用，至少簽名的部分要手寫才是真的。</p>
<p>基於這些理由，我希望能夠做到用手寫的觸感去簽署文件，透過Streamlit的前端及streamlit-drawable-canvas作為繪圖器，opencv作為背景去背處理，及PyMuPDF作為轉檔工具，來達成委員的要求...</p>
<p>其實我一直不能理解，中華電信都可以用手寫的觸控板來跟客戶簽約了，為什麼公共工程一定要用<strong>紙+筆</strong>，現在其實平板電腦都很方便，把要抽查的PDF都先放好在雲端，帶去工地現場選取要抽查的對應PDF後寫紀錄表，寫完後可以即時上傳到雲端，資訊流動才會迅速，也不用這樣浪費一堆紙來記錄這些內容，未來要翻閱從雲端去撈取出來即可。</p>
<span id="more"></span>
<h2 id="影片操作">🎬影片操作</h2>
<iframe width="560" height="315" src="https://www.youtube.com/embed/V0we1mNC_ys?si=AJFYWRig0FI9tv2T" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>
</iframe>
<h2 id="安裝包">安裝包</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install streamlit streamlit-drawable-canvas numpy opencv-python-headless Pillow PyMuPDF</span><br></pre></td></tr></table></figure>
<h2 id="圖片簽名預覽">圖片簽名預覽</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> streamlit <span class="keyword">as</span> st</span><br><span class="line"><span class="keyword">from</span> streamlit_drawable_canvas <span class="keyword">import</span> st_canvas</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 設置 Streamlit 界面</span></span><br><span class="line">st.title(<span class="string">&quot;圖片簽名工具&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上傳圖片</span></span><br><span class="line">uploaded_file = st.file_uploader(<span class="string">&quot;上傳圖片&quot;</span>, <span class="built_in">type</span>=[<span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;jpeg&quot;</span>, <span class="string">&quot;png&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 繪製簽名</span></span><br><span class="line">st.write(<span class="string">&quot;繪製簽名&quot;</span>)</span><br><span class="line">canvas_result = st_canvas(</span><br><span class="line">    fill_color=<span class="string">&quot;rgba(0, 0, 0, 0)&quot;</span>,  <span class="comment"># 背景填充色</span></span><br><span class="line">    stroke_width=<span class="number">3</span>,</span><br><span class="line">    stroke_color=<span class="string">&quot;black&quot;</span>,</span><br><span class="line">    background_color=<span class="string">&quot;rgba(255, 255, 255, 0)&quot;</span>,</span><br><span class="line">    height=<span class="number">150</span>,</span><br><span class="line">    width=<span class="number">400</span>,</span><br><span class="line">    drawing_mode=<span class="string">&quot;freedraw&quot;</span>,</span><br><span class="line">    key=<span class="string">&quot;canvas&quot;</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> uploaded_file <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> canvas_result.image_data <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="comment"># 讀取上傳的圖片</span></span><br><span class="line">    file_bytes = np.asarray(<span class="built_in">bytearray</span>(uploaded_file.read()), dtype=np.uint8)</span><br><span class="line">    uploaded_image = cv2.imdecode(file_bytes, cv2.IMREAD_UNCHANGED)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 獲取簽名並處理透明背景</span></span><br><span class="line">    signature_data = canvas_result.image_data</span><br><span class="line">    signature = cv2.cvtColor(signature_data, cv2.COLOR_RGBA2BGRA)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 將簽名大小調整為合適大小</span></span><br><span class="line">    sig_h, sig_w, _ = signature.shape</span><br><span class="line">    img_h, img_w, _ = uploaded_image.shape</span><br><span class="line">    x_offset = img_w - sig_w - <span class="number">10</span></span><br><span class="line">    y_offset = img_h - sig_h - <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 將簽名放置在圖片上</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">3</span>):</span><br><span class="line">        uploaded_image[y_offset:y_offset+sig_h, x_offset:x_offset+sig_w, c] = \</span><br><span class="line">            signature[:, :, c] * (signature[:, :, <span class="number">3</span>] / <span class="number">255.0</span>) + \</span><br><span class="line">            uploaded_image[y_offset:y_offset+sig_h, x_offset:x_offset+sig_w, c] * (<span class="number">1.0</span> - signature[:, :, <span class="number">3</span>] / <span class="number">255.0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 顯示合併後的圖片</span></span><br><span class="line">    st.image(uploaded_image, caption=<span class="string">&#x27;簽名後的圖片&#x27;</span>, use_column_width=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="直接簽在圖片上">直接簽在圖片上</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> streamlit <span class="keyword">as</span> st</span><br><span class="line"><span class="keyword">from</span> streamlit_drawable_canvas <span class="keyword">import</span> st_canvas</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> fitz  <span class="comment"># PyMuPDF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 設置 Streamlit 界面</span></span><br><span class="line">st.title(<span class="string">&quot;PDF 簽名工具&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上傳 PDF</span></span><br><span class="line">uploaded_file = st.file_uploader(<span class="string">&quot;上傳 PDF&quot;</span>, <span class="built_in">type</span>=[<span class="string">&quot;pdf&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果上傳了文件</span></span><br><span class="line"><span class="keyword">if</span> uploaded_file <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="comment"># 讀取上傳的 PDF</span></span><br><span class="line">    pdf_bytes = uploaded_file.read()</span><br><span class="line">    document = fitz.<span class="built_in">open</span>(<span class="string">&quot;pdf&quot;</span>, pdf_bytes)</span><br><span class="line">    page = document.load_page(<span class="number">0</span>)</span><br><span class="line">    pix = page.get_pixmap()</span><br><span class="line">    background_image = Image.frombytes(<span class="string">&quot;RGB&quot;</span>, [pix.width, pix.height], pix.samples)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># st.write(&quot;簽名調整&quot;)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 繪製簽名</span></span><br><span class="line">    <span class="comment"># st.write(&quot;繪製簽名&quot;)</span></span><br><span class="line">    canvas_result = st_canvas(</span><br><span class="line">        fill_color=<span class="string">&quot;rgba(0, 0, 0, 0)&quot;</span>,  <span class="comment"># 背景填充色</span></span><br><span class="line">        stroke_width=<span class="number">3</span>,</span><br><span class="line">        stroke_color=<span class="string">&quot;black&quot;</span>,</span><br><span class="line">        background_image=background_image,</span><br><span class="line">        height=pix.height,</span><br><span class="line">        width=pix.width,</span><br><span class="line">        drawing_mode=<span class="string">&quot;freedraw&quot;</span>,</span><br><span class="line">        key=<span class="string">&quot;canvas&quot;</span>,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 滑桿調整簽名位置</span></span><br><span class="line">    <span class="comment"># st.write(&quot;調整簽名位置&quot;)</span></span><br><span class="line">    x_offset =<span class="number">0</span><span class="comment"># st.slider(&quot;水平位置&quot;, 0, pix.width, 0)</span></span><br><span class="line">    y_offset =<span class="number">0</span><span class="comment"># st.slider(&quot;垂直位置&quot;, 0, pix.height, 0)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> canvas_result.image_data <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="comment"># 獲取簽名並處理透明背景</span></span><br><span class="line">        signature_data = canvas_result.image_data</span><br><span class="line">        signature = cv2.cvtColor(signature_data, cv2.COLOR_RGBA2BGRA)</span><br><span class="line"></span><br><span class="line">        signed_images = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> page_num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(document)):</span><br><span class="line">            page = document.load_page(page_num)</span><br><span class="line">            pix = page.get_pixmap()</span><br><span class="line">            image = Image.frombytes(<span class="string">&quot;RGB&quot;</span>, [pix.width, pix.height], pix.samples)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 將 PIL 圖像轉換為 OpenCV 圖像</span></span><br><span class="line">            open_cv_image = np.array(image)</span><br><span class="line">            open_cv_image = cv2.cvtColor(open_cv_image, cv2.COLOR_RGB2BGRA)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 簽名位置</span></span><br><span class="line">            sig_h, sig_w, _ = signature.shape</span><br><span class="line">            img_h, img_w, _ = open_cv_image.shape</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 確保簽名不超出邊界</span></span><br><span class="line">            <span class="keyword">if</span> y_offset + sig_h &gt; img_h:</span><br><span class="line">                sig_h = img_h - y_offset</span><br><span class="line">            <span class="keyword">if</span> x_offset + sig_w &gt; img_w:</span><br><span class="line">                sig_w = img_w - x_offset</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 簽名形狀匹配</span></span><br><span class="line">            resized_signature = cv2.resize(signature, (sig_w, sig_h))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 將簽名放置在圖片上</span></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">3</span>):</span><br><span class="line">                open_cv_image[y_offset:y_offset+sig_h, x_offset:x_offset+sig_w, c] = \</span><br><span class="line">                    resized_signature[:, :, c] * (resized_signature[:, :, <span class="number">3</span>] / <span class="number">255.0</span>) + \</span><br><span class="line">                    open_cv_image[y_offset:y_offset+sig_h, x_offset:x_offset+sig_w, c] * (<span class="number">1.0</span> - resized_signature[:, :, <span class="number">3</span>] / <span class="number">255.0</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 將 OpenCV 圖像轉換回 PIL 圖像</span></span><br><span class="line">            signed_image = Image.fromarray(cv2.cvtColor(open_cv_image, cv2.COLOR_BGRA2RGBA))</span><br><span class="line">            signed_images.append(signed_image)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 預覽簽名後的第一頁</span></span><br><span class="line">        <span class="comment"># st.image(signed_images[0], caption=&#x27;簽名後的 PDF 頁面預覽&#x27;, use_column_width=True)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 將簽名後的圖像保存回 PDF</span></span><br><span class="line">        pdf_output = io.BytesIO()</span><br><span class="line">        signed_images[<span class="number">0</span>].save(pdf_output, <span class="string">&quot;PDF&quot;</span>, resolution=<span class="number">100.0</span>, save_all=<span class="literal">True</span>, append_images=signed_images[<span class="number">1</span>:])</span><br><span class="line">        pdf_output.seek(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 提供下載鏈接</span></span><br><span class="line">        st.download_button(</span><br><span class="line">            label=<span class="string">&quot;下載簽名後的 PDF&quot;</span>,</span><br><span class="line">            data=pdf_output,</span><br><span class="line">            file_name=<span class="string">&quot;signed_document.pdf&quot;</span>,</span><br><span class="line">            mime=<span class="string">&quot;application/pdf&quot;</span></span><br><span class="line">        )</span><br></pre></td></tr></table></figure>
<h2 id="比較完整做法">比較完整做法</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> streamlit <span class="keyword">as</span> st</span><br><span class="line"><span class="keyword">from</span> streamlit_drawable_canvas <span class="keyword">import</span> st_canvas</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> fitz  <span class="comment"># PyMuPDF</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">st.set_page_config(</span><br><span class="line">    layout=<span class="string">&quot;wide&quot;</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">dict_pdf = &#123;</span><br><span class="line">    <span class="string">&quot;測量工程抽查表&quot;</span>: <span class="string">&quot;6-27.pdf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;土方工程抽查表&quot;</span>: <span class="string">&quot;6-29.pdf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;模板工程抽查表&quot;</span>: <span class="string">&quot;6-30.pdf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;鋼筋工程抽查表&quot;</span>: <span class="string">&quot;6-31.pdf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;其他&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">st.sidebar.title(<span class="string">&quot;<span class="github-emoji" alias="writing_hand" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/270d.png?v8">&#x270d;</span> PDF 簽名工具&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 頁面導航</span></span><br><span class="line">page = st.sidebar.selectbox(<span class="string">&quot;選擇頁面&quot;</span>, [<span class="string">&quot;手繪簽名&quot;</span>, <span class="string">&quot;查看表單&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根據選擇的頁面顯示內容</span></span><br><span class="line"><span class="keyword">if</span> page == <span class="string">&quot;手繪簽名&quot;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 設置 Streamlit 界面</span></span><br><span class="line">    <span class="comment"># st.title(&quot;PDF 簽名工具&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 指定保存的文件夾路徑</span></span><br><span class="line">    save_folder = <span class="string">&quot;saved_pdfs&quot;</span></span><br><span class="line">    os.makedirs(save_folder, exist_ok=<span class="literal">True</span>)</span><br><span class="line">    form_selection = st.sidebar.selectbox(<span class="string">&quot;選擇抽查表&quot;</span>, <span class="built_in">list</span>(dict_pdf.keys()))</span><br><span class="line"></span><br><span class="line">    file_name = <span class="string">&quot;./pdfs/&quot;</span>+dict_pdf[form_selection]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果選擇了“其他”，讓用戶上傳 PDF 文件</span></span><br><span class="line">    <span class="keyword">if</span> form_selection == <span class="string">&quot;其他&quot;</span>:</span><br><span class="line">        uploaded_file = st.file_uploader(<span class="string">&quot;上傳 PDF&quot;</span>, <span class="built_in">type</span>=[<span class="string">&quot;pdf&quot;</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 否則，讀取預定義的 PDF 文件</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            uploaded_file = f.read()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> uploaded_file:</span><br><span class="line">        <span class="keyword">if</span> form_selection == <span class="string">&quot;其他&quot;</span>:</span><br><span class="line">            pdf_bytes = uploaded_file.read()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            pdf_bytes = uploaded_file</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 讀取 PDF</span></span><br><span class="line">        document = fitz.<span class="built_in">open</span>(<span class="string">&quot;pdf&quot;</span>, pdf_bytes)</span><br><span class="line">        page = document.load_page(<span class="number">0</span>)</span><br><span class="line">        pix = page.get_pixmap(matrix=fitz.Matrix(<span class="number">2.0</span>, <span class="number">2.0</span>))  <span class="comment"># 使用 matrix 調整分辨率</span></span><br><span class="line">        original_width, original_height = pix.width, pix.height</span><br><span class="line">        background_image = Image.frombytes(<span class="string">&quot;RGB&quot;</span>, [pix.width, pix.height], pix.samples)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 繪製簽名</span></span><br><span class="line">        canvas_result = st_canvas(</span><br><span class="line">            fill_color=<span class="string">&quot;rgba(0, 0, 0, 0)&quot;</span>,  <span class="comment"># 背景填充色</span></span><br><span class="line">            stroke_width=<span class="number">3</span>,</span><br><span class="line">            stroke_color=<span class="string">&quot;black&quot;</span>,</span><br><span class="line">            background_image=background_image,</span><br><span class="line">            height=pix.height,</span><br><span class="line">            width=pix.width,</span><br><span class="line">            drawing_mode=<span class="string">&quot;freedraw&quot;</span>,</span><br><span class="line">            key=<span class="string">&quot;canvas&quot;</span>,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> canvas_result.image_data <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="comment"># 獲取簽名並處理透明背景</span></span><br><span class="line">            signature_data = canvas_result.image_data</span><br><span class="line">            signature = cv2.cvtColor(signature_data, cv2.COLOR_RGBA2BGRA)</span><br><span class="line"></span><br><span class="line">            signed_images = []</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 設置簽名位置 (預設值，可以根據需要調整)</span></span><br><span class="line">            y_offset, x_offset = <span class="number">0</span>,<span class="number">0</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> page_num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(document)):</span><br><span class="line">                page = document.load_page(page_num)</span><br><span class="line">                pix = page.get_pixmap(matrix=fitz.Matrix(<span class="number">2.0</span>, <span class="number">2.0</span>))  <span class="comment"># 使用相同的 matrix 調整分辨率</span></span><br><span class="line">                image = Image.frombytes(<span class="string">&quot;RGB&quot;</span>, [pix.width, pix.height], pix.samples)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 將 PIL 圖像轉換為 OpenCV 圖像</span></span><br><span class="line">                open_cv_image = np.array(image)</span><br><span class="line">                open_cv_image = cv2.cvtColor(open_cv_image, cv2.COLOR_RGB2BGRA)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 簽名位置</span></span><br><span class="line">                sig_h, sig_w, _ = signature.shape</span><br><span class="line">                img_h, img_w, _ = open_cv_image.shape</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 調整簽名位置以匹配新的解析度</span></span><br><span class="line">                adjusted_y_offset = <span class="built_in">int</span>((y_offset / original_height) * img_h)</span><br><span class="line">                adjusted_x_offset = <span class="built_in">int</span>((x_offset / original_width) * img_w)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 確保簽名不超出邊界</span></span><br><span class="line">                <span class="keyword">if</span> adjusted_y_offset + sig_h &gt; img_h:</span><br><span class="line">                    sig_h = img_h - adjusted_y_offset</span><br><span class="line">                <span class="keyword">if</span> adjusted_x_offset + sig_w &gt; img_w:</span><br><span class="line">                    sig_w = img_w - adjusted_x_offset</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 簽名形狀匹配</span></span><br><span class="line">                resized_signature = cv2.resize(signature, (sig_w, sig_h))</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 將簽名放置在圖片上</span></span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">3</span>):</span><br><span class="line">                    open_cv_image[adjusted_y_offset:adjusted_y_offset+sig_h, adjusted_x_offset:adjusted_x_offset+sig_w, c] = \</span><br><span class="line">                        resized_signature[:, :, c] * (resized_signature[:, :, <span class="number">3</span>] / <span class="number">255.0</span>) + \</span><br><span class="line">                        open_cv_image[adjusted_y_offset:adjusted_y_offset+sig_h, adjusted_x_offset:adjusted_x_offset+sig_w, c] * (<span class="number">1.0</span> - resized_signature[:, :, <span class="number">3</span>] / <span class="number">255.0</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 將 OpenCV 圖像轉換回 PIL 圗像</span></span><br><span class="line">                signed_image = Image.fromarray(cv2.cvtColor(open_cv_image, cv2.COLOR_BGRA2RGBA))</span><br><span class="line">                signed_images.append(signed_image)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 將簽名後的圖像保存回 PDF</span></span><br><span class="line">            pdf_output = io.BytesIO()</span><br><span class="line">            signed_images[<span class="number">0</span>].save(pdf_output, <span class="string">&quot;PDF&quot;</span>, resolution=<span class="number">100.0</span>, save_all=<span class="literal">True</span>, append_images=signed_images[<span class="number">1</span>:])</span><br><span class="line">            pdf_output.seek(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 增加“儲存”按鈕</span></span><br><span class="line">            <span class="keyword">if</span> st.button(<span class="string">&quot;儲存&quot;</span>, <span class="built_in">type</span>=<span class="string">&#x27;primary&#x27;</span>):</span><br><span class="line">                <span class="comment"># 生成保存路徑和文件名</span></span><br><span class="line">                base_file_name = form_selection <span class="keyword">if</span> form_selection != <span class="string">&quot;其他&quot;</span> <span class="keyword">else</span> <span class="string">&quot;custom&quot;</span></span><br><span class="line">                existing_files = [f <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(save_folder) <span class="keyword">if</span> f.startswith(base_file_name)]</span><br><span class="line">                file_count = <span class="built_in">len</span>(existing_files) + <span class="number">1</span></span><br><span class="line">                output_file_name = <span class="string">f&quot;<span class="subst">&#123;base_file_name&#125;</span>_<span class="subst">&#123;file_count&#125;</span>.pdf&quot;</span></span><br><span class="line">                save_path = os.path.join(save_folder, output_file_name)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 將簽名後的 PDF 文件保存到指定資料夾</span></span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(save_path, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    f.write(pdf_output.getbuffer())</span><br><span class="line">                st.success(<span class="string">f&quot;已將簽名後的 PDF 保存到: <span class="subst">&#123;save_path&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> page == <span class="string">&quot;查看表單&quot;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 指定保存的文件夾路徑</span></span><br><span class="line">    save_folder = <span class="string">&quot;saved_pdfs&quot;</span></span><br><span class="line">    os.makedirs(save_folder, exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 獲取所有已保存的表單</span></span><br><span class="line">    saved_forms = os.listdir(save_folder)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根據文件名分類表單</span></span><br><span class="line">    classified_forms = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> form <span class="keyword">in</span> saved_forms:</span><br><span class="line">        form_type = form.rsplit(<span class="string">&#x27;_&#x27;</span>, <span class="number">1</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> form_type <span class="keyword">not</span> <span class="keyword">in</span> classified_forms:</span><br><span class="line">            classified_forms[form_type] = []</span><br><span class="line">        classified_forms[form_type].append(form)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 將分類表單轉換為 DataFrame</span></span><br><span class="line">    df = pd.DataFrame(</span><br><span class="line">        [(key, form) <span class="keyword">for</span> key, forms <span class="keyword">in</span> classified_forms.items() <span class="keyword">for</span> form <span class="keyword">in</span> forms],</span><br><span class="line">        columns=[<span class="string">&quot;表單類型&quot;</span>, <span class="string">&quot;文件名&quot;</span>]</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 顯示 DataFrame 並允許用戶選擇要顯示的表單</span></span><br><span class="line">    selected_forms = st.multiselect(<span class="string">&quot;選擇要顯示的表單&quot;</span>, df[<span class="string">&quot;文件名&quot;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 顯示選擇的表單</span></span><br><span class="line">    <span class="keyword">if</span> selected_forms:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> form <span class="keyword">in</span> selected_forms:</span><br><span class="line">            form_path = os.path.join(save_folder, form)</span><br><span class="line">            </span><br><span class="line">            st.markdown(<span class="string">f&quot;####  <span class="subst">&#123;form&#125;</span>&quot;</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 使用 PyMuPDF 加載 PDF 文件</span></span><br><span class="line">            pdf_doc = fitz.<span class="built_in">open</span>(form_path)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 顯示每一頁的圖像內容</span></span><br><span class="line">            <span class="keyword">for</span> page_num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(pdf_doc)):</span><br><span class="line">                page = pdf_doc.load_page(page_num)</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 將 PDF 頁面轉換為圖像</span></span><br><span class="line">                pix = page.get_pixmap(matrix=fitz.Matrix(<span class="number">2.0</span>, <span class="number">2.0</span>))  <span class="comment"># 使用相同的 matrix 調整分辨率</span></span><br><span class="line">                img = Image.frombytes(<span class="string">&quot;RGB&quot;</span>, [pix.width, pix.height], pix.samples)</span><br><span class="line">                </span><br><span class="line">                st.image(img, caption=<span class="string">f&quot;第 <span class="subst">&#123;page_num + <span class="number">1</span>&#125;</span> 頁&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        st.write(<span class="string">&quot;目前沒有已保存的表單。&quot;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="以前做的專案">以前做的專案</h2>
<p><a href="https://hankvba.blogspot.com/2023/10/excel-vba.html">Excel
VBA@簽名檔小工具</a></p>
<p>去年曾經有把簽名檔做成很多不同照片來調整大小及位置進行貼上，不過經廣大網友的檢視後，發現這樣委員還是會不喜歡，還是先做個紀錄給大家參考參考...</p>
]]></content>
      <categories>
        <category>專案成果</category>
      </categories>
      <tags>
        <tag>Streamlit</tag>
      </tags>
  </entry>
  <entry>
    <title>Streamlit建立權限控管機制</title>
    <url>/posts/777227760/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>權限控管顧名思義則是讓有登記的人可以進來雲端網頁中操作介面，這對於一些公司內部才能操作的內容有很大的幫助。</p>
</blockquote>
<p>權限控管基本功能:</p>
<ul>
<li>註冊</li>
<li>登入</li>
<li>忘記密碼</li>
<li>重置密碼</li>
</ul>
<p>發送重置密碼時會隨意產生一組token，內容會包在電子郵件中寄送，這也算是一種多因素認證的機制。</p>
<p>本篇文章前端介面採用Python的Streamlit套件實作，後端邏輯則採用GAS實作，資料庫則採用GoogleSpreadSheet儲存。</p>
<div class="note info"><p>正常的帳號密碼實作流程不建議採用明碼儲存，這裡只是一個實作的經驗，看之後密碼的部分要加鹽還是做哈希加密都可以再追加進去。</p>
</div>
<span id="more"></span>
<h2 id="gas端">GAS端</h2>
<p>先新增一個SpreadSheet並且將工作表設定如下:</p>
<h3 id="users">Users</h3>
<table>
<thead>
<tr class="header">
<th>email</th>
<th>username</th>
<th>password</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
</tbody>
</table>
<h3 id="resettokens">ResetTokens</h3>
<table>
<thead>
<tr class="header">
<th>email</th>
<th>token</th>
<th>timestamp</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
</tbody>
</table>
<p>timestamp在GAS中的目的是為了要取得24小時內的token才能有效更改新密碼</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">doPost</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> action = e.<span class="property">parameter</span>.<span class="property">action</span>;</span><br><span class="line">  <span class="keyword">var</span> email = e.<span class="property">parameter</span>.<span class="property">email</span>;</span><br><span class="line">  <span class="keyword">var</span> username = e.<span class="property">parameter</span>.<span class="property">username</span>;</span><br><span class="line">  <span class="keyword">var</span> password = e.<span class="property">parameter</span>.<span class="property">password</span>;</span><br><span class="line">  <span class="keyword">var</span> newPassword = e.<span class="property">parameter</span>.<span class="property">newPassword</span>;</span><br><span class="line">  <span class="keyword">var</span> token=e.<span class="property">parameter</span>.<span class="property">token</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (action == <span class="string">&quot;register&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">registerUser</span>(email, username, password);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action == <span class="string">&quot;login&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">loginUser</span>(username, password);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action == <span class="string">&quot;forgotPassword&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">forgotPassword</span>(email);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action == <span class="string">&quot;updatePassword&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">updatePassword</span>(username,token, newPassword);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;error&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Invalid action&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;error&quot;</span>, <span class="attr">message</span>: error.<span class="property">message</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">registerUser</span>(<span class="params">email, username, password</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> sheet = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&#x27;Users&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> data = sheet.<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (data[i][<span class="number">0</span>] == email) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;error&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Email already registered&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  sheet.<span class="title function_">appendRow</span>([email, username, password]);</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;success&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;User registered successfully&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loginUser</span>(<span class="params">username, password</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> sheet = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&#x27;Users&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> data = sheet.<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (data[i][<span class="number">1</span>] == username &amp;&amp; data[i][<span class="number">2</span>] == password) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;success&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Login successful&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;error&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Invalid username or password&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updatePassword</span>(<span class="params">email, token, newPassword</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> sheet = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&#x27;ResetTokens&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> data = sheet.<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line">  <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">  <span class="keyword">var</span> tokenValid = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (data[i][<span class="number">0</span>] == email &amp;&amp; data[i][<span class="number">1</span>] == token) &#123;</span><br><span class="line">      <span class="keyword">var</span> timestamp = data[i][<span class="number">2</span>];</span><br><span class="line">      <span class="keyword">if</span> (now - timestamp &lt;= <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>) &#123;  <span class="comment">// Token valid for 24 hours</span></span><br><span class="line">        tokenValid = <span class="literal">true</span>;</span><br><span class="line">        sheet.<span class="title function_">getRange</span>(i+<span class="number">1</span>, <span class="number">3</span>).<span class="title function_">setValue</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (tokenValid) &#123;</span><br><span class="line">    <span class="keyword">var</span> userSheet =<span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&#x27;Users&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> userData = userSheet.<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; userData.<span class="property">length</span>; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (userData[j][<span class="number">0</span>] == email) &#123;</span><br><span class="line">        userSheet.<span class="title function_">getRange</span>(j + <span class="number">1</span>, <span class="number">3</span>).<span class="title function_">setValue</span>(newPassword);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;success&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Password updated successfully&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;error&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Invalid token or email&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">forgotPassword</span>(<span class="params">email</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> sheet =<span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&#x27;Users&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> data = sheet.<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (data[i][<span class="number">0</span>] == email) &#123;</span><br><span class="line">      <span class="comment">// Generate a random token for password reset</span></span><br><span class="line">      <span class="keyword">var</span> token = <span class="title function_">generateToken</span>();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Store the token and timestamp in a separate sheet (or update the existing sheet structure)</span></span><br><span class="line">      <span class="title function_">storeResetToken</span>(email, token);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Send the reset email</span></span><br><span class="line">      <span class="title function_">sendResetEmail</span>(email, token);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;success&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Password reset email sent&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;error&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Email not found&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateToken</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> charset = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> token = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> randomIndex = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * charset.<span class="property">length</span>);</span><br><span class="line">    token += charset[randomIndex];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> token;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">storeResetToken</span>(<span class="params">email, token</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> sheet = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&#x27;ResetTokens&#x27;</span>);</span><br><span class="line">  <span class="comment">// if (!sheet) &#123;</span></span><br><span class="line">    <span class="comment">// sheet = SpreadsheetApp.getActiveSpreadsheet().insertSheet(&#x27;ResetTokens&#x27;);</span></span><br><span class="line">    <span class="comment">// sheet.appendRow([&#x27;Email&#x27;, &#x27;Token&#x27;, &#x27;Timestamp&#x27;]);</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="keyword">var</span> timestamp = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">  sheet.<span class="title function_">appendRow</span>([email, token, timestamp]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sendResetEmail</span>(<span class="params">email, resetUrl</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> subject = <span class="string">&#x27;Password Reset Request&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> body = <span class="string">&#x27;You requested a password reset. Click the link below to reset your password:\n\n&#x27;</span> + resetUrl + <span class="string">&#x27;\n\nIf you did not request a password reset, please ignore this email.&#x27;</span>;</span><br><span class="line">  <span class="title class_">GmailApp</span>.<span class="title function_">sendEmail</span>(email, subject, body);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>建立完成之後發布成為WebApp，會得到一串URL，此為Python中需要引入的<strong>BASE_URL</strong></p>
<h2 id="python端">Python端</h2>
<h3 id="app.py">app.py</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> streamlit <span class="keyword">as</span> st</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">BASE_URL = <span class="string">&#x27;YOUR_GAS_WEB_APP_URL&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register_user</span>(<span class="params">email, username, password</span>):</span><br><span class="line">    response = requests.post(BASE_URL, data=&#123;</span><br><span class="line">        <span class="string">&#x27;action&#x27;</span>: <span class="string">&#x27;register&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>: email,</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: username,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: password</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> response.json()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login_user</span>(<span class="params">username, password</span>):</span><br><span class="line">    response = requests.post(BASE_URL, data=&#123;</span><br><span class="line">        <span class="string">&#x27;action&#x27;</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: username,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: password</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> response.json()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">forgot_password</span>(<span class="params">email</span>):</span><br><span class="line">    response = requests.post(BASE_URL, data=&#123;</span><br><span class="line">        <span class="string">&#x27;action&#x27;</span>: <span class="string">&#x27;forgotPassword&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>: email</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> response.json()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update_password</span>(<span class="params">username,token, new_password</span>):</span><br><span class="line">    response = requests.post(BASE_URL, data=&#123;</span><br><span class="line">        <span class="string">&#x27;action&#x27;</span>: <span class="string">&#x27;updatePassword&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: username,</span><br><span class="line">        <span class="string">&#x27;token&#x27;</span>:token,</span><br><span class="line">        <span class="string">&#x27;newPassword&#x27;</span>: new_password</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> response.json()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    st.title(<span class="string">&quot;User Management System&quot;</span>)</span><br><span class="line"></span><br><span class="line">    menu = [<span class="string">&quot;Home&quot;</span>, <span class="string">&quot;Login&quot;</span>, <span class="string">&quot;Register&quot;</span>, <span class="string">&quot;Forgot Password&quot;</span>, <span class="string">&quot;Update Password&quot;</span>]</span><br><span class="line">    choice = st.sidebar.selectbox(<span class="string">&quot;Menu&quot;</span>, menu)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> choice == <span class="string">&quot;Home&quot;</span>:</span><br><span class="line">        st.subheader(<span class="string">&quot;Home&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="string">&quot;Login&quot;</span>:</span><br><span class="line">        st.subheader(<span class="string">&quot;Login&quot;</span>)</span><br><span class="line">        username = st.text_input(<span class="string">&quot;Username&quot;</span>)</span><br><span class="line">        password = st.text_input(<span class="string">&quot;Password&quot;</span>, <span class="built_in">type</span>=<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> st.button(<span class="string">&quot;Login&quot;</span>):</span><br><span class="line">            result = login_user(username, password)</span><br><span class="line">            st.write(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="string">&quot;Register&quot;</span>:</span><br><span class="line">        st.subheader(<span class="string">&quot;Register&quot;</span>)</span><br><span class="line">        email = st.text_input(<span class="string">&quot;Email&quot;</span>)</span><br><span class="line">        username = st.text_input(<span class="string">&quot;Username&quot;</span>)</span><br><span class="line">        password = st.text_input(<span class="string">&quot;Password&quot;</span>, <span class="built_in">type</span>=<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> st.button(<span class="string">&quot;Register&quot;</span>):</span><br><span class="line">            result = register_user(email, username, password)</span><br><span class="line">            st.write(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="string">&quot;Forgot Password&quot;</span>:</span><br><span class="line">        st.subheader(<span class="string">&quot;Forgot Password&quot;</span>)</span><br><span class="line">        email = st.text_input(<span class="string">&quot;Email&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> st.button(<span class="string">&quot;Submit&quot;</span>):</span><br><span class="line">            result = forgot_password(email)</span><br><span class="line">            st.write(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="string">&quot;Update Password&quot;</span>:</span><br><span class="line">        st.subheader(<span class="string">&quot;Update Password&quot;</span>)</span><br><span class="line">        username = st.text_input(<span class="string">&quot;Username&quot;</span>)</span><br><span class="line">        token=st.text_input(<span class="string">&quot;Token&quot;</span>)</span><br><span class="line">        new_password = st.text_input(<span class="string">&quot;New Password&quot;</span>, <span class="built_in">type</span>=<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> st.button(<span class="string">&quot;Update&quot;</span>):</span><br><span class="line">            result = update_password(username, token,new_password)</span><br><span class="line">            st.write(result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>將這些內容用Streamlit run app.py 即可看到使用介面</p>
<figure>
<img src="https://hackmd.io/_uploads/SkGgaL_LR.png" alt="image" />
<figcaption aria-hidden="true">image</figcaption>
</figure>
<p>後續要利用的時候就把登入成功的內容放置於session_state中先存起來，再顯示主要操作的介面就可以了!</p>
<h2 id="哈希加密算法">哈希加密算法</h2>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hashPassword</span>(<span class="params">password</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> rawHash = <span class="title class_">Utilities</span>.<span class="title function_">computeDigest</span>(<span class="title class_">Utilities</span>.<span class="property">DigestAlgorithm</span>.<span class="property">SHA_256</span>, password);</span><br><span class="line">  <span class="keyword">var</span> hash = rawHash.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">byte</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> v = (byte &lt; <span class="number">0</span> ? byte + <span class="number">256</span> : byte).<span class="title function_">toString</span>(<span class="number">16</span>);</span><br><span class="line">    <span class="keyword">return</span> v.<span class="property">length</span> == <span class="number">1</span> ? <span class="string">&#x27;0&#x27;</span> + v : v;</span><br><span class="line">  &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  <span class="keyword">return</span> hash;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">registerUser</span>(<span class="params">email, username, password</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> sheet = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&#x27;Users&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> data = sheet.<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (data[i][<span class="number">0</span>] == email) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;error&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Email already registered&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> hashedPassword = <span class="title function_">hashPassword</span>(password);</span><br><span class="line"></span><br><span class="line">  sheet.<span class="title function_">appendRow</span>([email, username, hashedPassword]);</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;success&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;User registered successfully&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loginUser</span>(<span class="params">username, password</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> sheet = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&#x27;Users&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> data = sheet.<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> hashedPassword = <span class="title function_">hashPassword</span>(password);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (data[i][<span class="number">1</span>] == username &amp;&amp; data[i][<span class="number">2</span>] == hashedPassword) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;success&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Login successful&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;error&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Invalid username or password&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updatePassword</span>(<span class="params">email, token, newPassword</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> sheet = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&#x27;ResetTokens&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> data = sheet.<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line">  <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">  <span class="keyword">var</span> tokenValid = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (data[i][<span class="number">0</span>] == email &amp;&amp; data[i][<span class="number">1</span>] == token) &#123;</span><br><span class="line">      <span class="keyword">var</span> timestamp = data[i][<span class="number">2</span>];</span><br><span class="line">      <span class="keyword">if</span> (now - timestamp &lt;= <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>) &#123;  <span class="comment">// Token valid for 24 hours</span></span><br><span class="line">        tokenValid = <span class="literal">true</span>;</span><br><span class="line">        sheet.<span class="title function_">getRange</span>(i + <span class="number">1</span>, <span class="number">3</span>).<span class="title function_">setValue</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (tokenValid) &#123;</span><br><span class="line">    <span class="keyword">var</span> userSheet = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">getActiveSpreadsheet</span>().<span class="title function_">getSheetByName</span>(<span class="string">&#x27;Users&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> userData = userSheet.<span class="title function_">getDataRange</span>().<span class="title function_">getValues</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> hashedPassword = <span class="title function_">hashPassword</span>(newPassword);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; userData.<span class="property">length</span>; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (userData[j][<span class="number">0</span>] == email) &#123;</span><br><span class="line">        userSheet.<span class="title function_">getRange</span>(j + <span class="number">1</span>, <span class="number">3</span>).<span class="title function_">setValue</span>(hashedPassword);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;success&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Password updated successfully&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">status</span>: <span class="string">&quot;error&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Invalid token or email&quot;</span> &#125;)).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Streamlit</tag>
      </tags>
  </entry>
  <entry>
    <title>Streamlit建置GoogleSheet簡易資料庫</title>
    <url>/posts/639809757/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<p>Streamlit是使用python語言的前端套件，他最大的好處是就能透過套件本身程式碼生成一篇篇還算能看的使用者介面，對於Html、CSS、Javascript等前端語言感到不舒服的開發者可以妥善利用，在部署上難度也不高，幾乎可以一鍵達成。</p>
<p>除了python本身內鍵已經有本地端sqlite可以進行資料存儲，如果資料需要上雲的話就會需要額外找尋雲端資料庫來進行資料存放，標準的關聯式有MySQL、postgreSQL、SQLserver等等比較常見的工具、非關聯式資料庫則可以透過mongoDB、firestore等等工具進行挑選。</p>
<blockquote>
<p>本篇要介紹的內容是針對比較簡易的前端介面，可以用Google提供的GoogleSheet來進行資料存放，並且透過GoogleAppScripts來做後端語言進行操作。</p>
</blockquote>
<span id="more"></span>
<h2 id="基本api概念">基本API概念</h2>
<p>所謂前端與後端分離開發，就是透過API的方式進行資料交換，API就是一串網址(URL)外加一些夾帶的參數，參數可以是純文字、也可以是物件，然而物件的部分又可分為XML或JSON，這兩項是最常被拿來使用於API的資料交換，包含輸入到後端存放資料或者是從資料庫取出資料到前端進行渲染。</p>
<p>公共工程常用的估價系統(PCCES)便是以XML進行資料交換，詳情可見<a
href="https://hankvba.blogspot.com/2024/02/excel-vba-pcces.html">ExcelVBA@PCCES契約項目後處理</a>，在此不多做說明</p>
<h2 id="json">JSON</h2>
<p>大多數的第三方API都是採用JSON格式進行傳輸，這也是本篇主要資料格式，關於JSON的格式通常是以鍵-值對的方式儲存，也就是所謂的key-value，要進行資料取用或組裝時特別的方便，這也是為什麼會選用他來做為我在streamlit及GAS中的交換媒介。</p>
<p>JSON資料可以分為GAS對象、JSON字串、python對象，每個資料都可以互相轉移，JSON字串主要是在API中所夾帶的字串，其餘python對象、GAS對象則是依照不同語言解析成相對應的物件。</p>
<p>萬一遇見處理多巢階層的過程可以藉由扁平化(將巢狀鍵值對處理到頂層)的方法方便資料取用，也可以透過反扁平化的方法將原本的資料恢復原狀。</p>
<h3 id="在gas中關於json格式的轉換">在GAS中關於JSON格式的轉換</h3>
<h4 id="json.parse">JSON.parse()</h4>
<p><code>JSON.parse()</code> 方法用於將 JSON 字串解析為 JavaScript
物件。它接受一個合法的 JSON 字串並返回解析後的 JavaScript 值。</p>
<h4 id="json.stringify">JSON.stringify()</h4>
<p><code>JSON.stringify()</code> 方法用於將 JavaScript 物件轉換為 JSON
字串。它接受一個 JavaScript 物件並返回相應的 JSON 格式字串。</p>
<h3 id="在python中關於json格式的轉換">在Python中關於JSON格式的轉換</h3>
<h4 id="json.dumps">json.dumps()</h4>
<p><code>json.dumps()</code> 方法用於將 Python 物件轉換為 JSON
字串。它接受一個 Python 物件並返回相應的 JSON 格式字串。</p>
<h4 id="json.loads">json.loads()</h4>
<p><code>json.loads()</code> 方法用於將 JSON 字串解析為 Python
物件。它接受一個合法的 JSON 字串並返回解析後的 Python 值。</p>
<h4 id="json.load目前沒用到">json.load()&gt;目前沒用到</h4>
<p><code>json.load()</code> 方法用於從檔案中讀取 JSON 資料並將其解析為
Python 物件。它接受一個可讀取的檔案物件，並返回解析後的 Python 值。</p>
<h3 id="python對象操作">Python對象操作</h3>
<h4 id="單層">單層</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = json.loads(json_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 存取一層結構</span></span><br><span class="line">name = data[<span class="string">&#x27;person&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">age = data[<span class="string">&#x27;person&#x27;</span>][<span class="string">&#x27;age&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 存取多層結構</span></span><br><span class="line">city = data[<span class="string">&#x27;person&#x27;</span>][<span class="string">&#x27;address&#x27;</span>][<span class="string">&#x27;city&#x27;</span>]</span><br><span class="line">zipcode = data[<span class="string">&#x27;person&#x27;</span>][<span class="string">&#x27;address&#x27;</span>][<span class="string">&#x27;zipcode&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(name)     <span class="comment"># Output: John</span></span><br><span class="line"><span class="built_in">print</span>(age)      <span class="comment"># Output: 30</span></span><br><span class="line"><span class="built_in">print</span>(city)     <span class="comment"># Output: New York</span></span><br><span class="line"><span class="built_in">print</span>(zipcode)  <span class="comment"># Output: 10001</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="多層">多層</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">json_str = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;person&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;name&quot;: &quot;John&quot;,</span></span><br><span class="line"><span class="string">    &quot;age&quot;: 30,</span></span><br><span class="line"><span class="string">    &quot;address&quot;: &#123;</span></span><br><span class="line"><span class="string">      &quot;city&quot;: &quot;New York&quot;,</span></span><br><span class="line"><span class="string">      &quot;zipcode&quot;: &quot;10001&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_json</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(data, <span class="built_in">dict</span>):</span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> data.items():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;Key: <span class="subst">&#123;key&#125;</span>, Value: <span class="subst">&#123;value&#125;</span>&#x27;</span>)</span><br><span class="line">            process_json(value)  <span class="comment"># 遞迴處理值</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">isinstance</span>(data, <span class="built_in">list</span>):</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">            process_json(item)  <span class="comment"># 遞迴處理列表中的元素</span></span><br><span class="line"></span><br><span class="line">data = json.loads(json_str)</span><br><span class="line">process_json(data)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="gas對象操作">GAS對象操作</h2>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">name</span>: <span class="string">&quot;John&quot;</span>, <span class="attr">age</span>: <span class="number">30</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> jsonString = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj);</span><br><span class="line"></span><br><span class="line"><span class="comment">//取值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name = obj.<span class="property">name</span>;</span><br><span class="line"><span class="keyword">var</span> age = obj[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//設置</span></span><br><span class="line"></span><br><span class="line">obj.<span class="property">name</span> = <span class="string">&#x27;Alice&#x27;</span>;</span><br><span class="line">obj[<span class="string">&#x27;age&#x27;</span>] = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//循環</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span> (obj.<span class="title function_">hasOwnProperty</span>(key)) &#123;</span><br><span class="line">        <span class="title class_">Logger</span>.<span class="title function_">log</span>(key + <span class="string">&#x27;: &#x27;</span> + obj[key]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="綜合操作">綜合操作</h2>
<h3 id="streamlit">streamlit</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> streamlit <span class="keyword">as</span> st</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> date, datetime</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟一些 session state 数据</span></span><br><span class="line">st.session_state.current_page = <span class="string">&quot;render_page0&quot;</span></span><br><span class="line">st.session_state.submitted = <span class="literal">False</span></span><br><span class="line">st.session_state.costs = &#123;</span><br><span class="line">    <span class="string">&quot;open_channel&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;渠道工程&quot;</span>, <span class="string">&quot;unit_cost&quot;</span>: <span class="number">0</span>, <span class="string">&quot;length&quot;</span>: <span class="number">0</span>, <span class="string">&quot;total_cost&quot;</span>: <span class="number">0</span>&#125;,</span><br><span class="line">    <span class="string">&quot;bridge&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;版橋工程&quot;</span>, <span class="string">&quot;unit_cost&quot;</span>: <span class="number">0</span>, <span class="string">&quot;quantity&quot;</span>: <span class="number">0</span>, <span class="string">&quot;total_cost&quot;</span>: <span class="number">0</span>&#125;,</span><br><span class="line">    <span class="string">&quot;wall&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;擋土牆&quot;</span>, <span class="string">&quot;unit_cost&quot;</span>: <span class="number">0</span>, <span class="string">&quot;length&quot;</span>: <span class="number">0</span>, <span class="string">&quot;total_cost&quot;</span>: <span class="number">0</span>&#125;,</span><br><span class="line">    <span class="string">&quot;road&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;道路工程&quot;</span>, <span class="string">&quot;unit_cost&quot;</span>: <span class="number">0</span>, <span class="string">&quot;quantity&quot;</span>: <span class="number">0</span>, <span class="string">&quot;total_cost&quot;</span>: <span class="number">0</span>&#125;,</span><br><span class="line">    <span class="string">&quot;falsework&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;版樁工程&quot;</span>, <span class="string">&quot;unit_cost&quot;</span>: <span class="number">0</span>, <span class="string">&quot;quantity&quot;</span>: <span class="number">0</span>, <span class="string">&quot;total_cost&quot;</span>: <span class="number">0</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line">st.session_state.totalcost = <span class="number">0</span></span><br><span class="line">st.session_state.inf = &#123;</span><br><span class="line">    <span class="string">&quot;work_place&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;work_place2&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;work_station&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;work_name&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;work_benefit&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;work_place_detail&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;work_water_check&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">&quot;work_start_date&quot;</span>: date.today(),</span><br><span class="line">    <span class="string">&quot;work_end_date&quot;</span>: date.today(),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义 JSON 序列化器，用于处理日期字段</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DateTimeEncoder</span>(json.JSONEncoder):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">default</span>(<span class="params">self, obj</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(obj, (datetime, date)):</span><br><span class="line">            <span class="keyword">return</span> obj.isoformat()</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>().default(obj)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个函数，将 st.session_state 转换为 JSON</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">session_state_to_json</span>():</span><br><span class="line">    selected_fields = [<span class="string">&quot;costs&quot;</span>, <span class="string">&quot;inf&quot;</span>] <span class="comment"># 指定需要转换的字段</span></span><br><span class="line">    session_state_dict = &#123;key: value <span class="keyword">for</span> key, value <span class="keyword">in</span> st.session_state.items()<span class="keyword">if</span> key <span class="keyword">in</span> selected_fields&#125;</span><br><span class="line">    json_data = json.dumps(session_state_dict, cls=DateTimeEncoder)</span><br><span class="line">    <span class="keyword">return</span> json_data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用函数并展示结果</span></span><br><span class="line">json_result = session_state_to_json()</span><br><span class="line">st.write(st.session_state)</span><br><span class="line">st.write(json_result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> st.button(<span class="string">&quot;Submit&quot;</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 設置 Google Apps Script Web 應用程式的 URL</span></span><br><span class="line">    url = <span class="string">&quot;your_gas_url&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 發送 POST 請求並傳遞 JSON 資料</span></span><br><span class="line">    response = requests.post(url, data=json_result)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 檢查請求是否成功</span></span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        st.write(<span class="string">&quot;Request successful!&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        st.write(<span class="string">&quot;Error:&quot;</span>, response.status_code)</span><br></pre></td></tr></table></figure>
<h3 id="gas">GAS</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义Google Sheets的ID</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SHEET_ID</span> = <span class="string">&#x27;your_sheet_id&#x27;</span>; <span class="comment">// 替换为您的Google Sheets ID</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">doPost</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="comment">// 从 POST 请求中获取 JSON 字符串</span></span><br><span class="line">  <span class="keyword">var</span> jsonString = e.<span class="property">postData</span>.<span class="property">contents</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 解析 JSON 字符串为对象</span></span><br><span class="line">  <span class="keyword">var</span> dataOrigin = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(jsonString);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> data = <span class="title function_">flattenObject</span>(dataOrigin);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取活动工作表</span></span><br><span class="line">  <span class="keyword">var</span> ss = <span class="title class_">SpreadsheetApp</span>.<span class="title function_">openById</span>(<span class="variable constant_">SHEET_ID</span>);</span><br><span class="line">  <span class="keyword">var</span> sheet = ss.<span class="title function_">getActiveSheet</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 获取最后一行，以便在末尾添加新数据</span></span><br><span class="line">  <span class="keyword">var</span> lastRow = sheet.<span class="title function_">getLastRow</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 将数据写入工作表的下一行</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> data) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> columnIndex = <span class="title function_">getColumnIndex</span>(sheet, key);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (columnIndex === -<span class="number">1</span>) &#123; <span class="comment">// 如果列不存在，则创建新列</span></span><br><span class="line">      columnIndex = sheet.<span class="title function_">getLastColumn</span>() + <span class="number">1</span>;</span><br><span class="line">      sheet.<span class="title function_">getRange</span>(<span class="number">1</span>, columnIndex).<span class="title function_">setValue</span>(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (lastRow===<span class="number">0</span> )&#123;</span><br><span class="line">      sheet.<span class="title function_">getRange</span>(lastRow + <span class="number">2</span>, columnIndex).<span class="title function_">setValue</span>(data[key]);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      sheet.<span class="title function_">getRange</span>(lastRow + <span class="number">1</span>, columnIndex).<span class="title function_">setValue</span>(data[key]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 返回回应给客户端，这是可选的</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(<span class="string">&#x27;Success&#x27;</span>).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">TEXT</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取列的索引，如果不存在，则返回-1</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getColumnIndex</span>(<span class="params">sheet, columnName</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> maxColumns = sheet.<span class="title function_">getMaxColumns</span>(); <span class="comment">// 获取工作表的最大列数</span></span><br><span class="line">  <span class="keyword">if</span> (maxColumns &lt; <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>; <span class="comment">// 如果没有列存在，则直接返回 -1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> headersRange = sheet.<span class="title function_">getRange</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, maxColumns);</span><br><span class="line">  <span class="keyword">var</span> headersValues = headersRange.<span class="title function_">getValues</span>()[<span class="number">0</span>]; <span class="comment">// 只获取第一行数据</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; headersValues.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (headersValues[i] === columnName) &#123;</span><br><span class="line">      <span class="keyword">return</span> i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> -<span class="number">1</span>; <span class="comment">// 如果找不到，则返回 -1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个扁平化嵌套对象的函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flattenObject</span>(<span class="params">obj, parentKey = <span class="string">&#x27;&#x27;</span></span>) &#123;</span><br><span class="line">  <span class="comment">// 检查 obj 是否存在且不为 undefined 或 null</span></span><br><span class="line">  <span class="keyword">if</span> (!obj || <span class="keyword">typeof</span> obj !== <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">let</span> result = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [key, value] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(obj)) &#123;</span><br><span class="line">    <span class="keyword">const</span> newKey = parentKey ? <span class="string">`<span class="subst">$&#123;parentKey&#125;</span>.<span class="subst">$&#123;key&#125;</span>`</span> : key;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> value === <span class="string">&#x27;object&#x27;</span> &amp;&amp; value !== <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> flattened = <span class="title function_">flattenObject</span>(value, newKey);</span><br><span class="line">      result = &#123; ...result, ...flattened &#125;;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      result[newKey] = value;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="json物件特殊處理">JSON物件特殊處理</h2>
<h3 id="資料扁平化">資料扁平化</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">doPost</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> jsonData = &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;John&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">30</span>,<span class="string">&quot;address&quot;</span>:&#123;<span class="string">&quot;city&quot;</span>:<span class="string">&quot;New York&quot;</span>,<span class="string">&quot;country&quot;</span>:<span class="string">&quot;USA&quot;</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 扁平化对象</span></span><br><span class="line">  <span class="keyword">const</span> flattenedObject = <span class="title function_">flattenObject</span>(jsonData);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 将扁平化后的对象转换为 JSON 字符串</span></span><br><span class="line">  <span class="keyword">const</span> jsonString = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(flattenedObject);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 返回 JSON 格式的数据</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">ContentService</span>.<span class="title function_">createTextOutput</span>(jsonString).<span class="title function_">setMimeType</span>(<span class="title class_">ContentService</span>.<span class="property">MimeType</span>.<span class="property">JSON</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个扁平化嵌套对象的函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flattenObject</span>(<span class="params">obj, parentKey = <span class="string">&#x27;&#x27;</span></span>) &#123;</span><br><span class="line">  <span class="comment">// 检查 obj 是否存在且不为 undefined 或 null</span></span><br><span class="line">  <span class="keyword">if</span> (!obj || <span class="keyword">typeof</span> obj !== <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">let</span> result = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [key, value] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(obj)) &#123;</span><br><span class="line">    <span class="keyword">const</span> newKey = parentKey ? <span class="string">`<span class="subst">$&#123;parentKey&#125;</span>.<span class="subst">$&#123;key&#125;</span>`</span> : key;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> value === <span class="string">&#x27;object&#x27;</span> &amp;&amp; value !== <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> flattened = <span class="title function_">flattenObject</span>(value, newKey);</span><br><span class="line">      result = &#123; ...result, ...flattened &#125;;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      result[newKey] = value;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> nestedObject = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="attr">address</span>: &#123;</span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;New York&quot;</span>,</span><br><span class="line">    <span class="attr">country</span>: <span class="string">&quot;USA&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> flattenedObject = <span class="title function_">flattenObject</span>(nestedObject);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(flattenedObject);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(flattenedObject))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">values</span>(flattenedObject))</span><br><span class="line"></span><br><span class="line"><span class="comment">//[name,age,address.city,address.country]</span></span><br><span class="line"><span class="comment">//[John,30,New York,USA]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="資料扁平化回復">資料扁平化回復</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">unflattenObject</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">  <span class="comment">// 创建一个新的对象来存储恢复后的数据</span></span><br><span class="line">  <span class="keyword">let</span> result = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 遍历扁平化后的对象</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Object</span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(obj, key)) &#123;</span><br><span class="line">      <span class="comment">// 将键名拆分成各级别的嵌套键名</span></span><br><span class="line">      <span class="keyword">const</span> keys = key.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">      <span class="keyword">let</span> nestedObj = result;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 迭代嵌套键名，并在新对象中重新创建嵌套结构</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; keys.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> nestedKey = keys[i];</span><br><span class="line">        <span class="keyword">if</span> (i === keys.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="comment">// 如果是最后一级键名，直接将值赋给最后一级键</span></span><br><span class="line">          nestedObj[nestedKey] = obj[key];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 如果不是最后一级键名，检查是否需要创建嵌套对象</span></span><br><span class="line">          nestedObj[nestedKey] = nestedObj[nestedKey] || &#123;&#125;;</span><br><span class="line">          nestedObj = nestedObj[nestedKey];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="vba部分">VBA部分</h2>
<blockquote>
<p>只是先做紀錄，之後再跟collection的資料格式一起介紹</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> TestDictionary()</span><br><span class="line">    <span class="keyword">Dim</span> jsonData <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line">    <span class="keyword">Set</span> jsonData = CreateObject(<span class="string">&quot;Scripting.Dictionary&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; 添加?值?</span></span><br><span class="line">    jsonData(<span class="string">&quot;name&quot;</span>) = <span class="string">&quot;John&quot;</span></span><br><span class="line">    jsonData(<span class="string">&quot;age&quot;</span>) = <span class="number">30</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; 添加嵌套的字典?象</span></span><br><span class="line">    <span class="keyword">Dim</span> address <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line">    <span class="keyword">Set</span> address = CreateObject(<span class="string">&quot;Scripting.Dictionary&quot;</span>)</span><br><span class="line">    address(<span class="string">&quot;city&quot;</span>) = <span class="string">&quot;New York&quot;</span></span><br><span class="line">    address(<span class="string">&quot;country&quot;</span>) = <span class="string">&quot;USA&quot;</span></span><br><span class="line">    <span class="keyword">Set</span> jsonData(<span class="string">&quot;address&quot;</span>) = address</span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; ???值?</span></span><br><span class="line">    Debug.Print <span class="string">&quot;Name: &quot;</span> &amp; jsonData(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">    Debug.Print <span class="string">&quot;Age: &quot;</span> &amp; jsonData(<span class="string">&quot;age&quot;</span>)</span><br><span class="line">    Debug.Print <span class="string">&quot;City: &quot;</span> &amp; jsonData(<span class="string">&quot;address&quot;</span>)(<span class="string">&quot;city&quot;</span>)</span><br><span class="line">    Debug.Print <span class="string">&quot;Country: &quot;</span> &amp; jsonData(<span class="string">&quot;address&quot;</span>)(<span class="string">&quot;country&quot;</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<p><a
href="https://github.com/VBA-tools/VBA-JSON/blob/master/JsonConverter.bas">VBA-JSON
參考</a></p>
<h2 id="總結">總結</h2>
<ol type="1">
<li><strong>使用Streamlit和Google Sheets</strong>：
<ul>
<li>Streamlit能快速生成前端介面，對不熟悉前端技術的開發者友好。</li>
<li>Google Sheets作為雲端資料庫，結合Google Apps Script
(GAS)實現資料操作。</li>
</ul></li>
<li><strong>JSON格式的優勢</strong>：
<ul>
<li>JSON是API資料交換中常用的格式，方便資料取用和組裝。</li>
<li>文章介紹了在Python和GAS中如何進行JSON資料的解析和生成。</li>
</ul></li>
<li><strong>多層資料結構處理技術</strong>：
<ul>
<li>使用扁平化和反扁平化技術，方便處理和還原多層嵌套的資料結構。</li>
<li>提供了Python和GAS中處理多層資料結構的範例。</li>
</ul></li>
<li><strong>實際應用範例</strong>：
<ul>
<li>展示了如何在Streamlit應用中將資料轉換為JSON格式，並通過HTTP
POST請求發送到GAS後端。</li>
<li>在GAS後端接收並解析JSON資料，將其寫入Google Sheets的具體步驟。</li>
</ul></li>
<li><strong>Python和GAS中的JSON操作方法</strong>：
<ul>
<li>詳述了在Python中使用<code>json.dumps()</code>和<code>json.loads()</code>進行JSON格式轉換。</li>
<li>說明了在GAS中使用<code>JSON.stringify()</code>和<code>JSON.parse()</code>處理JSON資料。</li>
</ul></li>
</ol>
]]></content>
      <categories>
        <category>基本概念</category>
      </categories>
      <tags>
        <tag>Streamlit</tag>
        <tag>GAS</tag>
      </tags>
  </entry>
  <entry>
    <title>VBA橫斷面法面積批次處理</title>
    <url>/posts/2533511128/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>工程特性如為帶狀工程，比如:水溝、道路等等，通常會以橫斷面法作為土方計算的數量依據，此指土方計算不外乎為:挖方、填方、回填方、CLSM之類。</p>
<p>在繪製土方基本資料時，面積的框選便會是決定數量很重要的部分，實務上的土方計算流程為:</p>
<p>圖層設定:</p>
<ul>
<li>原地面線</li>
<li>結構線</li>
<li>開挖線</li>
<li>填方線</li>
<li>開挖面積</li>
<li>挖方面積</li>
</ul>
<ol type="1">
<li>繪製挖方面積時，將原地面線與開挖線隔離顯示，透過BO或HATCH生成面積</li>
<li>繪製填方面積時，將回填線、結構線、開挖線隔離顯示，透過BO或HATCH生成面積</li>
</ol>
<blockquote>
<p>封閉聚合線</p>
</blockquote>
<p>CAD內建指令'BO'會出現一張介面，可以藉由點選內部點生成封閉聚合線，指令'-BO'則可以略過介面的程序直接點選，此時封閉聚合線會有'面積'屬性。</p>
<blockquote>
<p>填充線</p>
</blockquote>
<p>CAD內建指令'HATCH'可以點選內部點生成填充線，此時填充線會有'面積'屬性，須注意之前測試過<strong>HATCH可能會有些許的誤差</strong>，這個也不清楚原因為何...</p>
<span id="more"></span>
<h2 id="vba批次處理流程">VBA批次處理流程</h2>
<p>正常的作業流程會將每一個樁號底下的面積逐筆紀錄作加總，算完的數據會修改到橫斷面上所記載的挖方面積數字、填方面積數字，後續再將這些數字填報到土方計算表，稍有恍神則容易出錯，也因此若這些內容都可以用CAD中對應圖元的面積屬性進行處理，並且將資料傳輸到土方計算表及回歸到圖面修訂記載數字，這會讓整個土方計算作業簡單很多。</p>
<blockquote>
<p>目標為希望能夠框選一次範圍，就將所有的面積計算完畢並且放置於對應的樁號，省下作業時間!!!</p>
</blockquote>
<p>要將圖面進行批次處理時，會需要進行下列步驟搭配VBA執行便能順利完成</p>
<h3 id="主要介面">主要介面</h3>
<figure>
<img src="upload_0667e12aec332c0df8989682a27406ac.png"
alt="橫斷面圖範例" />
<figcaption aria-hidden="true">橫斷面圖範例</figcaption>
</figure>
<figure>
<img src="upload_600f965523bfbad7cbb664384cbd23e1.png"
alt="資料庫介面" />
<figcaption aria-hidden="true">資料庫介面</figcaption>
</figure>
<h3 id="建立樁號外框">建立樁號外框</h3>
<p>每一個橫斷面圖都會有它所代表的樁號名稱及橫斷面圖範圍(此處是指BORDER欄位)，將外框完成之後做適當的放大縮小，目標是讓所有與該樁號相關的土方面積'形心'都能被完整包覆在框框裡面，後續要判斷面積歸屬時可以順利執行。</p>
<h3 id="點選面積">點選面積</h3>
<p>面積部分有兩種實作方式</p>
<ol type="1">
<li><p>如前言所述用不同的圖層來預先定義面積歸屬項目(挖方、填方)並且透過BO或HATCH來點擊'內部點'，但這樣還是免不了會有手動處理的部分。</p></li>
<li><p>用幾何數學方法來處理，原地面線是f(x)，開挖線是g(x)，開挖線先將兩端用CAD中的IntersectWith做延伸後，在用f(x)與g(x)的幾何關係計算面積，相關VBA程式碼實作如下:</p></li>
</ol>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="comment">&#x27;===Main Function===</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> plotDigLine(<span class="keyword">ByVal</span> EG <span class="keyword">As</span> <span class="type">Object</span>, <span class="keyword">ByVal</span> EGVertices)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> IsIntersect <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Call</span> CAD.GetBoundingBox(buttomCONC, MinX, MinY, MaxX, MaxY)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> vertices(<span class="number">4</span> * <span class="number">2</span> - <span class="number">1</span>) <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line"></span><br><span class="line">vertices(<span class="number">0</span>) = MinX - <span class="number">300</span> - <span class="number">30</span></span><br><span class="line">vertices(<span class="number">1</span>) = MinY + <span class="number">100</span></span><br><span class="line">vertices(<span class="number">2</span>) = MinX - <span class="number">300</span></span><br><span class="line">vertices(<span class="number">3</span>) = MinY</span><br><span class="line">vertices(<span class="number">4</span>) = MaxX + <span class="number">300</span></span><br><span class="line">vertices(<span class="number">5</span>) = MinY</span><br><span class="line">vertices(<span class="number">6</span>) = MaxX + <span class="number">300</span> + <span class="number">30</span></span><br><span class="line">vertices(<span class="number">7</span>) = MinY + <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> DL = CAD.AddLWPolyLine(vertices)</span><br><span class="line"><span class="keyword">Call</span> CAD.setLayer(DL, <span class="string">&quot;CAL&quot;</span>)</span><br><span class="line"><span class="comment">&#x27;DL.Layer = &quot;CAL&quot; &#x27; &quot;橫斷面-挖方線&quot;</span></span><br><span class="line"></span><br><span class="line">retpt = myFunc.SortPTArray(CAD.IntersectWith(DL, EG, <span class="number">1</span>, IsIntersect))</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> IsIntersect = <span class="literal">False</span> <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line">vertices(<span class="number">0</span>) = retpt(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">vertices(<span class="number">1</span>) = retpt(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">vertices(<span class="number">6</span>) = retpt(UBound(retpt, <span class="number">1</span>), <span class="number">0</span>) <span class="comment">&#x27;- 3 + 1)</span></span><br><span class="line">vertices(<span class="number">7</span>) = retpt(UBound(retpt, <span class="number">1</span>), <span class="number">1</span>) <span class="comment">&#x27;- 3 + 2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;========以邊界為基準================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;vertices(0) = EGVertices(0)</span></span><br><span class="line"><span class="comment">&#x27;vertices(1) = EGVertices(1)</span></span><br><span class="line"><span class="comment">&#x27;vertices(6) = EGVertices(UBound(EGVertices) - 1)</span></span><br><span class="line"><span class="comment">&#x27;vertices(7) = EGVertices(UBound(EGVertices))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;====================================</span></span><br><span class="line"></span><br><span class="line">DL.Delete</span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> DL2 = CAD.AddLWPolyLine(vertices)</span><br><span class="line"></span><br><span class="line">DL2.Layer = <span class="string">&quot;CAL&quot;</span> <span class="comment">&#x27;&quot;橫斷面-挖方線&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;============匯入挖方面積==================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> stoneObj <span class="keyword">As</span> <span class="built_in">New</span> clsStone</span><br><span class="line"></span><br><span class="line">DLArea = stoneObj.getDLArea(EG, DL2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> Sheets(<span class="string">&quot;中心線&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Set</span> rng = .Columns(<span class="number">1</span>).Find(loc)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> <span class="built_in">Not</span> rng <span class="built_in">Is</span> <span class="literal">Nothing</span> <span class="keyword">Then</span></span><br><span class="line">    </span><br><span class="line">    r = rng.Row</span><br><span class="line">    .Cells(r, <span class="number">5</span>) = DLArea</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;====clsCAD===</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> IntersectWith(<span class="keyword">ByVal</span> PL1, <span class="keyword">ByVal</span> PL2, <span class="keyword">ByVal</span> mode <span class="keyword">As</span> <span class="type">Byte</span>, <span class="keyword">ByRef</span> IsIntersect <span class="keyword">As</span> <span class="type">Boolean</span>)</span><br><span class="line"></span><br><span class="line">IsIntersect = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> coll <span class="keyword">As</span> <span class="built_in">New</span> Collection</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer = <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">GoTo</span> ERRORHANDLE <span class="comment">&#x27;20210901 錯誤偵測</span></span><br><span class="line">    <span class="keyword">Set</span> retpt = PL1.IntersectWith(PL2, mode) <span class="comment">&#x27;acExtendThisEntity)</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> it <span class="keyword">In</span> retpt</span><br><span class="line">    </span><br><span class="line">        coll.Add it.x</span><br><span class="line">        coll.Add it.y</span><br><span class="line">        coll.Add it.Z</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> coll <span class="built_in">Is</span> <span class="literal">Nothing</span> <span class="keyword">Then</span></span><br><span class="line"><span class="symbol">ERRORHANDLE:</span></span><br><span class="line">        <span class="comment">&#x27;intersectWith = &quot;EMPTY&quot;</span></span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        IntersectWith = myFunc.tranColl2Array(coll)</span><br><span class="line">        IsIntersect = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line"></span><br><span class="line">    retpt = PL1.IntersectWith(PL2, mode) <span class="comment">&#x27;acExtendThisEntity)</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> UBound(retpt) = -<span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line">       <span class="comment">&#x27; IntersectWith = &quot;EMPTY&quot;</span></span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        IntersectWith = retpt</span><br><span class="line">        IsIntersect = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;====clsStone===</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;<span class="doctag">TODO:</span></span></span><br><span class="line"><span class="comment">&#x27;1.sort X coordinate</span></span><br><span class="line"><span class="comment">&#x27;2.define border</span></span><br><span class="line"><span class="comment">&#x27;3.decide X-value</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> getDLArea(<span class="keyword">ByVal</span> EG, <span class="keyword">ByVal</span> DL)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> PLobj1 = RevisePL(EG)</span><br><span class="line">EG.Delete</span><br><span class="line"></span><br><span class="line">PL1_X = myFunc.tranColl2Array(getcoll(PLobj1, <span class="string">&quot;X&quot;</span>))</span><br><span class="line">PL1_Y = myFunc.tranColl2Array(getcoll(PLobj1, <span class="string">&quot;Y&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> PLobj2 = RevisePL(DL)</span><br><span class="line">DL.Delete</span><br><span class="line"></span><br><span class="line">PL2_X = myFunc.tranColl2Array(getcoll(PLobj2, <span class="string">&quot;X&quot;</span>))</span><br><span class="line">PL2_Y = myFunc.tranColl2Array(getcoll(PLobj2, <span class="string">&quot;Y&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">Call</span> defineBorder(PL1_X, PL2_X, BL, BR)</span><br><span class="line"></span><br><span class="line">getDLArea = calculateArea_test(PL1_X, PL1_Y, PL2_X, PL2_Y, BL, BR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> RevisePL(<span class="keyword">ByVal</span> PLobj) <span class="comment">&#x27;由左至右排序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> coll <span class="keyword">As</span> <span class="built_in">New</span> Collection</span><br><span class="line"></span><br><span class="line">co = <span class="number">3</span></span><br><span class="line"><span class="keyword">If</span> TypeName(PLobj) <span class="built_in">Like</span> <span class="string">&quot;*LWPolyline&quot;</span> <span class="keyword">Then</span> co = <span class="number">2</span>  <span class="comment">&#x27;IIcadLightWeightPolyline</span></span><br><span class="line"></span><br><span class="line">arr = CAD.tranIPoints(PLobj.coordinates)</span><br><span class="line"></span><br><span class="line">Debug.Print TypeName(PLobj)</span><br><span class="line"></span><br><span class="line">X1 = arr(<span class="number">0</span>)</span><br><span class="line">Xn = arr(UBound(arr) - co + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> X1 &gt; Xn <span class="keyword">Then</span></span><br><span class="line">    <span class="keyword">Set</span> RevisePL = CAD.ReverseLine(<span class="keyword">ByVal</span> PLobj)</span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">    <span class="keyword">Set</span> RevisePL = PLobj</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> UBound(arr) - co <span class="keyword">Step</span> co</span><br><span class="line"></span><br><span class="line">    X1 = arr(i)</span><br><span class="line">    X2 = arr(i + co)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> X1 = X2 <span class="keyword">Then</span> arr(i + co) = arr(i + co) + <span class="number">0.001</span> <span class="comment">&#x27;若為垂直則微調往右偏移</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> RevisePL = CAD.AddLWPolyLine(arr)</span><br><span class="line">RevisePL.Layer = PLobj.Layer</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> calculateArea_test(<span class="keyword">ByVal</span> PL1_X, <span class="keyword">ByVal</span> PL1_Y, <span class="keyword">ByVal</span> PL2_X, <span class="keyword">ByVal</span> PL2_Y, <span class="keyword">ByVal</span> BL, <span class="keyword">ByVal</span> BR)</span><br><span class="line"></span><br><span class="line">X_sort = myFunc.BubbleSort_array(myFunc.combineArray(PL1_X, PL2_X))</span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> i = LBound(X_sort) <span class="keyword">To</span> UBound(X_sort) - <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    X1 = X_sort(i)</span><br><span class="line">    X2 = X_sort(i + <span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    dx = X2 - X1</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> X1 &gt;= BL <span class="built_in">And</span> X2 &lt;= BR <span class="keyword">Then</span></span><br><span class="line">        </span><br><span class="line">        Y1f = getYbyX(X1, PL1_X, PL1_Y)</span><br><span class="line">        Y2f = getYbyX(X1, PL2_X, PL2_Y)</span><br><span class="line">        </span><br><span class="line">        dYf = Y1f - Y2f</span><br><span class="line">        </span><br><span class="line">        Y1b = getYbyX(X2, PL1_X, PL1_Y)</span><br><span class="line">        Y2b = getYbyX(X2, PL2_X, PL2_Y)</span><br><span class="line">        </span><br><span class="line">        dYb = Y1b - Y2b</span><br><span class="line"></span><br><span class="line">        <span class="keyword">If</span> dYf &gt; <span class="number">0</span> <span class="built_in">And</span> dYb &lt; <span class="number">0</span> <span class="keyword">Then</span> <span class="comment">&#x27;與基準線交叉(正到負)</span></span><br><span class="line">        </span><br><span class="line">            X_intersect = getIntersectX(X1, X2, Y1f, Y1b, Y2f, Y2b)</span><br><span class="line">            dA = dYf * (X_intersect - X1) / <span class="number">2</span></span><br><span class="line">            <span class="comment">&#x27;Set lineObj = CAD.AddLineCO(X1, Y1f, X1, Y2f)</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">ElseIf</span> dYf &lt; <span class="number">0</span> <span class="built_in">And</span> dYb &gt; <span class="number">0</span> <span class="keyword">Then</span> <span class="comment">&#x27;與基準線交叉(負到正)</span></span><br><span class="line">        </span><br><span class="line">            X_intersect = getIntersectX(X1, X2, Y1f, Y1b, Y2f, Y2b)</span><br><span class="line">            dA = dYb * (X2 - X_intersect) / <span class="number">2</span></span><br><span class="line">            <span class="comment">&#x27;Set lineObj = CAD.AddLineCO(X2, Y1b, X2, Y2b)</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">ElseIf</span> dYf &gt;= <span class="number">0</span> <span class="built_in">And</span> dYb &gt;= <span class="number">0</span> <span class="keyword">Then</span> <span class="comment">&#x27;皆在基準線下方</span></span><br><span class="line">        </span><br><span class="line">            dA = (dYf + dYb) * dx / <span class="number">2</span></span><br><span class="line">            <span class="comment">&#x27;Set lineObj = CAD.AddLineCO(X1, Y1f, X1, Y2f)</span></span><br><span class="line">            <span class="comment">&#x27;Set lineObj = CAD.AddLineCO(X2, Y1b, X2, Y2b)</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">Else</span></span><br><span class="line">            dA = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&#x27;Debug.Print &quot;dYf=&quot; &amp; dYf &amp; &quot;,dYb=&quot; &amp; dYb &amp; &quot;,dA=&quot; &amp; dA</span></span><br><span class="line">        sA = sA + dA</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">calculateArea_test = Round(sA / <span class="number">1000000</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> getIntersectX(<span class="keyword">ByVal</span> X1 <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByVal</span> X2 <span class="keyword">As</span> <span class="type">Double</span>, _</span><br><span class="line">                        <span class="keyword">ByVal</span> Y1f <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByVal</span> Y1b <span class="keyword">As</span> <span class="type">Double</span>, _</span><br><span class="line">                        <span class="keyword">ByVal</span> Y2f <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByVal</span> Y2b <span class="keyword">As</span> <span class="type">Double</span>)</span><br><span class="line"></span><br><span class="line">dx = X2 - X1</span><br><span class="line"></span><br><span class="line">y1_slope = (Y1b - Y1f) / dx</span><br><span class="line">y2_slope = (Y2b - Y2f) / dx</span><br><span class="line"></span><br><span class="line">slope_change = Abs(y1_slope - y2_slope)</span><br><span class="line">dY_f = Abs(Y1f - Y2f)</span><br><span class="line"></span><br><span class="line">getIntersectX = X1 + dY_f / slope_change</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> getYbyX(<span class="keyword">ByVal</span> x <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByVal</span> PL_X, <span class="keyword">ByVal</span> PL_Y)</span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> i = LBound(PL_X) <span class="keyword">To</span> UBound(PL_X) - <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    X1 = PL_X(i)</span><br><span class="line">    X2 = PL_X(i + <span class="number">1</span>)</span><br><span class="line">    Y1 = PL_Y(i)</span><br><span class="line">    Y2 = PL_Y(i + <span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> X1 = X2 <span class="keyword">Then</span> X2 = X2 + <span class="number">0.001</span>: <span class="keyword">Stop</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> x &gt;= X1 <span class="built_in">And</span> x &lt;= X2 <span class="keyword">Then</span></span><br><span class="line">        </span><br><span class="line">        s1 = x - X1</span><br><span class="line">        s2 = X2 - x</span><br><span class="line">        getYbyX = (s1 * Y2 + s2 * Y1) / (s1 + s2)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">Exit</span> <span class="keyword">For</span></span><br><span class="line">      </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<h3 id="判斷面積歸屬">判斷面積歸屬</h3>
<p>面積歸屬的判定方法為該封閉聚合線的形心點或填充線的形心點位於哪個樁號外框中，判定屬於哪個外框後取出面積並做挖方加總或填方加總(看取出的圖層是哪一種)，關於點與外框的位置判定關係請參考下列程式碼:</p>
<p>此處範例是用HATCH的面積取出其值，ssetAreas先做好Hatch的篩選才進行後續內容，有需要者可以改用polyline</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> CalcCABA() <span class="comment">&#x27;20210720 update</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> ssetAreas = CAD.CreateSSET(<span class="string">&quot;HA&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;Hatch&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> ssetArea <span class="keyword">In</span> ssetAreas</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;<span class="doctag">TODO:</span></span></span><br><span class="line">    <span class="comment">&#x27;1.getMidPoint</span></span><br><span class="line">    <span class="comment">&#x27;2.searchLoc</span></span><br><span class="line">    <span class="comment">&#x27;3.getAreaCol</span></span><br><span class="line">    <span class="comment">&#x27;4.keyinArea</span></span><br><span class="line">    </span><br><span class="line">    r = getRowFromBorder(ssetArea)</span><br><span class="line">    c = getColFromLayerName(ssetArea)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> r &lt;&gt; <span class="string">&quot;&quot;</span> <span class="built_in">And</span> c &lt;&gt; <span class="string">&quot;&quot;</span> <span class="keyword">Then</span> shtCL.Cells(r, c) = ssetArea.area / <span class="number">1000000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> getColFromLayerName(<span class="keyword">ByVal</span> ha)</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> shtCL</span><br><span class="line"></span><br><span class="line">    CD = ha.Layer <span class="comment">&#x27;橫斷面-挖方</span></span><br><span class="line">    </span><br><span class="line">    targetColName = Split(CD, <span class="string">&quot;-&quot;</span>)(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> rng = .Rows(<span class="number">2</span>).Find(targetColName)</span><br><span class="line">    </span><br><span class="line">    getColFromLayerName = rng.Column</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> getRowFromBorder(<span class="keyword">ByVal</span> ha)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Call</span> CAD.GetBoundingBox(ha, MinX, MinY, MaxX, MaxY)</span><br><span class="line">    midX = (MinX + MaxX) / <span class="number">2</span></span><br><span class="line">    midY = (MinY + MaxY) / <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">With</span> shtCL</span><br><span class="line"></span><br><span class="line">        lr = .Cells(.Rows.Count, <span class="number">1</span>).<span class="keyword">End</span>(xlUp).Row</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">For</span> r = <span class="number">3</span> <span class="keyword">To</span> lr</span><br><span class="line">        </span><br><span class="line">            BorderPTs = Split(.Cells(r, <span class="number">3</span>), <span class="string">&quot;,&quot;</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">If</span> UBound(BorderPTs) = <span class="number">3</span> <span class="keyword">Then</span></span><br><span class="line">        </span><br><span class="line">                Border_minX = <span class="built_in">CDbl</span>(BorderPTs(<span class="number">0</span>))</span><br><span class="line">                Border_minY = <span class="built_in">CDbl</span>(BorderPTs(<span class="number">1</span>))</span><br><span class="line">                Border_maxX = <span class="built_in">CDbl</span>(BorderPTs(<span class="number">2</span>))</span><br><span class="line">                Border_maxY = <span class="built_in">CDbl</span>(BorderPTs(<span class="number">3</span>))</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">If</span> midX &gt;= Border_minX <span class="built_in">And</span> midX &lt;= Border_maxX <span class="built_in">And</span> midY &gt;= Border_minY <span class="built_in">And</span> midY &lt;= Border_maxY <span class="keyword">Then</span></span><br><span class="line">                    </span><br><span class="line">                    getRowFromBorder = r</span><br><span class="line">                    <span class="keyword">Exit</span> <span class="keyword">For</span></span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="數據回歸圖面">數據回歸圖面</h3>
<p>我這裡是採用屬性圖塊方式處理，如果不要那麼麻煩也可以用最簡單的text判定樁號的形心位置後，做相對文字偏移並且加入挖方填方面積文字就可以了，這樣可以有效避免沒有圖塊的問題。</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> DrawCABA_Main() <span class="comment">&#x27;將橫斷面說明的CL、CA、BA刪除後重整</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> sset = CAD.CreateSSET(<span class="string">&quot;Title&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;TITLE&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> it <span class="keyword">In</span> sset</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">If</span> TypeName(it) = <span class="string">&quot;IAcadBlockReference&quot;</span> <span class="keyword">Then</span></span><br><span class="line">    </span><br><span class="line">        myAttr = it.GetAttributes</span><br><span class="line">        HSecLoc = myAttr(<span class="number">0</span>).TextString</span><br><span class="line">        </span><br><span class="line">        s = returnCABA(HSecLoc)</span><br><span class="line">        </span><br><span class="line">        tmp = Split(s, <span class="string">&quot;,&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        myAttr(<span class="number">1</span>).TextString = tmp(<span class="number">0</span>)</span><br><span class="line">        myAttr(<span class="number">2</span>).TextString = <span class="string">&quot;挖方=&quot;</span> &amp; Round(tmp(<span class="number">1</span>), <span class="number">2</span>) &amp; <span class="string">&quot; m2&quot;</span></span><br><span class="line">        myAttr(<span class="number">3</span>).TextString = <span class="string">&quot;填方=&quot;</span> &amp; Round(tmp(<span class="number">2</span>), <span class="number">2</span>) &amp; <span class="string">&quot; m2&quot;</span></span><br><span class="line">        <span class="comment">&#x27;myAttr(4).TextString = &quot;CLSM=&quot; &amp; Round(tmp(3), 2) &amp; &quot; m2&quot;</span></span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">ERRORHANDLE:</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Function</span> returnCABA(<span class="keyword">ByVal</span> HSecLoc <span class="keyword">As</span> <span class="type">String</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> shtCL</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> rng = .Cells.Find(HSecLoc)</span><br><span class="line">    </span><br><span class="line">    r = rng.Row</span><br><span class="line">    </span><br><span class="line">    deltaH = .Cells(r, <span class="number">2</span> + <span class="number">2</span>)</span><br><span class="line">    CA = .Cells(r, <span class="number">3</span> + <span class="number">2</span>)</span><br><span class="line">    BA = .Cells(r, <span class="number">4</span> + <span class="number">2</span>)</span><br><span class="line">    RA = .Cells(r, <span class="number">5</span> + <span class="number">2</span>)</span><br><span class="line">    </span><br><span class="line">    returnCABA = deltaH &amp; <span class="string">&quot;,&quot;</span> &amp; CA &amp; <span class="string">&quot;,&quot;</span> &amp; BA &amp; <span class="string">&quot;,&quot;</span> &amp; RA</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<h3 id="生成報告">生成報告</h3>
<p>這裡就是單純的對格子塞資料計算總數而已，僅提供成果供參。</p>
<figure>
<img src="upload_85c9fc6b507cc57c8285967bf25cd55b.png"
alt="土方報告成果" />
<figcaption aria-hidden="true">土方報告成果</figcaption>
</figure>
<h2 id="更多細節">更多細節</h2>
<p>有需要更多技術細節內容再請來信討論或LINE進行聯繫。</p>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>AutoCAD VBA</tag>
        <tag>Excel VBA</tag>
      </tags>
  </entry>
  <entry>
    <title>VBA編輯器上的版本控制</title>
    <url>/posts/3829840047/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>在撰寫程式碼時，許多人習慣將程式與檔案綁定，並利用文件名稱來標記每次版本的修改。例如，將當天日期加在檔案名稱後來區隔版本，如
<code>縱斷面繪圖20230622.xls</code>。這是我過去對<strong>版本控制</strong>的理解，然而，這樣做的問題是檔案數量快速增長，且檔案名稱無法清楚標示每次修改的具體內容。</p>
<p>更糟的是，當這些檔案分散於不同的電腦和資料夾中，若同名的檔案有所不同，卻<strong>無法得知具體改動了哪些部分</strong>。這樣的管理方式會造成很大的困擾，也促使我開始尋找更有效的版本控制方法。</p>
<p>因此，我開始探索如何在 VBA 中實現「真」版本控制，並結合
<strong>Git</strong> 來管理程式碼。</p>
<h2 id="更新註記-20240519">更新註記 (2024/05/19)</h2>
<p>當我將程式上傳至 GitHub 時，發現因為筆記本的預設編碼為
"ANSI"，上傳的中文部分會顯示為亂碼。為了解決這個問題，我將編碼另存為
"UTF-8"，這樣可以正常顯示。但是，若將 "UTF-8" 編碼匯入 Excel VBA IDE
時，由於 Excel 預設支援 ANSI 編碼，中文會出現錯誤。</p>
<span id="more"></span>
<h2 id="編輯器開發環境">編輯器開發環境</h2>
<p>在撰寫 VBA 程式碼時，主要會有以下幾個區域來放置程式碼：</p>
<ul>
<li>Excel 物件（如 ThisWorkbook, Worksheet）</li>
<li>模組（Module）</li>
<li>物件類別模組（Class）</li>
<li>表單（Form）</li>
</ul>
<p>在這篇文章中，我假設程式碼並未直接寫在 Worksheet
中，因為這樣的程式碼會帶來許多匯入上的麻煩。而 <code>ThisWorkbook</code>
雖然屬於 <code>doccls</code>
類型的一部分，但其中可能會有需要手動處理的特殊情況，開發者需根據需要自行處理這些內容。</p>
<h2 id="git-基本操作">GIT 基本操作</h2>
<p>對於 GIT
的基本操作，網路上有許多資源可以參考。感謝<strong>六角學院的Youtube教學</strong>。</p>
<p>常見的 GIT 操作如下：</p>
<ul>
<li><code>git init</code>：初始化資料夾</li>
<li><code>git add</code>：將檔案加入索引</li>
<li><code>git commit</code>：提交版本註記</li>
<li><code>git push</code>：將程式碼上傳至 GitHub</li>
<li><code>git clone</code>：從 GitHub 下載程式碼</li>
<li><code>git fetch</code>：從 GitHub 下載並更新至本地資料夾</li>
<li><code>git checkout</code>：切換分支或版本</li>
</ul>
<h2 id="操作步驟">操作步驟</h2>
<ol type="1">
<li><p><strong>啟用 VBA 設定</strong>：在 Excel
中，打開「開發者」選單，並選擇「信任存取 VBA 專案物件模型」。</p></li>
<li><p><strong>初始化 Git</strong>：打開 Git Bash，指定一個資料夾並執行
<code>git init</code>。</p></li>
<li><p><strong>匯入 Git 模組</strong>：在目前的 VBA IDE 中匯入
<code>GIT.bas</code> 模組。</p></li>
<li><p><strong>導出程式碼</strong>：執行巨集
<code>ExportCodesToFolder</code>，並選擇第二步中指定的資料夾。</p></li>
<li><p><strong>確認版本</strong>：若確定無誤，繼續使用 Git
進行版本控制。若有任何問題，回到第 4 步重新檢查。</p></li>
<li><p><strong>進行 Git 操作</strong>：使用 Git Bash 進行
<code>git add</code>、<code>git commit</code>、<code>git push</code>
等操作。</p></li>
</ol>
<h2 id="處理程式碼版本問題">處理程式碼版本問題</h2>
<p>若發現開啟程式碼後發現有問題，可以執行以下步驟：</p>
<ol type="1">
<li>在 VBA IDE 中匯入 GIT 模組。</li>
<li>執行 <code>DeleteCodes</code> 來刪除舊有的程式碼。</li>
<li>執行
<code>ImportCodes</code>，並選擇指定的資料夾來匯入最新版本的程式碼。</li>
</ol>
<h2 id="vba-程式碼範例">VBA 程式碼範例</h2>
<p>以下是使用 Git 控制 VBA 程式碼版本的核心程式碼範例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x27;TODO:Export folder need to be killed</span><br><span class="line"></span><br><span class="line">Sub ExportCodesToFolder()</span><br><span class="line"></span><br><span class="line">&#x27;Type: 1=bas,2=cls,3=frm</span><br><span class="line"></span><br><span class="line">myFolder = getSavedFolder</span><br><span class="line"></span><br><span class="line">Call killFilesInFolder(myFolder)</span><br><span class="line"></span><br><span class="line">Set VBProj = ThisWorkbook.VBProject</span><br><span class="line">For Each VBComp In VBProj.VBComponents</span><br><span class="line">    </span><br><span class="line">    Select Case VBComp.Type</span><br><span class="line">    </span><br><span class="line">        Case 1: myExtension = &quot;.bas&quot;</span><br><span class="line">        Case 2: myExtension = &quot;.cls&quot;</span><br><span class="line">        Case 3: myExtension = &quot;.frm&quot;</span><br><span class="line">        </span><br><span class="line">        Case 100: myExtension = &quot;.doccls&quot;</span><br><span class="line">    </span><br><span class="line">    End Select</span><br><span class="line">    </span><br><span class="line">    full_path = myFolder &amp; &quot;\&quot; &amp; VBComp.Name &amp; myExtension</span><br><span class="line">    </span><br><span class="line">    If myExtension &lt;&gt; &quot;&quot; Then</span><br><span class="line">    </span><br><span class="line">        VBComp.Export (full_path)</span><br><span class="line">    </span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">    If myExtension = &quot;.doccls&quot; And CountFileLines(full_path) = 9 Then Kill full_path</span><br><span class="line">    </span><br><span class="line">Next VBComp</span><br><span class="line">    </span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">Sub killFilesInFolder(folderPath)</span><br><span class="line"></span><br><span class="line">Set coll_path = GetFilePathsInFolder(folderPath)</span><br><span class="line"></span><br><span class="line">For Each filePath In coll_path</span><br><span class="line"></span><br><span class="line">    Filename = mid(filePath, InStrRev(filePath, &quot;\&quot;) + 1)</span><br><span class="line">    fileExtension = mid(Filename, InStrRev(Filename, &quot;.&quot;) + 1)</span><br><span class="line">    </span><br><span class="line">    If fileExtension = &quot;frm&quot; Or fileExtension = &quot;bas&quot; Or fileExtension = &quot;cls&quot; Or fileExtension = &quot;doccls&quot; Then</span><br><span class="line">        Kill filePath</span><br><span class="line">    End If</span><br><span class="line">Next</span><br><span class="line"></span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">Sub ImportCodes()</span><br><span class="line"></span><br><span class="line">myFolder = getSavedFolder</span><br><span class="line"></span><br><span class="line">Set coll_path = GetFilePathsInFolder(myFolder)</span><br><span class="line"></span><br><span class="line">Call DeleteCodes</span><br><span class="line"></span><br><span class="line">For Each filePath In coll_path</span><br><span class="line"></span><br><span class="line">    Filename = mid(filePath, InStrRev(filePath, &quot;\&quot;) + 1)</span><br><span class="line">    fileExtension = mid(Filename, InStrRev(Filename, &quot;.&quot;) + 1)</span><br><span class="line">    </span><br><span class="line">    If fileExtension = &quot;frm&quot; Or fileExtension = &quot;bas&quot; Or fileExtension = &quot;cls&quot; Then</span><br><span class="line">        Call ImportCode(filePath, Filename)</span><br><span class="line">    End If</span><br><span class="line"></span><br><span class="line">Next</span><br><span class="line"></span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">Sub ImportCode(ByVal filePath As String, ByVal Filename As String)</span><br><span class="line"></span><br><span class="line">extension = mid(Filename, InStrRev(Filename, &quot;.&quot;) + 1)</span><br><span class="line">CodeName = mid(Filename, 1, InStrRev(Filename, &quot;.&quot;) - 1)</span><br><span class="line"></span><br><span class="line">If CodeName = &quot;GIT&quot; Then Exit Sub</span><br><span class="line"></span><br><span class="line">Set VBProj = ThisWorkbook.VBProject</span><br><span class="line"></span><br><span class="line">&#x27;If checkIfCodeExist(CodeName) = True Then</span><br><span class="line">&#x27;</span><br><span class="line">&#x27;    Set vbcomp = VBProj.VBComponents(CodeName)</span><br><span class="line">&#x27;    VBProj.VBComponents.Remove (vbcomp)</span><br><span class="line">&#x27;</span><br><span class="line">&#x27;End If</span><br><span class="line"></span><br><span class="line">VBProj.VBComponents.Import (filePath)</span><br><span class="line"></span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">Sub DeleteCodes()</span><br><span class="line"></span><br><span class="line">&#x27;Type: 1=bas,2=cls,3=frm</span><br><span class="line"></span><br><span class="line">Set VBProj = ThisWorkbook.VBProject</span><br><span class="line">For Each VBComp In VBProj.VBComponents</span><br><span class="line">    </span><br><span class="line">    Select Case VBComp.Type</span><br><span class="line">    </span><br><span class="line">        Case 1: myExtension = &quot;.bas&quot;</span><br><span class="line">        Case 2: myExtension = &quot;.cls&quot;</span><br><span class="line">        Case 3: myExtension = &quot;.frm&quot;</span><br><span class="line">        </span><br><span class="line">        Case 100: myExtension = &quot;.doccls&quot;</span><br><span class="line">    </span><br><span class="line">    End Select</span><br><span class="line">    </span><br><span class="line">    If VBComp.Type &lt;&gt; 100 And VBComp.Name &lt;&gt; &quot;GIT&quot; Then</span><br><span class="line"></span><br><span class="line">        VBProj.VBComponents.Remove (VBComp)</span><br><span class="line">        </span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">Next VBComp</span><br><span class="line"></span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">&#x27;--------FUNCTION------------</span><br><span class="line"></span><br><span class="line">Function GetFilePathsInFolder(ByVal folderPath As String)</span><br><span class="line"></span><br><span class="line">    Dim coll As New Collection</span><br><span class="line"></span><br><span class="line">    Dim fso As Object</span><br><span class="line">    &#x27;Dim folderPath As String</span><br><span class="line">    Dim folder As Object</span><br><span class="line">    Dim file As Object</span><br><span class="line"></span><br><span class="line">    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)</span><br><span class="line"></span><br><span class="line">   &#x27; folderPath = getSavedFolder</span><br><span class="line">    Set folder = fso.GetFolder(folderPath)</span><br><span class="line">    </span><br><span class="line">    For Each file In folder.Files</span><br><span class="line"></span><br><span class="line">        coll.Add file.Path</span><br><span class="line">        </span><br><span class="line">    Next file</span><br><span class="line">    </span><br><span class="line">    Set file = Nothing</span><br><span class="line">    Set folder = Nothing</span><br><span class="line">    Set fso = Nothing</span><br><span class="line">    </span><br><span class="line">    Set GetFilePathsInFolder = coll</span><br><span class="line">    </span><br><span class="line">End Function</span><br><span class="line"></span><br><span class="line">Function getSavedFolder()</span><br><span class="line"></span><br><span class="line">    Set fldr = Application.FileDialog(4)</span><br><span class="line">    </span><br><span class="line">    With fldr</span><br><span class="line">        .Title = &quot;Select a Folder&quot;</span><br><span class="line">        .AllowMultiSelect = False</span><br><span class="line">        .InitialFileName = ThisWorkbook.Path</span><br><span class="line">        If .Show = -1 Then FolderName = .SelectedItems(1)</span><br><span class="line">    End With</span><br><span class="line">getSavedFolder = FolderName</span><br><span class="line"></span><br><span class="line">End Function</span><br><span class="line"></span><br><span class="line">Function checkIfCodeExist(ByVal checkName As String) &#x27;useless</span><br><span class="line"></span><br><span class="line">Set VBProj = ThisWorkbook.VBProject</span><br><span class="line">Set VBComps = VBProj.VBComponents</span><br><span class="line"></span><br><span class="line">checkIfCodeExist = False</span><br><span class="line"></span><br><span class="line">For Each it In VBComps</span><br><span class="line"></span><br><span class="line">    If it.Name = checkName Then</span><br><span class="line">        </span><br><span class="line">        checkIfCodeExist = True: Exit Function</span><br><span class="line">        </span><br><span class="line">    End If</span><br><span class="line">Next</span><br><span class="line"></span><br><span class="line">End Function</span><br><span class="line"></span><br><span class="line">Function CountFileLines(ByVal filePath)</span><br><span class="line"></span><br><span class="line">    Dim FileContent As String</span><br><span class="line">    Dim fileNumber As Integer</span><br><span class="line">    Dim lineCount As Long</span><br><span class="line">    </span><br><span class="line">    &#x27; Open the text file</span><br><span class="line">    fileNumber = FreeFile</span><br><span class="line">    Open filePath For Input As fileNumber</span><br><span class="line">    </span><br><span class="line">    &#x27; Read the file content line by line and count the lines</span><br><span class="line">    Do Until EOF(fileNumber)</span><br><span class="line">        Line Input #fileNumber, FileContent</span><br><span class="line">        lineCount = lineCount + 1</span><br><span class="line">    Loop</span><br><span class="line">    </span><br><span class="line">    &#x27; Close the file</span><br><span class="line">    Close fileNumber</span><br><span class="line">    </span><br><span class="line">    &#x27; Display the line count in cell A1</span><br><span class="line">    CountFileLines = lineCount</span><br><span class="line">    </span><br><span class="line">End Function</span><br><span class="line"></span><br><span class="line">&#x27;--------TMP_CODE-------------</span><br><span class="line"></span><br><span class="line">Function tmp_deleteCodes()</span><br><span class="line"></span><br><span class="line">Set VBProj = ThisWorkbook.VBProject</span><br><span class="line">Set VBComps = VBProj.VBComponents</span><br><span class="line"></span><br><span class="line">For Each it In VBComps</span><br><span class="line">    </span><br><span class="line">    If it.Name Like &quot;*2&quot; And it.Type &lt;&gt; 100 Then</span><br><span class="line"></span><br><span class="line">        CodeName = it.Name</span><br><span class="line">        </span><br><span class="line">        Set VBComp = VBProj.VBComponents(CodeName)</span><br><span class="line">        VBProj.VBComponents.Remove (VBComp)</span><br><span class="line">        </span><br><span class="line">    End If</span><br><span class="line">    </span><br><span class="line">Next</span><br><span class="line"></span><br><span class="line">End Function</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>基本原理</category>
      </categories>
      <tags>
        <tag>GIT</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>openpyxl照片處理筆記</title>
    <url>/posts/1384887565/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>目前在處理輸出報表的實務上會遇到要貼上照片的問題，有關python在處理Excel照片部分會需要透過openpyxl裡面相關的套件進行，希望能夠達成下列情況:</p>
<p><strong>給定照片之後可以依照儲存格的範圍貼上照片，儲存格可能是單一儲存格或者是合併儲存格，找出儲存格範圍寬度、儲存格範圍高度</strong></p>
<blockquote>
<p>最適合的方式計算過程</p>
</blockquote>
<ul>
<li>照片寬的，比例設定為儲存格範圍寬度/照片寬度，照片長寬同乘上這個比例放大縮小</li>
<li>照片長的，比例設定為儲存格範圍高度/照片高度，照片長寬同乘上這個比例放大縮小</li>
</ul>
<span id="more"></span>
<h2 id="照片貼上方式">照片貼上方式</h2>
<h3 id="貼到一定範圍間">貼到一定範圍間</h3>
<p>https://openpyxl.readthedocs.io/en/latest/_modules/openpyxl/drawing/spreadsheet_drawing.html#TwoCellAnchor</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> streamlit <span class="keyword">as</span> st</span><br><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> load_workbook</span><br><span class="line"><span class="keyword">from</span> openpyxl.drawing.image <span class="keyword">import</span> Image <span class="keyword">as</span> OpenpyxlImage</span><br><span class="line"><span class="keyword">from</span> openpyxl.drawing.spreadsheet_drawing <span class="keyword">import</span> AnchorMarker,TwoCellAnchor</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_merged_cell</span>(<span class="params">ws, col, row</span>):</span><br><span class="line">    <span class="keyword">for</span> merged_range <span class="keyword">in</span> ws.merged_cells.ranges:</span><br><span class="line">        <span class="keyword">if</span> ws.cell(row=row+<span class="number">1</span>, column=col+<span class="number">1</span>).coordinate <span class="keyword">in</span> merged_range:</span><br><span class="line">            <span class="keyword">return</span> merged_range</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">insert_image</span>(<span class="params">worksheet,img,target_row,target_col</span>):</span><br><span class="line"></span><br><span class="line">    col1,row1,col2,row2=(is_merged_cell(worksheet, target_col,target_row).bounds)</span><br><span class="line"></span><br><span class="line">    marker1=AnchorMarker(col=col1-<span class="number">1</span>, row=row1-<span class="number">1</span>)</span><br><span class="line">    marker2=AnchorMarker(col=col2, row=row2)</span><br><span class="line">    img.anchor = TwoCellAnchor(_<span class="keyword">from</span>=marker1, to=marker2)</span><br><span class="line">    worksheet.add_image(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Streamlit application title</span></span><br><span class="line">st.title(<span class="string">&quot;Excel Image Insertion Tool&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># File upload</span></span><br><span class="line">uploaded_excel = st.file_uploader(<span class="string">&quot;Upload Excel file&quot;</span>, <span class="built_in">type</span>=[<span class="string">&quot;xlsx&quot;</span>])</span><br><span class="line">uploaded_image = st.file_uploader(<span class="string">&quot;Upload image file&quot;</span>, <span class="built_in">type</span>=[<span class="string">&quot;png&quot;</span>, <span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;jpeg&quot;</span>])</span><br><span class="line">uploaded_image2 = st.file_uploader(<span class="string">&quot;Upload image file2&quot;</span>, <span class="built_in">type</span>=[<span class="string">&quot;png&quot;</span>, <span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;jpeg&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Input for sheet name and cell location</span></span><br><span class="line">sheet_name = st.text_input(<span class="string">&quot;Enter sheet name&quot;</span>, <span class="string">&quot;概要表&quot;</span>)</span><br><span class="line">cell_location = st.text_input(<span class="string">&quot;Enter cell location for image insertion&quot;</span>, <span class="string">&quot;E3&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> uploaded_excel <span class="keyword">and</span> uploaded_image <span class="keyword">and</span> uploaded_image2:</span><br><span class="line">    <span class="comment"># Read Excel file</span></span><br><span class="line">    workbook = load_workbook(filename=uploaded_excel)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Check if sheet exists</span></span><br><span class="line">    <span class="keyword">if</span> sheet_name <span class="keyword">not</span> <span class="keyword">in</span> workbook.sheetnames:</span><br><span class="line">        st.error(<span class="string">f&quot;Sheet &#x27;<span class="subst">&#123;sheet_name&#125;</span>&#x27; does not exist!&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        worksheet = workbook[sheet_name]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Load image</span></span><br><span class="line">        img = OpenpyxlImage(uploaded_image)</span><br><span class="line">        img2=OpenpyxlImage(uploaded_image2)</span><br><span class="line"></span><br><span class="line">        insert_image(worksheet,img,<span class="number">3</span>,<span class="number">5</span>) <span class="comment">#E3</span></span><br><span class="line">        insert_image(worksheet,img2,<span class="number">14</span>,<span class="number">5</span>) <span class="comment">#E14</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Save modified Excel file</span></span><br><span class="line">        output = io.BytesIO()</span><br><span class="line">        workbook.save(output)</span><br><span class="line">        output.seek(<span class="number">0</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Provide download link</span></span><br><span class="line">        st.download_button(label=<span class="string">&quot;Download modified Excel file&quot;</span>,</span><br><span class="line">                           data=output,</span><br><span class="line">                           file_name=<span class="string">&quot;modified_excel.xlsx&quot;</span>)</span><br><span class="line"></span><br><span class="line">        st.success(<span class="string">&quot;Image successfully inserted into Excel file!&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="直接貼到左上角點">直接貼到左上角點</h3>
<p>目前openpyxl的套件只能透過OneCellAnchor處理，但是照片大小無從適應(也許是我還沒找到方法)。</p>
<h3
id="貼到左上角點之後進行偏移目前施工照片是這樣處理">貼到左上角點之後進行偏移(目前施工照片是這樣處理)</h3>
<p>VBA 內容</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line">dblGap = <span class="number">2</span>#</span><br><span class="line">Count = <span class="number">0</span></span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> fleTmp <span class="keyword">In</span> fldMain.Files</span><br><span class="line">    strTmp = UCase(fsoMain.GetExtensionName(fleTmp.path))</span><br><span class="line">    <span class="keyword">If</span> strTmp = <span class="string">&quot;JPG&quot;</span> <span class="built_in">Or</span> strTmp = <span class="string">&quot;JPEG&quot;</span> <span class="keyword">Then</span></span><br><span class="line">        Count = Count + <span class="number">1</span></span><br><span class="line">        <span class="keyword">With</span> shtAct</span><br><span class="line">            <span class="keyword">Set</span> ranOri = .Range(.Cells(<span class="number">2</span> + (Count - <span class="number">1</span>) * <span class="number">14</span>, <span class="number">4</span>), .Cells(<span class="number">2</span> + (Count - <span class="number">1</span>) * <span class="number">14</span>, <span class="number">4</span>))</span><br><span class="line">            <span class="keyword">Set</span> ranNum = ranOri.Offset(<span class="number">2</span>, -<span class="number">2</span>)</span><br><span class="line">            ranNum = Count</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">Set</span> picAct = shtAct.Pictures.Insert(fleTmp.path)</span><br><span class="line">        <span class="keyword">With</span> picAct</span><br><span class="line">            .ShapeRange.LockAspectRatio = msoTrue <span class="comment">&#x27;鎖定照片長寬比</span></span><br><span class="line">            <span class="keyword">If</span> .Height &gt; .Width <span class="keyword">Then</span> <span class="comment">&#x27;直式</span></span><br><span class="line">                <span class="keyword">Set</span> ranOri = ranOri.Resize(<span class="number">13</span>, <span class="number">1</span>) <span class="comment">&#x27;.Merge</span></span><br><span class="line">                ranOri.Merge</span><br><span class="line">            <span class="keyword">Else</span> <span class="comment">&#x27;橫式</span></span><br><span class="line">                <span class="keyword">Set</span> ranOri = ranOri.Offset(<span class="number">4</span>, -<span class="number">2</span>).Resize(<span class="number">9</span>, <span class="number">3</span>) <span class="comment">&#x27;.Merge</span></span><br><span class="line">                ranOri.Merge</span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            dblRatioPic = .Width / .Height</span><br><span class="line">            dblRatioOri = ranOri.Width / ranOri.Height</span><br><span class="line">            <span class="keyword">If</span> dblRatioPic &gt; dblRatioOri <span class="keyword">Then</span> <span class="comment">&#x27;寬度控制</span></span><br><span class="line">                .Width = ranOri.Width - <span class="number">2</span> * dblGap</span><br><span class="line">                .Top = ranOri.Top + <span class="number">0.5</span> * ranOri.Height - <span class="number">0.5</span> * .Height</span><br><span class="line">                .Left = ranOri.Left + dblGap</span><br><span class="line">            <span class="keyword">Else</span>                                <span class="comment">&#x27;高度控制</span></span><br><span class="line">                .Height = ranOri.Height - <span class="number">2</span> * dblGap</span><br><span class="line">                .Top = ranOri.Top + dblGap</span><br><span class="line">                .Left = ranOri.Left + <span class="number">0.5</span> * ranOri.Width - <span class="number">0.5</span> * .Width</span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">Next</span> fleTmp</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="開發小問題">開發小問題</h2>
<p>I/O operation on closed file</p>
<mark class="label [primary]">Sol:</mark>
<p>如果uploaded_file沒有先經過img_file進行儲存的話，會在OpenpyxlImage處理完畢之後就close</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">img1_file = io.BytesIO(st.session_state.uploaded_file1.getvalue())</span><br><span class="line">img1 = OpenpyxlImage(img1_file)</span><br><span class="line">img2_file = io.BytesIO(st.session_state.uploaded_file2.getvalue())</span><br><span class="line">img2 = OpenpyxlImage(img2_file)</span><br><span class="line">img3_file = io.BytesIO(st.session_state.uploaded_file3.getvalue())</span><br><span class="line">img3 = OpenpyxlImage(img3_file)</span><br><span class="line"></span><br><span class="line"><span class="comment"># img1=OpenpyxlImage(st.session_state.uploaded_file1)</span></span><br><span class="line">insert_image(sheet,img1,<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line"><span class="comment"># img2=OpenpyxlImage(st.session_state.uploaded_file2)</span></span><br><span class="line">insert_image(sheet,img2,<span class="number">14</span>,<span class="number">5</span>)</span><br><span class="line"><span class="comment"># img3=OpenpyxlImage(st.session_state.uploaded_file3)</span></span><br><span class="line">insert_image(sheet,img3,<span class="number">14</span>,<span class="number">8</span>)</span><br></pre></td></tr></table></figure>
<h2 id="ref">ref</h2>
<p>https://blog.csdn.net/chenliang1038/article/details/119410308</p>
]]></content>
      <categories>
        <category>基本原理</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python製作工程設計簡圖</title>
    <url>/posts/3601177192/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>圖表跟圖片都是用來讓網頁元素更為豐富的手段，圖表為數據統計後的成果、圖片則為將抽象的文字轉換成圖片形式進行輸出(比如渠道的長相)，抽象的文字往往不比圖片的介紹來的容易接受許多，而這也是資料可視化的目標之一。</p>
<h3 id="使用情境">使用情境</h3>
<p>在提報工程概要表時，會需要讓上面了解未來要施作的工程內容，因此會拍攝現場的照片及附上工程設計簡圖，而工程設計簡圖的製作過程非常繁瑣，操作過程如下:</p>
<ol type="1">
<li>開啟CAD</li>
<li>畫出渠道形狀、標示文字內容</li>
<li>預覽列印</li>
<li>截圖預覽列印內容另存成圖片檔</li>
<li>圖片檔貼附到Excel上面</li>
</ol>
<p>因此本次專案預期會讓使用者輸入渠道的尺寸、周邊環境關係來製作一張簡圖，放置於"工程概要表"讓長官了解未來要施作的工程內容，利用python的PIL套件縮短<strong>繪製工程設計簡圖</strong>的流程。</p>
<span id="more"></span>
<h2 id="基本概念">基本概念</h2>
<p>PIL全名為Pillow，是目前在開發python時常用的一項繪圖工具</p>
<blockquote>
<p>座標關係</p>
</blockquote>
<p>PIL以<strong>第二象限</strong>開始，X往右遞增，Y往下遞增。
CAD以第一象限開始，X往右遞增，Y往<strong>上</strong>遞增。</p>
<blockquote>
<p>元素用法</p>
</blockquote>
<h3 id="畫線">畫線</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">draw_line</span>(<span class="params">draw, start_point, end_point, fill=<span class="string">&#x27;black&#x27;</span>, width=<span class="number">3</span></span>):</span><br><span class="line">    draw.line([start_point, end_point], fill=fill, width=width)</span><br></pre></td></tr></table></figure>
<h3 id="畫多段線">畫多段線</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">draw_polyline</span>(<span class="params">draw, points, fill=<span class="string">&#x27;black&#x27;</span>, width=<span class="number">3</span></span>):</span><br><span class="line">    draw.line(points, fill=fill, width=width)</span><br></pre></td></tr></table></figure>
<h3 id="寫文字">寫文字</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">draw_text</span>(<span class="params">draw, text, position, font_size, font_path, fill=<span class="string">&#x27;black&#x27;</span></span>):</span><br><span class="line">    font = ImageFont.truetype(font_path, font_size)</span><br><span class="line">    draw.text(position, text, font=font, fill=fill)</span><br></pre></td></tr></table></figure>
<ul>
<li>這裡的font_path如果是中文，可能會有出現亂碼的問題，可以先去Google
font之類先下載下來到開發目錄讓他引用。目前中文的部分我用<a
href="https://fonts.google.com/noto/specimen/Noto+Sans">NotoSansTC-Regular.ttf</a></li>
</ul>
<h3 id="填充線">填充線</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">draw_polygon</span>(<span class="params">draw, points, outline=<span class="string">&#x27;black&#x27;</span>, fill=<span class="literal">None</span>, width=<span class="number">3</span></span>):</span><br><span class="line">    draw.polygon(points, outline=outline, fill=fill)</span><br><span class="line">    <span class="keyword">if</span> fill:</span><br><span class="line">        draw.line(points + [points[<span class="number">0</span>]], fill=outline, width=width)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_gradient_polygon</span>(<span class="params">draw, vertices, start_color, end_color</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    繪製漸層顏色的多邊形</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param draw: PIL.ImageDraw對象</span></span><br><span class="line"><span class="string">    :param vertices: 多邊形頂點座標列表 [(x1, y1), (x2, y2), ...]</span></span><br><span class="line"><span class="string">    :param start_color: 開始顏色 (r, g, b)</span></span><br><span class="line"><span class="string">    :param end_color: 結束顏色 (r, g, b)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    x_coords, y_coords = <span class="built_in">zip</span>(*vertices)</span><br><span class="line">    min_y, max_y = <span class="built_in">min</span>(y_coords), <span class="built_in">max</span>(y_coords)</span><br><span class="line">    height = max_y - min_y</span><br><span class="line">    gradient_colors = create_gradient_color(start_color, end_color, height)</span><br><span class="line">    <span class="keyword">for</span> i, color <span class="keyword">in</span> <span class="built_in">enumerate</span>(gradient_colors):</span><br><span class="line">        draw.line([(<span class="built_in">min</span>(x_coords), min_y + i), (<span class="built_in">max</span>(x_coords), min_y + i)], fill=color)</span><br><span class="line"></span><br><span class="line">        </span><br></pre></td></tr></table></figure>
<h3 id="標註尺寸">標註尺寸</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">draw_dimension_line</span>(<span class="params">draw, X1_DIM,Y1_DIM,X2_DIM,Y2_DIM, font_size, font_path,dim_space=<span class="number">20</span>,arrow_length=<span class="number">10</span></span>):</span><br><span class="line"></span><br><span class="line">    text_color=<span class="string">&#x27;#e85fd6&#x27;</span></span><br><span class="line">    <span class="comment"># font_size=30</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> Y1_DIM==Y2_DIM:</span><br><span class="line"></span><br><span class="line">        dim_txt=<span class="built_in">str</span>(<span class="built_in">int</span>(X2_DIM-X1_DIM))</span><br><span class="line"></span><br><span class="line">        draw_text(draw, dim_txt,((X1_DIM+X2_DIM)/<span class="number">2</span>-font_size/<span class="number">2</span>,(Y1_DIM+Y2_DIM)/<span class="number">2</span>-font_size*<span class="number">2.5</span>-dim_space), font_size, font_path, fill=text_color)</span><br><span class="line">        draw_line(draw, (X1_DIM, Y1_DIM-dim_space), (X1_DIM, Y1_DIM-arrow_length-dim_space), fill=text_color, width=<span class="number">1</span>)</span><br><span class="line">        draw_line(draw, (X2_DIM, Y2_DIM-dim_space), (X2_DIM, Y2_DIM-arrow_length-dim_space), fill=text_color, width=<span class="number">1</span>)</span><br><span class="line">        draw_line(draw, (X1_DIM, Y1_DIM-arrow_length/<span class="number">2</span>-dim_space), (X2_DIM, Y2_DIM-arrow_length/<span class="number">2</span>-dim_space), fill=text_color, width=<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">elif</span> X1_DIM==X2_DIM:</span><br><span class="line"></span><br><span class="line">        dim_txt=<span class="built_in">str</span>(<span class="built_in">int</span>(Y2_DIM-Y1_DIM))</span><br><span class="line"></span><br><span class="line">        draw_text(draw, dim_txt,((X1_DIM+X2_DIM)/<span class="number">2</span>-dim_space-<span class="number">2.5</span>*font_size,(Y1_DIM+Y2_DIM)/<span class="number">2</span>-font_size), font_size, font_path, fill=text_color)</span><br><span class="line">        draw_line(draw, (X1_DIM-dim_space, Y1_DIM), (X1_DIM-arrow_length-dim_space, Y1_DIM), fill=text_color, width=<span class="number">1</span>)</span><br><span class="line">        draw_line(draw, (X2_DIM-dim_space, Y2_DIM), (X2_DIM-arrow_length-dim_space, Y2_DIM), fill=text_color, width=<span class="number">1</span>)</span><br><span class="line">        draw_line(draw, (X1_DIM-arrow_length/<span class="number">2</span>-dim_space, Y1_DIM), (X2_DIM-arrow_length/<span class="number">2</span>-dim_space, Y2_DIM), fill=text_color, width=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h2 id="預期成果">預期成果</h2>
<figure>
<img src="U.JPG" alt="Fig1.工程設計簡圖" />
<figcaption aria-hidden="true">Fig1.工程設計簡圖</figcaption>
</figure>
<h2 id="完整做法">完整做法</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_text</span>(<span class="params">draw, text, position, font_size, font_path, fill=<span class="string">&#x27;black&#x27;</span></span>):</span><br><span class="line">    font = ImageFont.truetype(font_path, font_size)</span><br><span class="line">    draw.text(position, text, font=font, fill=fill)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_line</span>(<span class="params">draw, start_point, end_point, fill=<span class="string">&#x27;black&#x27;</span>, width=<span class="number">3</span></span>):</span><br><span class="line">    draw.line([start_point, end_point], fill=fill, width=width)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_polygon</span>(<span class="params">draw, points, outline=<span class="string">&#x27;black&#x27;</span>, fill=<span class="literal">None</span>, width=<span class="number">3</span></span>):</span><br><span class="line">    draw.polygon(points, outline=outline, fill=fill)</span><br><span class="line">    <span class="keyword">if</span> fill:</span><br><span class="line">        draw.line(points + [points[<span class="number">0</span>]], fill=outline, width=width)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_polyline</span>(<span class="params">draw, points, fill=<span class="string">&#x27;black&#x27;</span>, width=<span class="number">3</span></span>):</span><br><span class="line">    draw.line(points, fill=fill, width=width)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_gradient_color</span>(<span class="params">start_color, end_color, height</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    創建垂直漸層顏色列表</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param start_color: 開始顏色 (r, g, b)</span></span><br><span class="line"><span class="string">    :param end_color: 結束顏色 (r, g, b)</span></span><br><span class="line"><span class="string">    :param height: 高度（漸層的總行數）</span></span><br><span class="line"><span class="string">    :return: 漸層顏色列表</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    gradient = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">        ratio = i / height</span><br><span class="line">        r = <span class="built_in">int</span>(start_color[<span class="number">0</span>] * (<span class="number">1</span> - ratio) + end_color[<span class="number">0</span>] * ratio)</span><br><span class="line">        g = <span class="built_in">int</span>(start_color[<span class="number">1</span>] * (<span class="number">1</span> - ratio) + end_color[<span class="number">1</span>] * ratio)</span><br><span class="line">        b = <span class="built_in">int</span>(start_color[<span class="number">2</span>] * (<span class="number">1</span> - ratio) + end_color[<span class="number">2</span>] * ratio)</span><br><span class="line">        gradient.append((r, g, b))</span><br><span class="line">    <span class="keyword">return</span> gradient</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_gradient_polygon</span>(<span class="params">draw, vertices, start_color, end_color</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    繪製漸層顏色的多邊形</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param draw: PIL.ImageDraw對象</span></span><br><span class="line"><span class="string">    :param vertices: 多邊形頂點座標列表 [(x1, y1), (x2, y2), ...]</span></span><br><span class="line"><span class="string">    :param start_color: 開始顏色 (r, g, b)</span></span><br><span class="line"><span class="string">    :param end_color: 結束顏色 (r, g, b)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    x_coords, y_coords = <span class="built_in">zip</span>(*vertices)</span><br><span class="line">    min_y, max_y = <span class="built_in">min</span>(y_coords), <span class="built_in">max</span>(y_coords)</span><br><span class="line">    height = max_y - min_y</span><br><span class="line">    gradient_colors = create_gradient_color(start_color, end_color, height)</span><br><span class="line">    <span class="keyword">for</span> i, color <span class="keyword">in</span> <span class="built_in">enumerate</span>(gradient_colors):</span><br><span class="line">        draw.line([(<span class="built_in">min</span>(x_coords), min_y + i), (<span class="built_in">max</span>(x_coords), min_y + i)], fill=color)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_dimension_line</span>(<span class="params">draw, X1_DIM,Y1_DIM,X2_DIM,Y2_DIM, font_size, font_path,dim_space=<span class="number">20</span>,arrow_length=<span class="number">10</span></span>):</span><br><span class="line"></span><br><span class="line">    text_color=<span class="string">&#x27;#e85fd6&#x27;</span></span><br><span class="line">    <span class="comment"># font_size=30</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> Y1_DIM==Y2_DIM:</span><br><span class="line"></span><br><span class="line">        dim_txt=<span class="built_in">str</span>(<span class="built_in">int</span>(X2_DIM-X1_DIM))</span><br><span class="line"></span><br><span class="line">        draw_text(draw, dim_txt,((X1_DIM+X2_DIM)/<span class="number">2</span>-font_size/<span class="number">2</span>,(Y1_DIM+Y2_DIM)/<span class="number">2</span>-font_size*<span class="number">2.5</span>-dim_space), font_size, font_path, fill=text_color)</span><br><span class="line">        draw_line(draw, (X1_DIM, Y1_DIM-dim_space), (X1_DIM, Y1_DIM-arrow_length-dim_space), fill=text_color, width=<span class="number">1</span>)</span><br><span class="line">        draw_line(draw, (X2_DIM, Y2_DIM-dim_space), (X2_DIM, Y2_DIM-arrow_length-dim_space), fill=text_color, width=<span class="number">1</span>)</span><br><span class="line">        draw_line(draw, (X1_DIM, Y1_DIM-arrow_length/<span class="number">2</span>-dim_space), (X2_DIM, Y2_DIM-arrow_length/<span class="number">2</span>-dim_space), fill=text_color, width=<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">elif</span> X1_DIM==X2_DIM:</span><br><span class="line"></span><br><span class="line">        dim_txt=<span class="built_in">str</span>(<span class="built_in">int</span>(Y2_DIM-Y1_DIM))</span><br><span class="line"></span><br><span class="line">        draw_text(draw, dim_txt,((X1_DIM+X2_DIM)/<span class="number">2</span>-dim_space-<span class="number">2.5</span>*font_size,(Y1_DIM+Y2_DIM)/<span class="number">2</span>-font_size), font_size, font_path, fill=text_color)</span><br><span class="line">        draw_line(draw, (X1_DIM-dim_space, Y1_DIM), (X1_DIM-arrow_length-dim_space, Y1_DIM), fill=text_color, width=<span class="number">1</span>)</span><br><span class="line">        draw_line(draw, (X2_DIM-dim_space, Y2_DIM), (X2_DIM-arrow_length-dim_space, Y2_DIM), fill=text_color, width=<span class="number">1</span>)</span><br><span class="line">        draw_line(draw, (X1_DIM-arrow_length/<span class="number">2</span>-dim_space, Y1_DIM), (X2_DIM-arrow_length/<span class="number">2</span>-dim_space, Y2_DIM), fill=text_color, width=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 相關參數</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">plot_Uchannel</span>(<span class="params">B,H,T,env_left_txt,env_right_txt,env_left,env_right</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># B=200</span></span><br><span class="line">    <span class="comment"># H=120</span></span><br><span class="line">    <span class="comment"># T=25</span></span><br><span class="line"></span><br><span class="line">    X_left,X_right,Y_top,Y_bottom=<span class="number">150</span>,<span class="number">150</span>,<span class="number">150</span>,<span class="number">100</span></span><br><span class="line"></span><br><span class="line">    X0=X_left+T+B/<span class="number">2</span></span><br><span class="line">    Y0=Y_top+H</span><br><span class="line"></span><br><span class="line">    <span class="comment"># env_left_txt=&quot;路&quot;</span></span><br><span class="line">    <span class="comment"># env_left=20</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># env_right_txt=&quot;田&quot;</span></span><br><span class="line">    <span class="comment"># env_right=60</span></span><br><span class="line"></span><br><span class="line">    env_left_body=H-env_left+T</span><br><span class="line">    env_right_body=H-env_right+T</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 設置圖像尺寸和解析度</span></span><br><span class="line">    width, height = X_left+X_right+<span class="number">2</span>*T+B, Y_top+Y_bottom+H+T</span><br><span class="line">    dpi = <span class="number">100</span>  <span class="comment"># 高 DPI 設置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 創建圖像</span></span><br><span class="line">    image = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (width, height), <span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">    draw = ImageDraw.Draw(image)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 字體設置</span></span><br><span class="line">    font_path = <span class="string">&quot;NotoSansTC-Regular.ttf&quot;</span>  <span class="comment"># 字體文件的路徑</span></span><br><span class="line">    font_size = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 繪製文字</span></span><br><span class="line">    draw_text(draw, env_left_txt, (X0-B/<span class="number">2</span>-T-X_left/<span class="number">2</span>-<span class="number">20</span>, Y0-H+env_left-font_size*<span class="number">2</span>), font_size*<span class="number">1.2</span>, font_path)</span><br><span class="line">    draw_text(draw, env_right_txt, (X0+B/<span class="number">2</span>+T+X_right/<span class="number">2</span>, Y0-H+env_right-font_size*<span class="number">2</span>), font_size*<span class="number">1.2</span>, font_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 土體</span></span><br><span class="line">    polygon_points = [ (X0-B/<span class="number">2</span>-T, Y0-H+env_left), (X0-B/<span class="number">2</span>-T-X_left, Y0-H+env_left),  (X0-B/<span class="number">2</span>-T-X_left, Y0-H+env_left+env_left_body), (X0-B/<span class="number">2</span>-T, Y0-H+env_left+env_left_body)]</span><br><span class="line">    draw_gradient_polygon(draw, polygon_points, (<span class="number">51</span>, <span class="number">26</span>, <span class="number">0</span>),(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 土體</span></span><br><span class="line"></span><br><span class="line">    polygon_points = [ (X0+B/<span class="number">2</span>+T, Y0-H+env_right), (X0+B/<span class="number">2</span>+T+X_right, Y0-H+env_right), (X0+B/<span class="number">2</span>+T+X_right, Y0-H+env_right+env_right_body), (X0+B/<span class="number">2</span>+T, Y0-H+env_right+env_right_body)]</span><br><span class="line">    draw_gradient_polygon(draw, polygon_points, (<span class="number">51</span>, <span class="number">26</span>, <span class="number">0</span>),(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 面層</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> env_left_txt==<span class="string">&quot;田&quot;</span>:</span><br><span class="line">        draw_line(draw, (X0-B/<span class="number">2</span>-T, Y0-H+env_left), (X0-B/<span class="number">2</span>-T-X_left, Y0-H+env_left), fill=<span class="string">&#x27;green&#x27;</span>, width=<span class="number">4</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        draw_line(draw, (X0-B/<span class="number">2</span>-T, Y0-H+env_left), (X0-B/<span class="number">2</span>-T-X_left, Y0-H+env_left), fill=(<span class="number">0</span>, <span class="number">26</span>, <span class="number">51</span>), width=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> env_right_txt==<span class="string">&quot;路&quot;</span>:</span><br><span class="line">        draw_line(draw, (X0+B/<span class="number">2</span>+T, Y0-H+env_right), (X0+B/<span class="number">2</span>+T+X_right, Y0-H+env_right), fill=(<span class="number">0</span>, <span class="number">26</span>, <span class="number">51</span>), width=<span class="number">4</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        draw_line(draw, (X0+B/<span class="number">2</span>+T, Y0-H+env_right), (X0+B/<span class="number">2</span>+T+X_right, Y0-H+env_right), fill=<span class="string">&#x27;green&#x27;</span>, width=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 結構體</span></span><br><span class="line"></span><br><span class="line">    pts =[(X0,Y0),(X0-B/<span class="number">2</span>,Y0),(X0-B/<span class="number">2</span>,Y0-H),(X0-B/<span class="number">2</span>-T,(Y0-H)),(X0-B/<span class="number">2</span>-T,(Y0+T)),(X0+B/<span class="number">2</span>+T,(Y0+T)),(X0+B/<span class="number">2</span>+T,(Y0-H)),(X0+B/<span class="number">2</span>,(Y0-H)),(X0+B/<span class="number">2</span>,Y0),(X0,Y0)]</span><br><span class="line"></span><br><span class="line">    draw_polygon(draw, pts, outline=<span class="string">&#x27;black&#x27;</span>, fill=<span class="string">&#x27;gray&#x27;</span>, width=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">## 尺寸標註</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">### 水平方向</span></span><br><span class="line"></span><br><span class="line">    X1_DIM,Y1_DIM=X0-B/<span class="number">2</span>-T,Y0-H</span><br><span class="line">    X2_DIM,Y2_DIM=X0-B/<span class="number">2</span>,Y0-H</span><br><span class="line"></span><br><span class="line">    draw_dimension_line(draw, X1_DIM,Y1_DIM,X2_DIM,Y2_DIM, font_size, font_path)</span><br><span class="line"></span><br><span class="line">    X1_DIM,Y1_DIM=X0-B/<span class="number">2</span>,Y0-H</span><br><span class="line">    X2_DIM,Y2_DIM=X0+B/<span class="number">2</span>,Y0-H</span><br><span class="line"></span><br><span class="line">    draw_dimension_line(draw, X1_DIM,Y1_DIM,X2_DIM,Y2_DIM, font_size, font_path)</span><br><span class="line"></span><br><span class="line">    X1_DIM,Y1_DIM=X0+B/<span class="number">2</span>,Y0-H</span><br><span class="line">    X2_DIM,Y2_DIM=X0+B/<span class="number">2</span>+T,Y0-H</span><br><span class="line"></span><br><span class="line">    draw_dimension_line(draw, X1_DIM,Y1_DIM,X2_DIM,Y2_DIM, font_size, font_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment">### 垂直方向</span></span><br><span class="line"></span><br><span class="line">    X1_DIM,Y1_DIM=X0-B/<span class="number">2</span>-T,Y0-H</span><br><span class="line">    X2_DIM,Y2_DIM=X0-B/<span class="number">2</span>-T,Y0</span><br><span class="line"></span><br><span class="line">    draw_dimension_line(draw, X1_DIM,Y1_DIM,X2_DIM,Y2_DIM, font_size, font_path)</span><br><span class="line"></span><br><span class="line">    X1_DIM,Y1_DIM=X0-B/<span class="number">2</span>-T,Y0</span><br><span class="line">    X2_DIM,Y2_DIM=X0-B/<span class="number">2</span>-T,Y0+T</span><br><span class="line"></span><br><span class="line">    draw_dimension_line(draw, X1_DIM,Y1_DIM,X2_DIM,Y2_DIM, font_size, font_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存高解析度圖像</span></span><br><span class="line">    image.save(<span class="string">&quot;high_quality_drawing.png&quot;</span>, dpi=(dpi, dpi))</span><br><span class="line">    image.show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 給定尺寸</span></span><br><span class="line">    plot_Uchannel(<span class="number">300</span>,<span class="number">200</span>,<span class="number">30</span>,<span class="string">&quot;田&quot;</span>,<span class="string">&quot;田&quot;</span>,<span class="number">20</span>,<span class="number">50</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Streamlit工程進度甘特圖</title>
    <url>/posts/43562660/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>工程進行期間會有很多不同的任務，每個任務會有自己所需要花費的金額、起始日期、持續天數，藉由這些任務的組合可以統整出工程的預定進度情況，將不同任務繪製在同一個時間軸上可以清楚的了解到現階段有那些任務應該要被完成以及未來還有哪些任務需要完成，對於任務單純的工程很有大的助益。</p>
<p>前陣子在開發施工日誌的時候，如果採用施工計畫書上的每15日累積進度做內差取值會比較容易失真，後來想想，其實這個累積進度的來源也是按照甘特圖的比例所得出的結果?但總歸如何，還是花了一些時間熟悉一下matplotlib的做圖套件，並且搭配streamlit前端介面做一個雲端服務，目標是希望能夠產出<strong>工程甘特圖</strong>及<strong>每日進度的CSV檔案</strong>，未來可以匯入其他的日報VBA工具。</p>
<span id="more"></span>
<h2 id="操作介面">操作介面</h2>
<figure>
<img src="upload_a58406d159b6d33c6dfc15715aef2378.png" alt="操作介面" />
<figcaption aria-hidden="true">操作介面</figcaption>
</figure>
<ol type="1">
<li>進入系統之後左側為任務編輯區塊，右側為甘特圖</li>
<li>任務編輯區塊可以進行新增、刪除、編輯</li>
<li>每次的更動都會重新生成甘特圖，下載CSV也會即時更新</li>
</ol>
<p>如有看不懂的地方可以點選<strong>影片操作教學</strong></p>
<h2 id="網頁連結">網頁連結</h2>
<p><a href="https://progress.streamlit.app/"><span class="github-emoji"
data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
工程進度V0.1.0 網頁連結</a></p>
<h2 id="完整做法">完整做法</h2>
<blockquote>
<p>Github上面的是已經精挑細選過的程式碼，製作期間有陸陸續續砍掉一些功能，可以參照下面的註解處。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> streamlit <span class="keyword">as</span> st</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.dates <span class="keyword">as</span> mdates</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> FontProperties</span><br><span class="line"><span class="keyword">import</span> matplotlib.ticker <span class="keyword">as</span> ticker</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> date</span><br><span class="line"></span><br><span class="line"><span class="comment">### Init ###</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main_zh</span>():</span><br><span class="line"></span><br><span class="line">    SYSTEM_VERSION=<span class="string">&quot;V1.0.0&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># st.set_page_config(layout=&#x27;wide&#x27;)</span></span><br><span class="line"></span><br><span class="line">    font_prop = FontProperties(fname=<span class="string">&#x27;./NotoSansCJK-Regular.ttc&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化數據，如果 st.session_state 中沒有存儲數據</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># btn_sample = st.button(&quot;載入測試案例&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;data&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> st.session_state:</span><br><span class="line">        <span class="comment"># df = pd.DataFrame(columns=[&#x27;項目名稱&#x27;, &#x27;花費金額&#x27;, &#x27;起始日期&#x27;, &#x27;持續天數&#x27;, &#x27;結束日期&#x27;])</span></span><br><span class="line">    <span class="comment">#     st.session_state[&#x27;data&#x27;]=[</span></span><br><span class="line">    <span class="comment">#         &#123;&#x27;項目名稱&#x27;: &#x27;點我修改A&#x27;, &#x27;花費金額&#x27;: 1000, &#x27;起始日期&#x27;: &#x27;2024-07-01&#x27;, &#x27;持續天數&#x27;: 5, &#x27;結束日期&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line">    <span class="comment">#         &#123;&#x27;項目名稱&#x27;: &#x27;點我修改B&#x27;, &#x27;花費金額&#x27;: 1000, &#x27;起始日期&#x27;: &#x27;2024-07-01&#x27;, &#x27;持續天數&#x27;: 5, &#x27;結束日期&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line">    <span class="comment">#         &#123;&#x27;項目名稱&#x27;: &#x27;點我修改C&#x27;, &#x27;花費金額&#x27;: 1000, &#x27;起始日期&#x27;: &#x27;2024-07-01&#x27;, &#x27;持續天數&#x27;: 5, &#x27;結束日期&#x27;: &#x27;&#x27;&#125;</span></span><br><span class="line">    <span class="comment">#         ]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># # st.json(st.session_state)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># if btn_sample:</span></span><br><span class="line">        <span class="comment"># data = &#123;</span></span><br><span class="line">        <span class="comment">#     &#x27;項目名稱&#x27;: [&#x27;基礎構造&#x27;, &#x27;結構加固&#x27;, &#x27;地基工程&#x27;, &#x27;屋頂修復&#x27;, &#x27;室內裝修&#x27;, &#x27;電力系統升級&#x27;, &#x27;水利設施建設&#x27;, &#x27;道路擴建&#x27;, &#x27;綠化工程&#x27;, &#x27;消防安全系統&#x27;],</span></span><br><span class="line">        <span class="comment">#     &#x27;花費金額&#x27;: [50000, 120000, 80000, 100000, 60000, 70000, 90000, 110000, 80000, 90000],</span></span><br><span class="line">        <span class="comment">#     &#x27;起始日期&#x27;: [&#x27;2024-07-01&#x27;, &#x27;2024-07-15&#x27;, &#x27;2024-08-01&#x27;, &#x27;2024-07-01&#x27;, &#x27;2024-07-05&#x27;, &#x27;2024-07-20&#x27;, &#x27;2024-07-25&#x27;, &#x27;2024-08-05&#x27;, &#x27;2024-08-10&#x27;, &#x27;2024-08-15&#x27;],</span></span><br><span class="line">        <span class="comment">#     &#x27;持續天數&#x27;: [5, 12, 8, 10, 6, 7, 9, 11, 8, 9],</span></span><br><span class="line">        <span class="comment">#     &#x27;結束日期&#x27;: [&#x27;&#x27;] * 10</span></span><br><span class="line">        <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># st.session_state[&#x27;data&#x27;]=[]</span></span><br><span class="line"></span><br><span class="line">        sample_data = [</span><br><span class="line">        &#123;<span class="string">&#x27;項目名稱&#x27;</span>: <span class="string">&#x27;基礎構造&#x27;</span>, <span class="string">&#x27;花費金額&#x27;</span>: <span class="number">50000</span>, <span class="string">&#x27;起始日期&#x27;</span>: <span class="string">&#x27;2024-07-01&#x27;</span>, <span class="string">&#x27;持續天數&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;結束日期&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;項目名稱&#x27;</span>: <span class="string">&#x27;結構加固&#x27;</span>, <span class="string">&#x27;花費金額&#x27;</span>: <span class="number">120000</span>, <span class="string">&#x27;起始日期&#x27;</span>: <span class="string">&#x27;2024-07-15&#x27;</span>, <span class="string">&#x27;持續天數&#x27;</span>: <span class="number">12</span>, <span class="string">&#x27;結束日期&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;項目名稱&#x27;</span>: <span class="string">&#x27;地基工程&#x27;</span>, <span class="string">&#x27;花費金額&#x27;</span>: <span class="number">80000</span>, <span class="string">&#x27;起始日期&#x27;</span>: <span class="string">&#x27;2024-08-01&#x27;</span>, <span class="string">&#x27;持續天數&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;結束日期&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;項目名稱&#x27;</span>: <span class="string">&#x27;屋頂修復&#x27;</span>, <span class="string">&#x27;花費金額&#x27;</span>: <span class="number">100000</span>, <span class="string">&#x27;起始日期&#x27;</span>: <span class="string">&#x27;2024-07-01&#x27;</span>, <span class="string">&#x27;持續天數&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;結束日期&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;項目名稱&#x27;</span>: <span class="string">&#x27;室內裝修&#x27;</span>, <span class="string">&#x27;花費金額&#x27;</span>: <span class="number">60000</span>, <span class="string">&#x27;起始日期&#x27;</span>: <span class="string">&#x27;2024-07-05&#x27;</span>, <span class="string">&#x27;持續天數&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;結束日期&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;項目名稱&#x27;</span>: <span class="string">&#x27;電力系統升級&#x27;</span>, <span class="string">&#x27;花費金額&#x27;</span>: <span class="number">70000</span>, <span class="string">&#x27;起始日期&#x27;</span>: <span class="string">&#x27;2024-07-20&#x27;</span>, <span class="string">&#x27;持續天數&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;結束日期&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;項目名稱&#x27;</span>: <span class="string">&#x27;水利設施建設&#x27;</span>, <span class="string">&#x27;花費金額&#x27;</span>: <span class="number">90000</span>, <span class="string">&#x27;起始日期&#x27;</span>: <span class="string">&#x27;2024-07-25&#x27;</span>, <span class="string">&#x27;持續天數&#x27;</span>: <span class="number">9</span>, <span class="string">&#x27;結束日期&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;項目名稱&#x27;</span>: <span class="string">&#x27;道路擴建&#x27;</span>, <span class="string">&#x27;花費金額&#x27;</span>: <span class="number">110000</span>, <span class="string">&#x27;起始日期&#x27;</span>: <span class="string">&#x27;2024-08-05&#x27;</span>, <span class="string">&#x27;持續天數&#x27;</span>: <span class="number">11</span>, <span class="string">&#x27;結束日期&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;項目名稱&#x27;</span>: <span class="string">&#x27;綠化工程&#x27;</span>, <span class="string">&#x27;花費金額&#x27;</span>: <span class="number">80000</span>, <span class="string">&#x27;起始日期&#x27;</span>: <span class="string">&#x27;2024-08-10&#x27;</span>, <span class="string">&#x27;持續天數&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;結束日期&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;項目名稱&#x27;</span>: <span class="string">&#x27;消防安全系統&#x27;</span>, <span class="string">&#x27;花費金額&#x27;</span>: <span class="number">90000</span>, <span class="string">&#x27;起始日期&#x27;</span>: <span class="string">&#x27;2024-08-15&#x27;</span>, <span class="string">&#x27;持續天數&#x27;</span>: <span class="number">9</span>, <span class="string">&#x27;結束日期&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># df = pd.DataFrame(data)</span></span><br><span class="line">        <span class="comment"># df[&#x27;起始日期&#x27;] = pd.to_datetime(df[&#x27;起始日期&#x27;])</span></span><br><span class="line">        <span class="comment"># df[&#x27;結束日期&#x27;] = df[&#x27;起始日期&#x27;] + pd.to_timedelta(df[&#x27;持續天數&#x27;], unit=&#x27;D&#x27;)</span></span><br><span class="line">        <span class="comment"># st.session_state.data = df</span></span><br><span class="line"></span><br><span class="line">        st.session_state[<span class="string">&#x27;data&#x27;</span>]=sample_data</span><br><span class="line"></span><br><span class="line">    <span class="comment"># for item in st.session_state[&#x27;data&#x27;]:</span></span><br><span class="line">    <span class="comment">#     st.write(item)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 從 st.session_state 中獲取 DataFrame</span></span><br><span class="line">    <span class="comment"># df = st.session_state.data.dropna(subset=[&#x27;持續天數&#x27;])</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    col1, col2 = st.columns([<span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> col1:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        st.markdown(<span class="string">&quot;### :spiral_calendar_pad: 工程進度 &quot;</span>+SYSTEM_VERSION)</span><br><span class="line">        st.info(<span class="string">&quot;作者:**HankLin @202407**&quot;</span>)</span><br><span class="line">        st.markdown(<span class="string">&quot;---&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 新增方式，回饋到 st.session_state</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># with st.form(&quot;C&quot;, True):</span></span><br><span class="line">        <span class="comment">#     myitem = st.text_input(&quot;施作項目:&quot;)</span></span><br><span class="line">        <span class="comment">#     mycost = st.number_input(&quot;花費金額:&quot;)</span></span><br><span class="line">        <span class="comment">#     mystart_date = st.date_input(&quot;開始日期:&quot;)</span></span><br><span class="line">        <span class="comment">#     mydays = st.number_input(&quot;持續天數&quot;)</span></span><br><span class="line">        <span class="comment">#     # st.json(st.session_state[&#x27;data&#x27;])</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#     if st.form_submit_button(&quot;新增&quot;):</span></span><br><span class="line">        <span class="comment">#         new_item = &#123;</span></span><br><span class="line">        <span class="comment">#             # &#x27;項目編號&#x27;: max(df[&#x27;項目編號&#x27;], default=0) + 1,  # 自動分配新的項目編號</span></span><br><span class="line">        <span class="comment">#             &#x27;項目名稱&#x27;: myitem,</span></span><br><span class="line">        <span class="comment">#             &#x27;花費金額&#x27;: mycost,</span></span><br><span class="line">        <span class="comment">#             &#x27;起始日期&#x27;: pd.to_datetime(mystart_date),</span></span><br><span class="line">        <span class="comment">#             &#x27;持續天數&#x27;: mydays,</span></span><br><span class="line">        <span class="comment">#             &#x27;結束日期&#x27;: &quot;&quot;#pd.to_datetime(mystart_date) + pd.to_timedelta(mydays, unit=&#x27;D&#x27;)</span></span><br><span class="line">        <span class="comment">#         &#125;</span></span><br><span class="line">        <span class="comment">#         # df = pd.concat([df, pd.DataFrame([new_item])], ignore_index=True)</span></span><br><span class="line">        <span class="comment">#         # new_items=st.session_state[&#x27;data&#x27;].append(new_item)</span></span><br><span class="line">        <span class="comment">#         # st.json(st.session_state[&#x27;data&#x27;])</span></span><br><span class="line">        <span class="comment">#         # st.session_state.data = df</span></span><br><span class="line">        <span class="comment">#         st.session_state[&#x27;data&#x27;].append(new_item)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#         st.success(&quot;成功新增施工項目！&quot;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 總表（編輯方式），回饋到 st.session_state</span></span><br><span class="line">        st.markdown(<span class="string">&quot;##### 		<span class="github-emoji" alias="point_down" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8">&#x1f447;</span> 施工項目填寫&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># st.json(st.session_state)</span></span><br><span class="line"></span><br><span class="line">        df=pd.DataFrame(st.session_state[<span class="string">&#x27;data&#x27;</span>])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># st.write(len(df))</span></span><br><span class="line">        </span><br><span class="line">        df[<span class="string">&#x27;起始日期&#x27;</span>] = pd.to_datetime(df[<span class="string">&#x27;起始日期&#x27;</span>])</span><br><span class="line"></span><br><span class="line">        edited_df = st.data_editor(df, use_container_width=<span class="literal">True</span>,num_rows=<span class="string">&#x27;dynamic&#x27;</span>,</span><br><span class="line">                                column_config=&#123;</span><br><span class="line">                                    <span class="string">&quot;起始日期&quot;</span>: st.column_config.DateColumn(</span><br><span class="line">                                        <span class="string">&quot;起始日期&quot;</span>,</span><br><span class="line">                                        min_value=date(<span class="number">2024</span>, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">                                        max_value=date(<span class="number">2030</span>, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">                                        <span class="built_in">format</span>=<span class="string">&quot;YYYY-MM-DD&quot;</span>,</span><br><span class="line">                                        step=<span class="number">1</span>,</span><br><span class="line">                                    )</span><br><span class="line">                                &#125;,</span><br><span class="line">                                hide_index=<span class="literal">True</span>, column_order=(<span class="string">&quot;項目名稱&quot;</span>, <span class="string">&quot;花費金額&quot;</span>, <span class="string">&quot;起始日期&quot;</span>, <span class="string">&quot;持續天數&quot;</span>))</span><br><span class="line"></span><br><span class="line">        edited_df[<span class="string">&#x27;結束日期&#x27;</span>] = edited_df[<span class="string">&#x27;起始日期&#x27;</span>] + pd.to_timedelta(edited_df[<span class="string">&#x27;持續天數&#x27;</span>], unit=<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        is_show_text=st.toggle(<span class="string">&quot;圖塊文字&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">### 計算流程以下都沒問題，可以先引入session_state後開始</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># final_df=st.session_state.data</span></span><br><span class="line"></span><br><span class="line">    final_df=edited_df</span><br><span class="line">    <span class="comment"># final_df = edited_df.dropna(subset=[&#x27;持續天數&#x27;])</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(final_df)==<span class="number">0</span>:</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 計算每日耗費成本</span></span><br><span class="line">        total_cost = final_df[<span class="string">&#x27;花費金額&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line">        start_date = final_df[<span class="string">&#x27;起始日期&#x27;</span>].<span class="built_in">min</span>()</span><br><span class="line">        end_date = final_df[<span class="string">&#x27;結束日期&#x27;</span>].<span class="built_in">max</span>()</span><br><span class="line">        date_range = pd.date_range(start=start_date, end=end_date, freq=<span class="string">&#x27;D&#x27;</span>)  <span class="comment"># 每日頻率</span></span><br><span class="line">        daily_cost = np.zeros(<span class="built_in">len</span>(date_range))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i, row <span class="keyword">in</span> final_df.iterrows():</span><br><span class="line">            cost_per_day = row[<span class="string">&#x27;花費金額&#x27;</span>] / row[<span class="string">&#x27;持續天數&#x27;</span>]</span><br><span class="line">            daily_cost[(date_range &gt; row[<span class="string">&#x27;起始日期&#x27;</span>]) &amp; (date_range &lt;= row[<span class="string">&#x27;結束日期&#x27;</span>])] += cost_per_day</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 計算累積花費金額和每日進度百分比</span></span><br><span class="line">        cumulative_cost = np.cumsum(daily_cost)</span><br><span class="line"></span><br><span class="line">        daily_progress = (daily_cost / total_cost) * <span class="number">100</span></span><br><span class="line">        cumulative_progress = (cumulative_cost / total_cost) * <span class="number">100</span></span><br><span class="line"></span><br><span class="line">        csv_data = pd.DataFrame(&#123;</span><br><span class="line">            <span class="string">&#x27;日期&#x27;</span>: date_range,</span><br><span class="line">            <span class="string">&#x27;當日費用&#x27;</span>: daily_cost,</span><br><span class="line">            <span class="string">&#x27;累積費用&#x27;</span>: cumulative_cost,</span><br><span class="line">            <span class="string">&#x27;當日進度&#x27;</span>: daily_progress,</span><br><span class="line">            <span class="string">&#x27;累積進度&#x27;</span>: cumulative_progress</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># st.dataframe(csv_data)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> col2:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># plt.xticks(rotation=45)</span></span><br><span class="line"></span><br><span class="line">        fig, ax1 = plt.subplots(figsize=(<span class="number">14</span>, <span class="number">10</span>))</span><br><span class="line">        <span class="comment"># ax1=plt.xticks(rotation=45)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 畫甘特圖，調整顏色和透明度，加入格線</span></span><br><span class="line">        colors = plt.cm.Set3.colors  <span class="comment"># 使用單一色系</span></span><br><span class="line">        <span class="comment"># st.json(final_df.to_json())</span></span><br><span class="line">        cnt=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i, row <span class="keyword">in</span> final_df.iterrows():</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> pd.isna(row[<span class="string">&quot;持續天數&quot;</span>]):</span><br><span class="line">                color = colors[i % <span class="built_in">len</span>(colors)]</span><br><span class="line">                ax1.barh(row[<span class="string">&#x27;項目名稱&#x27;</span>], row[<span class="string">&#x27;持續天數&#x27;</span>], left=row[<span class="string">&#x27;起始日期&#x27;</span>], height=<span class="number">0.3</span>, color=color)</span><br><span class="line">                <span class="keyword">if</span> is_show_text==<span class="literal">True</span>:</span><br><span class="line">                    ax1.text(row[<span class="string">&#x27;起始日期&#x27;</span>], cnt, <span class="string">f&quot;<span class="subst">&#123;row[<span class="string">&#x27;項目名稱&#x27;</span>]&#125;</span>: <span class="subst">&#123;<span class="built_in">int</span>(row[<span class="string">&#x27;持續天數&#x27;</span>])&#125;</span>天&quot;</span>, color=<span class="string">&#x27;black&#x27;</span>, verticalalignment=<span class="string">&#x27;center&#x27;</span>, fontsize=<span class="number">10</span>, fontproperties=font_prop)</span><br><span class="line">                cnt=cnt+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 設置標籤和標題</span></span><br><span class="line">        ax1.set_xlabel(<span class="string">&#x27;日期&#x27;</span>, fontproperties=font_prop)</span><br><span class="line">        ax1.set_title(<span class="string">&#x27;施工進度甘特圖&#x27;</span>, fontproperties=font_prop)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> label <span class="keyword">in</span> ax1.get_yticklabels():</span><br><span class="line">            label.set_fontproperties(font_prop)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 在同一張圖上繪製每日累積進度圖並標示節點百分比</span></span><br><span class="line">        ax2 = ax1.twinx()</span><br><span class="line">        ax2.plot(date_range, cumulative_progress, marker=<span class="string">&#x27;o&#x27;</span>, linestyle=<span class="string">&#x27;-&#x27;</span>, color=<span class="string">&#x27;orange&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> i, txt <span class="keyword">in</span> <span class="built_in">enumerate</span>(cumulative_progress):</span><br><span class="line">            <span class="keyword">if</span> i % <span class="number">5</span>== <span class="number">0</span> <span class="keyword">or</span> txt==<span class="number">100</span>:  <span class="comment"># 每10%標示一次</span></span><br><span class="line">                ax2.annotate(<span class="string">f&#x27;<span class="subst">&#123;<span class="built_in">int</span>(txt)&#125;</span>%&#x27;</span>, (date_range[i], cumulative_progress[i]), textcoords=<span class="string">&quot;offset points&quot;</span>, xytext=(<span class="number">0</span>,<span class="number">10</span>), ha=<span class="string">&#x27;center&#x27;</span>, fontproperties=font_prop)</span><br><span class="line"></span><br><span class="line">        ax2.set_ylabel(<span class="string">&#x27;累積進度百分比 (%)&#x27;</span>, fontproperties=font_prop)</span><br><span class="line">        ax2.yaxis.set_major_locator(ticker.MultipleLocator(base=<span class="number">10</span>))</span><br><span class="line">        <span class="comment"># 調整 x 軸日期顯示為每半個月</span></span><br><span class="line">        ax1.xaxis.set_major_locator(mdates.DayLocator(interval=<span class="number">10</span>))  <span class="comment"># 每10顯示一次日期</span></span><br><span class="line">        ax1.xaxis.set_minor_locator(mdates.DayLocator(interval=<span class="number">1</span>))  <span class="comment"># 每天都顯示日期</span></span><br><span class="line">        ax1.xaxis.set_major_formatter(mdates.DateFormatter(<span class="string">&#x27;%Y-%m-%d&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 添加網格線</span></span><br><span class="line">        ax2.grid(<span class="literal">True</span>, which=<span class="string">&#x27;both&#x27;</span>, linestyle=<span class="string">&#x27;:&#x27;</span>, linewidth=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 添加圖例，將位置調整到右下角</span></span><br><span class="line">        <span class="comment"># ax1.legend([&#x27;工程項目&#x27;], loc=&#x27;upper left&#x27;, prop=font_prop)</span></span><br><span class="line">        ax2.legend([<span class="string">&#x27;累積進度&#x27;</span>], loc=<span class="string">&#x27;lower right&#x27;</span>, prop=font_prop)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 調整圖形排版</span></span><br><span class="line">        fig.tight_layout()</span><br><span class="line"></span><br><span class="line">        ax1.set_xlim(start_date - pd.Timedelta(days=<span class="number">3</span>), end_date + pd.Timedelta(days=<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 顯示圖形</span></span><br><span class="line">        st.pyplot(fig)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 下載 CSV 按鈕</span></span><br><span class="line">    csv_data = pd.DataFrame(&#123;</span><br><span class="line">        <span class="string">&#x27;date&#x27;</span>: date_range,</span><br><span class="line">        <span class="string">&#x27;progress(%)&#x27;</span>: daily_progress/<span class="number">100</span>,</span><br><span class="line">        <span class="string">&#x27;sum_progress(%)&#x27;</span>: cumulative_progress/<span class="number">100</span></span><br><span class="line">    &#125;)</span><br><span class="line">    csv_data[<span class="string">&#x27;date&#x27;</span>] = csv_data[<span class="string">&#x27;date&#x27;</span>].dt.strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)  <span class="comment"># 將日期轉換為字串格式</span></span><br><span class="line">    csv_string = csv_data.to_csv(index=<span class="literal">False</span>, encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提供下載按鈕</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> col1:</span><br><span class="line"></span><br><span class="line">        st.download_button(</span><br><span class="line">            label=<span class="string">&quot;下載 CSV 檔案&quot;</span>,</span><br><span class="line">            data=csv_string,</span><br><span class="line">            file_name=<span class="string">&#x27;progress_data.csv&#x27;</span>,</span><br><span class="line">            mime=<span class="string">&#x27;text/csv&#x27;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"><span class="comment"># def main_eng():</span></span><br><span class="line"><span class="comment">#     ### Initialization ###</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     SYSTEM_VERSION = &quot;V1.0.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     font_prop = FontProperties(fname=&#x27;./NotoSansCJK-Regular.ttc&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     # Initialize data if not stored in st.session_state</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     if &#x27;data&#x27; not in st.session_state:</span></span><br><span class="line"><span class="comment">#         sample_data = [</span></span><br><span class="line"><span class="comment">#             &#123;&#x27;project_name&#x27;: &#x27;Foundation Construction&#x27;, &#x27;cost&#x27;: 50000, &#x27;start_date&#x27;: &#x27;2024-07-01&#x27;, &#x27;duration_days&#x27;: 5, &#x27;end_date&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line"><span class="comment">#             &#123;&#x27;project_name&#x27;: &#x27;Structural Reinforcement&#x27;, &#x27;cost&#x27;: 120000, &#x27;start_date&#x27;: &#x27;2024-07-15&#x27;, &#x27;duration_days&#x27;: 12, &#x27;end_date&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line"><span class="comment">#             &#123;&#x27;project_name&#x27;: &#x27;Foundation Engineering&#x27;, &#x27;cost&#x27;: 80000, &#x27;start_date&#x27;: &#x27;2024-08-01&#x27;, &#x27;duration_days&#x27;: 8, &#x27;end_date&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line"><span class="comment">#             &#123;&#x27;project_name&#x27;: &#x27;Roof Repair&#x27;, &#x27;cost&#x27;: 100000, &#x27;start_date&#x27;: &#x27;2024-07-01&#x27;, &#x27;duration_days&#x27;: 10, &#x27;end_date&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line"><span class="comment">#             &#123;&#x27;project_name&#x27;: &#x27;Interior Decoration&#x27;, &#x27;cost&#x27;: 60000, &#x27;start_date&#x27;: &#x27;2024-07-05&#x27;, &#x27;duration_days&#x27;: 6, &#x27;end_date&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line"><span class="comment">#             &#123;&#x27;project_name&#x27;: &#x27;Power System Upgrade&#x27;, &#x27;cost&#x27;: 70000, &#x27;start_date&#x27;: &#x27;2024-07-20&#x27;, &#x27;duration_days&#x27;: 7, &#x27;end_date&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line"><span class="comment">#             &#123;&#x27;project_name&#x27;: &#x27;Water Facilities Construction&#x27;, &#x27;cost&#x27;: 90000, &#x27;start_date&#x27;: &#x27;2024-07-25&#x27;, &#x27;duration_days&#x27;: 9, &#x27;end_date&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line"><span class="comment">#             &#123;&#x27;project_name&#x27;: &#x27;Road Expansion&#x27;, &#x27;cost&#x27;: 110000, &#x27;start_date&#x27;: &#x27;2024-08-05&#x27;, &#x27;duration_days&#x27;: 11, &#x27;end_date&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line"><span class="comment">#             &#123;&#x27;project_name&#x27;: &#x27;Greening Project&#x27;, &#x27;cost&#x27;: 80000, &#x27;start_date&#x27;: &#x27;2024-08-10&#x27;, &#x27;duration_days&#x27;: 8, &#x27;end_date&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line"><span class="comment">#             &#123;&#x27;project_name&#x27;: &#x27;Fire Safety System&#x27;, &#x27;cost&#x27;: 90000, &#x27;start_date&#x27;: &#x27;2024-08-15&#x27;, &#x27;duration_days&#x27;: 9, &#x27;end_date&#x27;: &#x27;&#x27;&#125;,</span></span><br><span class="line"><span class="comment">#         ]</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">#         st.session_state[&#x27;data&#x27;] = sample_data</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     # Display UI</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     col1, col2 = st.columns([1, 2])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     with col1:</span></span><br><span class="line"><span class="comment">#         st.markdown(&quot;### :spiral_calendar_pad: Project Progress &quot; + SYSTEM_VERSION)</span></span><br><span class="line"><span class="comment">#         st.info(&quot;Author: **HankLin @202407**&quot;)</span></span><br><span class="line"><span class="comment">#         st.markdown(&quot;---&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         st.markdown(&quot;##### <span class="github-emoji" alias="point_down" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8">&#x1f447;</span> Edit Construction Projects&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         df = pd.DataFrame(st.session_state[&#x27;data&#x27;])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         edited_df = st.data_editor(df, use_container_width=True, num_rows=&#x27;dynamic&#x27;,</span></span><br><span class="line"><span class="comment">#                                 column_config=&#123;</span></span><br><span class="line"><span class="comment">#                                     &quot;start_date&quot;: st.column_config.DateColumn(</span></span><br><span class="line"><span class="comment">#                                         &quot;Start Date&quot;,</span></span><br><span class="line"><span class="comment">#                                         min_value=date(2024, 1, 1),</span></span><br><span class="line"><span class="comment">#                                         max_value=date(2030, 1, 1),</span></span><br><span class="line"><span class="comment">#                                         format=&quot;YYYY-MM-DD&quot;,</span></span><br><span class="line"><span class="comment">#                                         step=1,</span></span><br><span class="line"><span class="comment">#                                     )</span></span><br><span class="line"><span class="comment">#                                 &#125;,</span></span><br><span class="line"><span class="comment">#                                 hide_index=True, column_order=(&quot;project_name&quot;, &quot;cost&quot;, &quot;start_date&quot;, &quot;duration_days&quot;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         edited_df[&#x27;end_date&#x27;] = edited_df[&#x27;start_date&#x27;] + pd.to_timedelta(edited_df[&#x27;duration_days&#x27;], unit=&#x27;D&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         is_show_text = st.toggle(&quot;Show Block Text&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     with col2:</span></span><br><span class="line"><span class="comment">#         fig, ax1 = plt.subplots(figsize=(14, 10))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         colors = plt.cm.Set3.colors</span></span><br><span class="line"><span class="comment">#         cnt = 0</span></span><br><span class="line"><span class="comment">#         for i, row in edited_df.iterrows():</span></span><br><span class="line"><span class="comment">#             if not pd.isna(row[&quot;duration_days&quot;]):</span></span><br><span class="line"><span class="comment">#                 color = colors[i % len(colors)]</span></span><br><span class="line"><span class="comment">#                 ax1.barh(row[&#x27;project_name&#x27;], row[&#x27;duration_days&#x27;], left=row[&#x27;start_date&#x27;], height=0.3, color=color)</span></span><br><span class="line"><span class="comment">#                 if is_show_text:</span></span><br><span class="line"><span class="comment">#                     ax1.text(row[&#x27;start_date&#x27;], cnt, f&quot;&#123;row[&#x27;project_name&#x27;]&#125;: &#123;int(row[&#x27;duration_days&#x27;])&#125; days&quot;, color=&#x27;black&#x27;, verticalalignment=&#x27;center&#x27;, fontsize=10, fontproperties=font_prop)</span></span><br><span class="line"><span class="comment">#                 cnt += 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         ax1.set_xlabel(&#x27;Date&#x27;, fontproperties=font_prop)</span></span><br><span class="line"><span class="comment">#         ax1.set_title(&#x27;Construction Progress Gantt Chart&#x27;, fontproperties=font_prop)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         for label in ax1.get_yticklabels():</span></span><br><span class="line"><span class="comment">#             label.set_fontproperties(font_prop)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         ax2 = ax1.twinx()</span></span><br><span class="line"><span class="comment">#         ax2.plot(date_range, cumulative_progress, marker=&#x27;o&#x27;, linestyle=&#x27;-&#x27;, color=&#x27;orange&#x27;)</span></span><br><span class="line"><span class="comment">#         for i, txt in enumerate(cumulative_progress):</span></span><br><span class="line"><span class="comment">#             if i % 5 == 0 or txt == 100:</span></span><br><span class="line"><span class="comment">#                 ax2.annotate(f&#x27;&#123;int(txt)&#125;%&#x27;, (date_range[i], cumulative_progress[i]), textcoords=&quot;offset points&quot;, xytext=(0, 10), ha=&#x27;center&#x27;, fontproperties=font_prop)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         ax2.set_ylabel(&#x27;Cumulative Progress (%)&#x27;, fontproperties=font_prop)</span></span><br><span class="line"><span class="comment">#         ax2.yaxis.set_major_locator(ticker.MultipleLocator(base=10))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         ax1.xaxis.set_major_locator(mdates.DayLocator(interval=10))</span></span><br><span class="line"><span class="comment">#         ax1.xaxis.set_minor_locator(mdates.DayLocator(interval=1))</span></span><br><span class="line"><span class="comment">#         ax1.xaxis.set_major_formatter(mdates.DateFormatter(&#x27;%Y-%m-%d&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         ax2.grid(True, which=&#x27;both&#x27;, linestyle=&#x27;:&#x27;, linewidth=0.5)</span></span><br><span class="line"><span class="comment">#         ax2.legend([&#x27;Cumulative Progress&#x27;], loc=&#x27;lower right&#x27;, prop=font_prop)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         fig.tight_layout()</span></span><br><span class="line"><span class="comment">#         ax1.set_xlim(start_date - pd.Timedelta(days=3), end_date + pd.Timedelta(days=3))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#         st.pyplot(fig)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     # Download CSV button</span></span><br><span class="line"><span class="comment">#     csv_data = pd.DataFrame(&#123;</span></span><br><span class="line"><span class="comment">#         &#x27;date&#x27;: date_range,</span></span><br><span class="line"><span class="comment">#         &#x27;progress(%)&#x27;: daily_progress/100,</span></span><br><span class="line"><span class="comment">#         &#x27;sum_progress(%)&#x27;: cumulative_progress/100</span></span><br><span class="line"><span class="comment">#     &#125;)</span></span><br><span class="line"><span class="comment">#     csv_data[&#x27;date&#x27;] = csv_data[&#x27;date&#x27;].dt.strftime(&#x27;%Y-%m-%d&#x27;)</span></span><br><span class="line"><span class="comment">#     csv_string = csv_data.to_csv(index=False, encoding=&#x27;utf-8-sig&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     with col1:</span></span><br><span class="line"><span class="comment">#         st.download_button(</span></span><br><span class="line"><span class="comment">#             label=&quot;Download CSV File&quot;,</span></span><br><span class="line"><span class="comment">#             data=csv_string,</span></span><br><span class="line"><span class="comment">#             file_name=&#x27;progress_data.csv&#x27;,</span></span><br><span class="line"><span class="comment">#             mime=&#x27;text/csv&#x27;</span></span><br><span class="line"><span class="comment">#         )</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    </span><br><span class="line">    st.set_page_config(layout=<span class="string">&#x27;wide&#x27;</span>)</span><br><span class="line">    <span class="comment"># language_check=st.checkbox(&quot;English&quot;)</span></span><br><span class="line">    <span class="comment"># if language_check==True:</span></span><br><span class="line">        <span class="comment"># main_eng()</span></span><br><span class="line">    <span class="comment"># else:</span></span><br><span class="line">    main_zh()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="開發過程紀錄">開發過程紀錄</h2>
<ul>
<li>在dataframe中處理日期要把字串類型的日期透過'pd.to_datetime'轉型才能用</li>
<li>中文顯示會有問題的地方要先下載好字型檔讓'fontproperties'引用</li>
<li>甘特圖與累積進度圖要交疊在同一張圖要透過'ax2=ax1.twinx()'才能連一起</li>
<li>調整X軸座標顯示時，可以用'ax1.set_xlim(start_date -
pd.Timedelta(days=3), end_date +
pd.Timedelta(days=3))'來將前後各往外擴一些</li>
</ul>
]]></content>
      <categories>
        <category>專案成果</category>
      </categories>
      <tags>
        <tag>Streamlit</tag>
      </tags>
  </entry>
  <entry>
    <title>LINE機器人自動備份群組照片</title>
    <url>/posts/3782846762/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>在執行工程時，經常會為了聯絡相關事宜建立LINE群組來進行交談，通常施工照片也會在這個群裡面進行上傳讓大家可以確認內容，上傳照片到LINE群組的時候除了直接上傳外，也可以透過建立相簿將照片永久保存。</p>
<p>在LINE群組的檔案機制，照片或文件會有一定時間的存活期，當過了存活期之後照片就會呈現無法下載的情形，因此將照片做一個額外存放的動作算是滿重要的一個手段，而這件事除了繁瑣也很可能會因為再次請求上傳的過程多存了不少張<strong>重複的照片</strong>，而這個部分相信大多數人都是透過人眼來進行判別，火眼金睛用久也是會累的。</p>
<blockquote>
<p>希望能夠打造一個當群組內判定到照片資料時，能夠自動備份到指定硬碟並汰除重複照片的機器人，減少這些瑣事的發生。</p>
</blockquote>
<p>至於照片後續要進行處理就可以利用<a
href="https://www.hanksvba.com/posts/144473154/">施工照片VBA</a>進行資料排序、批次改名、報表輸出。</p>
<span id="more"></span>
<h2 id="操作畫面">操作畫面</h2>
<figure>
<img src="upload_53cc488e0a27cf493cd07d4905969356.png"
alt="Fig1.LINE群組畫面" />
<figcaption aria-hidden="true">Fig1.LINE群組畫面</figcaption>
</figure>
<figure>
<img src="upload_62b06ad5bf5b96e4922d9c01ab1de029.png"
alt="Fig2.本地端儲存畫面" />
<figcaption aria-hidden="true">Fig2.本地端儲存畫面</figcaption>
</figure>
<h2 id="基本工具">基本工具</h2>
<ul>
<li>LINEBOT
<ul>
<li>MessengerAPI</li>
</ul></li>
<li>ngrok
<ul>
<li>主要是用來建立https連線給LINEBOT的webhook使用</li>
</ul></li>
<li>python
<ul>
<li>flask</li>
<li>linebotsdk</li>
</ul></li>
</ul>
<h3 id="相關連結">相關連結</h3>
<ul>
<li><a
href="https://github.com/yaoandy107/line-bot-tutorial">LINEBOT基本建立</a></li>
<li><a href="https://ngrok.com/download">ngrok</a></li>
<li><a
href="https://ithelp.ithome.com.tw/m/articles/10295654">本地端使用ngrok</a></li>
</ul>
<h2 id="實作邏輯">實作邏輯</h2>
<h3 id="預先準備內容">預先準備內容</h3>
<ol type="1">
<li>建立flask並啟用app</li>
<li>啟用ngrok</li>
<li>複製將ngrok上面的對外連線IP</li>
<li>貼到LINEBOT的webhook</li>
</ol>
<h3 id="訊息接收過程">訊息接收過程</h3>
<ol type="1">
<li>LINEBOT在接受到群組內的訊息時</li>
<li>判定訊息屬性是否為Image</li>
<li>圖片內容會先暫時放在LINE機房並且生成一組token</li>
<li>收到訊息的同時會執行API(Webhook機制)</li>
<li>API中會將訊息做過濾，藉由token取得照片到本地端</li>
<li>本地端資料庫會記錄已經存放的照片跟Image_hash</li>
<li>判定是否有重複的image_hash，如有則回傳"圖片已存在"</li>
<li>通過重複汰除機制過濾完成後可將照片存放到指定位置</li>
</ol>
<h2 id="程式碼">程式碼</h2>
<h3 id="webhook">webhook</h3>
<blockquote>
<p>app_local.py</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 存放在本地端sqlite+本地端硬碟</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, abort</span><br><span class="line"><span class="keyword">from</span> linebot <span class="keyword">import</span> LineBotApi, WebhookHandler</span><br><span class="line"><span class="keyword">from</span> linebot.exceptions <span class="keyword">import</span> InvalidSignatureError</span><br><span class="line"><span class="keyword">from</span> linebot.models <span class="keyword">import</span> MessageEvent, ImageMessage, TextSendMessage</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sql_utils <span class="keyword">import</span> get_db, save_photo_to_db, is_image_hash_exist</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 設定你的 Channel Access Token 和 Channel Secret</span></span><br><span class="line">CHANNEL_ACCESS_TOKEN = <span class="string">&#x27;YOUR_CHANNEL_ACCESS_TOKEN&#x27;</span></span><br><span class="line">CHANNEL_SECRET = <span class="string">&#x27;YOUR_CHANNEL_SECRET&#x27;</span></span><br><span class="line"></span><br><span class="line">line_bot_api = LineBotApi(CHANNEL_ACCESS_TOKEN)</span><br><span class="line">handler = WebhookHandler(CHANNEL_SECRET)</span><br><span class="line"></span><br><span class="line">PHOTOS_DIR = <span class="string">&#x27;photos&#x27;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(PHOTOS_DIR):</span><br><span class="line">    os.makedirs(PHOTOS_DIR)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/callback&quot;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">callback</span>():</span><br><span class="line">    <span class="comment"># 獲取 X-Line-Signature header</span></span><br><span class="line">    signature = request.headers[<span class="string">&#x27;X-Line-Signature&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 獲取請求體</span></span><br><span class="line">    body = request.get_data(as_text=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        handler.handle(body, signature)</span><br><span class="line">    <span class="keyword">except</span> InvalidSignatureError:</span><br><span class="line">        abort(<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;OK&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@handler.add(<span class="params">MessageEvent, message=ImageMessage</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle_image_message</span>(<span class="params">event</span>):</span><br><span class="line">    <span class="comment"># 獲取圖像內容</span></span><br><span class="line">    message_content = line_bot_api.get_message_content(event.message.<span class="built_in">id</span>)</span><br><span class="line">    image_data = message_content.content</span><br><span class="line">    image_hash = calculate_image_hash(image_data)</span><br><span class="line">    user_id = event.source.user_id</span><br><span class="line">    group_id = event.source.group_id</span><br><span class="line">    photo_properties = &#123;<span class="string">&quot;edit&quot;</span>: <span class="string">&quot;false&quot;</span>&#125;</span><br><span class="line">    photo_url=<span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">next</span>(get_db()) <span class="keyword">as</span> db:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 檢查圖片是否已存在</span></span><br><span class="line">        <span class="keyword">if</span> is_image_hash_exist(db, image_hash):</span><br><span class="line">            reply_text = <span class="string">&quot;圖片已存在，未保存。&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 保存圖片到本地資料夾</span></span><br><span class="line">            file_name = <span class="built_in">str</span>(uuid.uuid4()) + <span class="string">&#x27;.jpg&#x27;</span></span><br><span class="line">            file_path = os.path.join(PHOTOS_DIR, file_name)</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="keyword">for</span> chunk <span class="keyword">in</span> message_content.iter_content():</span><br><span class="line">                    f.write(chunk)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 保存圖片到資料庫</span></span><br><span class="line">            saved_photo = save_photo_to_db(db, user_id, group_id, file_name, photo_url, photo_properties, image_hash)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Photo saved successfully:&quot;</span>, saved_photo)</span><br><span class="line"></span><br><span class="line">            reply_text = <span class="string">&quot;圖片已保存到本地端！&quot;</span></span><br><span class="line"></span><br><span class="line">    line_bot_api.reply_message(</span><br><span class="line">        event.reply_token,</span><br><span class="line">        TextSendMessage(text=reply_text)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_image_hash</span>(<span class="params">image_data</span>):</span><br><span class="line">    hasher = hashlib.sha256()</span><br><span class="line">    hasher.update(image_data)</span><br><span class="line">    <span class="keyword">return</span> hasher.hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="meta">@handler.add(<span class="params">MessageEvent</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle_message</span>(<span class="params">event</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(event.message, ImageMessage):</span><br><span class="line">        reply_text = <span class="string">&quot;請傳送圖片訊息。&quot;</span></span><br><span class="line">        line_bot_api.reply_message(</span><br><span class="line">            event.reply_token,</span><br><span class="line">            TextSendMessage(text=reply_text)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">8000</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>sql_utils.py</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine, Column, Integer, String, DateTime, JSON</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker,declarative_base</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Session</span><br><span class="line"></span><br><span class="line">DATABASE_URL=<span class="string">&quot;sqlite:///photos.db&quot;</span></span><br><span class="line">engine = create_engine(DATABASE_URL)</span><br><span class="line">Base = declarative_base()</span><br><span class="line">SessionLocal = sessionmaker(autocommit=<span class="literal">False</span>, autoflush=<span class="literal">False</span>, bind=engine)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定義數據庫模型</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Photo</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;photos_backup&#x27;</span></span><br><span class="line">    <span class="built_in">id</span> = Column(Integer, primary_key=<span class="literal">True</span>, index=<span class="literal">True</span>)</span><br><span class="line">    user_id = Column(String)</span><br><span class="line">    group_id = Column(String)</span><br><span class="line">    photo_name = Column(String)</span><br><span class="line">    photo_url = Column(String)</span><br><span class="line">    photo_thumbnail_url = Column(String)</span><br><span class="line">    created_time = Column(DateTime, default=datetime.utcnow)</span><br><span class="line">    photo_properties = Column(JSON)</span><br><span class="line">    photo_image_hash = Column(String)<span class="comment">#, unique=True, nullable=False)</span></span><br><span class="line"></span><br><span class="line">Base.metadata.create_all(bind=engine)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 獲取數據庫會話</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_db</span>():</span><br><span class="line">    db = SessionLocal()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">yield</span> db</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        db.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_photo_to_db</span>(<span class="params">db, user_id,group_id, photo_name, photo_url, photo_properties,image_hash</span>):</span><br><span class="line">    new_photo = Photo(</span><br><span class="line">        user_id=user_id,</span><br><span class="line">        group_id=group_id,</span><br><span class="line">        photo_name=photo_name,</span><br><span class="line">        photo_url=photo_url,</span><br><span class="line">        photo_properties=photo_properties,</span><br><span class="line">        photo_image_hash=image_hash</span><br><span class="line">    )</span><br><span class="line">    db.add(new_photo)</span><br><span class="line">    db.commit()</span><br><span class="line">    db.refresh(new_photo)</span><br><span class="line">    <span class="keyword">return</span> new_photo</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_photo_by_id</span>(<span class="params">db: Session, photo_id: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="keyword">return</span> db.query(Photo).<span class="built_in">filter</span>(Photo.<span class="built_in">id</span> == photo_id).first()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fetch_all_photos</span>(<span class="params">db: Session</span>):</span><br><span class="line">    <span class="keyword">return</span> db.query(Photo).<span class="built_in">all</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete_photo_from_db</span>(<span class="params">db: Session, photo_id: <span class="built_in">int</span></span>):</span><br><span class="line">    photo = db.query(Photo).<span class="built_in">filter</span>(Photo.<span class="built_in">id</span> == photo_id).first()</span><br><span class="line">    <span class="keyword">if</span> photo:</span><br><span class="line">        db.delete(photo)</span><br><span class="line">        db.commit()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Photo with ID <span class="subst">&#123;photo_id&#125;</span> deleted successfully from database.&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;No photo found with ID <span class="subst">&#123;photo_id&#125;</span>.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_image_hash_exist</span>(<span class="params">db, image_hash</span>):</span><br><span class="line">    <span class="keyword">return</span> db.query(Photo).<span class="built_in">filter</span>(Photo.photo_image_hash == image_hash).first() <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="結語">結語</h2>
<p>如果您本身執行工程專案時有大量的照片需要進行自動備份，同時又有一台電腦可以不關機當作server用途，可以將他建立好python執行環境並參考上述的內容搭配使用，如有不懂的內容也歡迎聯繫作者來<strong>協助架設LINE群組機器人</strong>，自動備份工程群組內部照片省時又省力。</p>
]]></content>
      <categories>
        <category>專案成果</category>
      </categories>
      <tags>
        <tag>flask</tag>
        <tag>LINEBOT</tag>
      </tags>
  </entry>
  <entry>
    <title>施工日誌VBA-V3.6.0系列更新說明</title>
    <url>/posts/3015163677/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>本篇文章延伸於 <a
href="https://www.hanksvba.com/posts/1000661249/#more">施工日誌VBA-V3.5.0</a>
版本操作教學，非常感謝各路好友提供寶貴意見，本篇下方會詳列各版本修改進程供各位做參考。</p>
<ul>
<li>Feature:新增功能</li>
<li>Fix:錯誤修復</li>
</ul>
<span id="more"></span>
<h2 id="主要功能說明">主要功能說明</h2>
<h3 id="契約設定後處理工具匯入">[契約設定]後處理工具匯入</h3>
<figure>
<img src="1.png" alt="Fig1. 匯入畫面" />
<figcaption aria-hidden="true">Fig1. 匯入畫面</figcaption>
</figure>
<p>考量有些專案不一定會用PCCES來處理預算書內容，可能只是一個<strong>很像</strong>的EXCEL檔，故提供"契約設定模板"範本供使用者手動填寫再進行匯入，需注意填寫過程<strong>項次不能重複</strong>。</p>
<h3 id="日報填寫契約項目搜尋">[日報填寫]契約項目搜尋</h3>
<figure>
<img src="2.png" alt="Fig2. 填寫畫面" />
<figcaption aria-hidden="true">Fig2. 填寫畫面</figcaption>
</figure>
<p>契約項目的下拉式選單組成為"契約項次&gt;&gt;契約項目"，故可以進行契約項目關鍵字的搜尋或者契約項次的關鍵字搜尋。</p>
<blockquote>
<p>舉例: <img src="3.png" alt="Fig3. 範例" /></p>
</blockquote>
<blockquote>
<ul>
<li>如要進行契約項次的搜尋，輸入關鍵字「<strong>甲.壹</strong>」，則會列出所有甲.壹開頭的契約項目</li>
<li>如要進行契約項目的搜尋，輸入關鍵字「<strong>安全圍籬</strong>」，則會列出所有名稱具有<strong>安全圍籬</strong>的契約項目。</li>
</ul>
</blockquote>
<h3 id="不計工期功能">不計工期功能</h3>
<figure>
<img src="4.png" alt="Fig4. 進度設定畫面" />
<figcaption aria-hidden="true">Fig4. 進度設定畫面</figcaption>
</figure>
<p>建立不計工期工作表，如為不計工期的日期時，進度與前日有計工期時相同</p>
<figure>
<img src="5.png" alt="Fig5. 範例" />
<figcaption aria-hidden="true">Fig5. 範例</figcaption>
</figure>
<h3 id="自動換行">自動換行</h3>
<p>輸出施工日誌時，如有契約項目比較長的情況，以往採用欄位內文字大小自動縮放進行處理，然而如文字長度過長時，會讓契約項目變得無法肉眼識別，因此改用自動換行搭配列高自動調整處理。</p>
<hr />
<h2 id="主要錯誤說明">主要錯誤說明</h2>
<h3 id="欄位寬度摺疊顯示">欄位寬度摺疊顯示</h3>
<figure>
<img src="6.png" alt="Fig6. 欄位摺疊範例" />
<figcaption aria-hidden="true">Fig6. 欄位摺疊範例</figcaption>
</figure>
<p>欄位寬度不足以顯示日期時，EXCEL內建的搜尋功能會失效，故在進行搜尋前先針對預計要搜尋的工作表進行欄寬自動適應。</p>
<h3 id="工料設定自動編號">工料設定自動編號</h3>
<p>原工料設定過程在編號時會透過計算同性質的個數做加總後加一換算，如果有先進行刪除再自動編號的話會有編號重疊的問題，導致報表輸出時的搜尋功能異常，故改為自動編號之前先針對同性質的內容排序後取最大值加一換算。</p>
<hr />
<h2 id="版本細節">版本細節</h2>
<table>
<colgroup>
<col style="width: 11%" />
<col style="width: 8%" />
<col style="width: 79%" />
</colgroup>
<thead>
<tr class="header">
<th>版本號</th>
<th>型態</th>
<th>內容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>V3.6.6</td>
<td>Feature</td>
<td>數量計算表頁尾加入第O頁/共O頁</td>
</tr>
<tr class="even">
<td></td>
<td>Fix</td>
<td>修正工料設定自動編號重複問題</td>
</tr>
<tr class="odd">
<td>V3.6.5</td>
<td>Fix</td>
<td>調整各表欄位自動縮放，避免出現###影響搜尋</td>
</tr>
<tr class="even">
<td>V3.6.4</td>
<td>Fix</td>
<td>列印報表時預設為第一個報表項目</td>
</tr>
<tr class="odd">
<td>V3.6.3</td>
<td>Fix</td>
<td>第六項列高自動調整</td>
</tr>
<tr class="even">
<td>V3.6.2</td>
<td>Fix</td>
<td>修復clsInfo查找欄位問題、列印日報前會先進行進度重整</td>
</tr>
<tr class="odd">
<td>V3.6.1</td>
<td>Fix</td>
<td>修復呈現竣工日期欄位找尋問題(clsReport)</td>
</tr>
<tr class="even">
<td>V3.6.0</td>
<td>Feature</td>
<td>第二大項跟第三大項數量沒有就增列一行空白列</td>
</tr>
<tr class="odd">
<td></td>
<td>Feature</td>
<td>施工日誌成果依照日期呈現(原本設計為按照編號)</td>
</tr>
<tr class="even">
<td></td>
<td>Feature</td>
<td>機具、人力、材料按照類別排序</td>
</tr>
<tr class="odd">
<td>V3.5.12</td>
<td>Fix</td>
<td>數量計算表原呈現0.00修正為-</td>
</tr>
<tr class="even">
<td></td>
<td>Fix</td>
<td>前期完成數量公式修正</td>
</tr>
<tr class="odd">
<td></td>
<td>Fix</td>
<td>數量計算表表報編號欄位補上錯誤控制</td>
</tr>
<tr class="even">
<td>V3.5.11</td>
<td>Fix</td>
<td>工料設定下拉式選單更新，修改生效日控制，可以進行刪除</td>
</tr>
<tr class="odd">
<td></td>
<td>Feature</td>
<td>frmData剩餘數量提醒紅字增加警告視窗!</td>
</tr>
<tr class="even">
<td></td>
<td>Feature</td>
<td>表單顯示修改成"不"強制響應</td>
</tr>
<tr class="odd">
<td></td>
<td>Fix</td>
<td>P008 列高自動調整</td>
</tr>
<tr class="even">
<td>V3.5.10</td>
<td>Feature</td>
<td>加入搜尋功能，可以搜尋項目或搜尋項次，空白則全顯</td>
</tr>
<tr class="odd">
<td></td>
<td>Feature</td>
<td>加入新報表，建築物施工日誌(不含項次)，修復本日不施工欄位</td>
</tr>
<tr class="even">
<td></td>
<td>Fix</td>
<td>新增數量計算表，工作表名為建築物施工日誌(月底)</td>
</tr>
<tr class="odd">
<td></td>
<td>Fix</td>
<td>施工項目呈現的數量到小數點後第2位，Numberformatlocal</td>
</tr>
<tr class="even">
<td></td>
<td>Fix</td>
<td>表報編號顯示修改為&lt;<契約編號>&gt;，使用字串格式</td>
</tr>
<tr class="odd">
<td>V3.5.9</td>
<td>Feature</td>
<td>加入新報表，建築物施工日誌(月底)，為數量計算表</td>
</tr>
<tr class="even">
<td></td>
<td>Feature</td>
<td>輸出報表時字體大小設置10pt為自動換行，做AutoFit顯示</td>
</tr>
<tr class="odd">
<td></td>
<td>Fix</td>
<td>調整契約項目主項大類判定欄位為"單位"=空白</td>
</tr>
<tr class="even">
<td></td>
<td>Feature</td>
<td>加入契約項目標記"H"為折疊項目</td>
</tr>
<tr class="odd">
<td>V3.5.8</td>
<td>Fix</td>
<td>修復eng_pgs&lt;&gt;1的錯誤，如果為double需要先做round(x,6)</td>
</tr>
<tr class="even">
<td></td>
<td>Feature</td>
<td>加入不計工期功能，功能位於frmPgs的右下角</td>
</tr>
<tr class="odd">
<td>V3.5.7</td>
<td>Fix</td>
<td>加入"本日無施工"項目，預設進度為前日累計進度</td>
</tr>
<tr class="even">
<td>V3.5.6</td>
<td>Fix</td>
<td>列印報表時隱藏空白列位材料名稱偵測修復(hideEmptyRow)</td>
</tr>
<tr class="odd">
<td>V3.5.5</td>
<td>Feature</td>
<td>基本操作權限控管加入clsFetchURL</td>
</tr>
<tr class="even">
<td>V3.5.4</td>
<td>Fix</td>
<td>契約項目中主項目判定修復(IsMainItems(cont))</td>
</tr>
<tr class="odd">
<td></td>
<td>Feature</td>
<td>契約項目可以引入後處理工具產生之excel</td>
</tr>
<tr class="even">
<td></td>
<td>Fix</td>
<td>不計入進度項目仍提供給使用者進行填寫</td>
</tr>
<tr class="odd">
<td>V3.5.3</td>
<td>TODO</td>
<td>新增監造報表(管理處)版本-尚未完成</td>
</tr>
<tr class="even">
<td></td>
<td>Fix</td>
<td>變更設計後其契約數量為0的監造日報顯示文字修正</td>
</tr>
<tr class="odd">
<td></td>
<td>Feature</td>
<td>新增getRangeByKey，優化adjustRow、hideEmptyRow</td>
</tr>
<tr class="even">
<td>V3.5.2</td>
<td>Fix</td>
<td>資料要進入各表時，先做好欄位格式處理(日期)</td>
</tr>
<tr class="odd">
<td>V3.5.1</td>
<td>Fix</td>
<td>當編輯日報引入資料至frmData時，再進行新增無法清空(clearFrmDataInfo)</td>
</tr>
<tr class="even">
<td></td>
<td>Fix</td>
<td>日報表單原本預設非是即無，新增空白項目並設定為預設</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>施工日誌</tag>
        <tag>ExcelVBA</tag>
      </tags>
  </entry>
  <entry>
    <title>施工日誌VBA-列印篇</title>
    <url>/posts/997099184/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>本篇文章延伸於 <a
href="https://www.hanksvba.com/posts/1000661249/#more">施工日誌VBA-V3.5.0</a>
版本操作教學</p>
<p>版面格式有可能因為業主的要求或委員的要求而有些許不同，難以千篇一律的內容應付所有的機關，當初在設計軟體時就有考量到這個部分，故讓報表生成的過程盡可能的彈性，能夠在這個說A改B的環境下好好適應各種狀況，本篇文章主要介紹施工日誌VBA可供輸出的報表格式及微調版型的方法，盡可能以公版作為預設，真的需要再來調整。</p>
<p>以下相關設定按鈕皆需透過工作表"版本說明"點選按鈕【功能主要畫面】後進行。</p>
<span id="more"></span>
<h2 id="報表格式">報表格式</h2>
<figure>
<img src="1.png" alt="Fig1. 列印日報介面" />
<figcaption aria-hidden="true">Fig1. 列印日報介面</figcaption>
</figure>
<h3 id="契約項目分類">契約項目分類</h3>
<ul>
<li>累積數量不為0(曾經施作的工項)</li>
<li>本日數量不為0(今天施作的工項)</li>
<li>全部契約項目</li>
</ul>
<h3 id="版型分類">版型分類</h3>
<ul>
<li>公共工程施工日誌(第一聯)</li>
<li>公共工程施工日誌(第二聯)</li>
<li>建築物施工日誌(第一聯)</li>
<li>建築物施工日誌(第二聯)</li>
<li>監造報表(第一聯)</li>
</ul>
<blockquote>
<p>如果<strong>契約項目分類</strong>採用<strong>本日數量不為0</strong>除每日固定要輸出的第一聯外，會在每月或每周再另外製作第二聯，頻率視機關規定而定。</p>
</blockquote>
<h2 id="微調版型">微調版型</h2>
<p>每個檔案都會有固定的版型，其範本位於工作表名稱:</p>
<ul>
<li>公共工程施工日誌</li>
<li>建築物施工日誌</li>
<li>公共工程施工日誌(第二聯)</li>
<li>建築物施工日誌(第二聯)</li>
<li>監造日報</li>
</ul>
<figure>
<img src="2.png" alt="Fig2. 版型工作表" />
<figcaption aria-hidden="true">Fig2. 版型工作表</figcaption>
</figure>
<h3 id="主要關鍵字">主要關鍵字</h3>
<p>範本中由&lt;&lt;&gt;&gt;包住的儲存格文字<strong>不能改變</strong>，舉例:&lt;<工程名稱>&gt;</p>
<h3 id="文字大小微調">文字大小微調</h3>
<p>如果列印時發現<strong>文字太大或大小</strong>，都可以<strong>直接修改</strong>，不要影響到原本的文字內容即可。</p>
<h3 id="額外加註文字">額外加註文字</h3>
<p>可以在不影響原本的儲存格文字內容下，額外加入註記事項到版面中，惟須注意不能落在原本要生成清單的路線上。</p>
<p>舉例:公共工程施工日誌的第二項、工地材料管理概況(列號108~128)雖然都是空白的，但它屬於材料的清單明細路線，不能再插入其他關鍵字使用。</p>
<figure>
<img src="3.png" alt="Fig3. 不能額外加註之清單明細" />
<figcaption aria-hidden="true">Fig3. 不能額外加註之清單明細</figcaption>
</figure>
<h2 id="列印成果">列印成果</h2>
<h3 id="測試版">測試版</h3>
<ul>
<li>預設列印成pdf(有加入浮水印，僅供<strong>測試功能使用</strong>)</li>
</ul>
<figure>
<img src="4.png" alt="Fig4. 測試版成品" />
<figcaption aria-hidden="true">Fig4. 測試版成品</figcaption>
</figure>
<hr />
<h3 id="正式版">正式版</h3>
<ul>
<li>預設列印成xls(可以直接批次輸出，列印時可以選擇<strong>列印整本活頁簿</strong>)</li>
</ul>
<figure>
<img src="5.png" alt="Fig5. 正式版成品" />
<figcaption aria-hidden="true">Fig5. 正式版成品</figcaption>
</figure>
<h2 id="相關連結">相關連結</h2>
<p><a href="https://www.hanksvba.com/posts/1990910755"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-設定篇</a></p>
<p><a href="https://www.hanksvba.com/posts/426352985"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-記錄篇</a></p>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Excel VBA</tag>
        <tag>施工日誌</tag>
      </tags>
  </entry>
  <entry>
    <title>施工日誌VBA-記錄篇</title>
    <url>/posts/426352985/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>本篇文章延伸於 <a
href="https://www.hanksvba.com/posts/1000661249/#more">施工日誌VBA-V3.5.0</a>
版本操作教學</p>
<p>從前篇第1步驟開始進行的朋友，會發現有一個生效日是空白的，這就是讓使用者要開始填寫日報前的最後確認，確認無誤後便會將生效日加註(第一次加註會與開工日相同)，此時<strong>才能開始填寫日報</strong>，填寫日報後需要點選"儲存日報"資料才會生效，取消填寫時只能透過按鈕"取消填寫"，不能點選右上角的X。</p>
<p>填寫日報的過程，可以在版本說明中的"功能主要畫面"裡面對日報進行新增、編輯、刪除，有關日報填寫內容分為以下幾種內容:</p>
<ol type="1">
<li>基本資訊</li>
<li>契約項目</li>
<li>材料</li>
<li>人力</li>
<li>機具</li>
<li>其他備註</li>
<li>監造部分</li>
</ol>
<span id="more"></span>
<h2 id="基本資訊">基本資訊</h2>
<h3 id="日期">日期</h3>
<p>日期在進行新增日報的時候便會要求輸入，如果有重複則會警示已經有填寫過了，本篇旨在介紹工程專案類型，而非開口契約類型，原則每日會有一篇日報作為紀錄使用。</p>
<p>我有預留一日多表的擴充程式碼，如果有需要請聯絡我進行修改。</p>
<h3 id="天氣">天氣</h3>
<p>天氣部分分為上午跟下午，內容有晴、陰、雨，未來預定會提供一個參考測站，透過中央氣象局API去取得相對時段的自動測報內容。</p>
<h2 id="契約項目">契約項目</h2>
<h3 id="項目">項目</h3>
<figure>
<img src="upload_002d5b23b669e4f8fc082cd7b630bd9a.png"
alt="Fig1. 項目" />
<figcaption aria-hidden="true">Fig1. 項目</figcaption>
</figure>
<p>契約項目填寫來源為契約設定的項目，有關契約項目有兩項特別要注意的事項:</p>
<ol type="1">
<li>設定為不列入進度項目，則不會被計入進度換算時的分母。</li>
<li>設定為發包工作費外的項目，則不會顯示於下拉式選單中。</li>
</ol>
<p>選取契約項目後，會同步呈現該項目之契約數量、累計數量，填寫施作數量時，會同時於右側顯示剩餘數量，如出現紅色表示剩餘數量為負值、綠色表示仍有剩餘數量可以使用。</p>
<p>輸入完畢點選"新增"，項目將會列於下方暫存區域，可以等所有項目(包含後續內容皆完成後)在一併點選"儲存日報"，此時資料才會正式匯入日報中。</p>
<h3 id="進度">進度</h3>
<p>進入畫面時，會預先取得累積至前日之金額及進度，當填寫項目後，系統會自動換算本日金額與本日進度呈現於左下角，兩樣數值加總後取得本日累積實際進度，同時會根據實際進度與預定進度的差異呈現紅色或綠色。</p>
<h2 id="材料人力機具">材料、人力、機具</h2>
<p>項目來源為工料設定，這裡比較單純沒有其他內容，僅作為紀錄使用，於工料設定中如有填寫其相關單價，未來可以加入功能輸出統計長表，讓管理者清楚目前所支出的內容，包含人力費用、材料費用、機具費用，方便與估驗請款後的現金流做比對評估財務支出收入狀況。</p>
<figure>
<img src="upload_abe97fd1ed633682823960c24a3542af.png"
alt="Fig2. 工料設定畫面" />
<figcaption aria-hidden="true">Fig2. 工料設定畫面</figcaption>
</figure>
<h2 id="其他備註">其他備註</h2>
<figure>
<img src="upload_f1f414d001074694b0a6fd123c72f45f.png"
alt="Fig3. 其他備註" />
<figcaption aria-hidden="true">Fig3. 其他備註</figcaption>
</figure>
<p>有關其他比較長的文字紀錄部分皆會在此進行，之前委員有說過格子不能塗黑，要打勾，這裡有提供選項給使用者選取，如果讓電腦打勾也不行，請選取兩邊都是空白框框。</p>
<p>另關於施工取樣試驗紀錄與重要事項紀錄未來預計會與收發文系統、品管系統作為綁定使用，請再稍等下!</p>
<h2 id="監造部分">監造部分</h2>
<p>如果只有單純要做施工日誌的使用者，可以跳過這一個步驟。</p>
<figure>
<img src="4.png" alt="Fig4. 監造部分" />
<figcaption aria-hidden="true">Fig4. 監造部分</figcaption>
</figure>
<p>有關其他比較長的文字紀錄部分皆會在此進行，打勾情況一樣有做考量，同樣提供三種情況供使用者選取。</p>
<p>目前工程進行情況，可以<strong>自行填寫</strong>或者是透過前面填寫之契約項目做<strong>百分比換算</strong>呈現(如下圖)。</p>
<figure>
<img src="5.png" alt="Fig5. 百分比範例" />
<figcaption aria-hidden="true">Fig5. 百分比範例</figcaption>
</figure>
<p>另關於檢驗停留點及抽查系統作為綁定使用，查核材料規格及品質與品管系統作為綁定使用，請再稍等下!</p>
<h2 id="相關連結">相關連結</h2>
<p><a href="https://www.hanksvba.com/posts/1990910755"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-設定篇</a></p>
<p><a href="https://www.hanksvba.com/posts/997099184"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-列印篇</a></p>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Excel VBA</tag>
        <tag>施工日誌</tag>
      </tags>
  </entry>
  <entry>
    <title>施工日誌VBA-版本說明</title>
    <url>/posts/1512537146/</url>
    <content><![CDATA[<h2 id="版本內容比較">版本內容比較</h2>
<table>
<thead>
<tr class="header">
<th>項目</th>
<th>訂閱版</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>基本功能</strong></td>
<td>O</td>
</tr>
<tr class="even">
<td><strong>錯誤修復</strong></td>
<td>O</td>
</tr>
<tr class="odd">
<td><strong>技術支援</strong></td>
<td>O</td>
</tr>
<tr class="even">
<td><strong>原始碼</strong></td>
<td></td>
</tr>
<tr class="odd">
<td><strong>使用期限</strong></td>
<td>工程期間</td>
</tr>
</tbody>
</table>
<h2 id="備註事項">備註事項</h2>
<div class="note info"><ol type="1">
<li><p>施工日誌舊版(社群版)正在使用中的朋友<strong>仍可使用到2024年底</strong>，如需轉換至新版請聯繫作者協助。</p></li>
<li><p>如欲購置施工日誌新版(V3.5.0)系列後之訂閱包套服務(包含變更設計、展延工期、契約項目導入)，請提供以下資料並聯繫作者</p></li>
</ol>
<ul>
<li>工程名稱</li>
<li>契約金額</li>
<li>工程日數</li>
</ul>
<ol start="3" type="1">
<li>聯繫方式</li>
</ol>
<ul>
<li>LINE(ID:<span class="citation"
data-cites="903qzhwa">@903qzhwa</span>)</li>
<li>電子郵件(apple84026113@gmail.com)</li>
</ul>
</div>
<span id="more"></span>
<h3 id="基本功能">基本功能</h3>
<ul>
<li>公共工程施工日誌(第一聯、第二聯)</li>
<li>建築物施工日誌(第一聯、第二聯)</li>
<li>監造日報</li>
</ul>
<h3 id="錯誤修復">錯誤修復</h3>
<ul>
<li>修復重大系統錯誤</li>
</ul>
<h3 id="技術支援">技術支援</h3>
<ul>
<li>公版報表微調</li>
<li>客製功能擴充(按工時另計)</li>
<li>變更設計異動</li>
<li>展延工期調整</li>
</ul>
<h2 id="法規來源">法規來源</h2>
<p><a
href="https://www.nlma.gov.tw/%E6%9C%80%E6%96%B0%E8%A8%8A%E6%81%AF/%E5%88%97%E5%8D%B0/17819.html">建築物施工日誌</a></p>
<p><a
href="https://lawweb.pcc.gov.tw/LawContent.aspx?id=FL003734">公共工程施工日誌</a></p>
<h2 id="相關連結">相關連結</h2>
<p><a href="https://www.hanksvba.com/posts/1000661249/#more"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-V3.5.0</a></p>
<p><a href="https://www.hanksvba.com/posts/1990910755"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-設定篇</a></p>
<p><a href="https://www.hanksvba.com/posts/426352985"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-記錄篇</a></p>
<p><a href="https://www.hanksvba.com/posts/997099184"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-列印篇</a></p>
]]></content>
      <categories>
        <category>專案成果</category>
      </categories>
      <tags>
        <tag>Excel VBA</tag>
        <tag>施工日誌</tag>
      </tags>
  </entry>
  <entry>
    <title>施工日誌VBA-設定篇</title>
    <url>/posts/1990910755/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>本篇文章延伸於 <a
href="https://www.hanksvba.com/posts/1000661249/#more">施工日誌VBA-V3.5.0</a>
版本操作教學</p>
<p>取得主程式時，會預設存在範例資料，可先由範例資料大致了解未來使用過程中資料的模樣會如何，更重要的是可以先試行輸出報表，確認是否符合貴司需求。</p>
<p>如欲開始進行使用，建議依照下列順序進行，除基本設定會另外做重置行為需優先設定外，其餘設定不一定要按照順序。</p>
<p>以下相關設定按鈕皆需透過工作表"版本說明"點選按鈕【功能主要畫面】後進行。</p>
<span id="more"></span>
<h2 id="基本設定">1.基本設定</h2>
<blockquote>
<p>設定基本資料</p>
</blockquote>
<h3 id="步驟">步驟</h3>
<ol type="1">
<li>點選按鈕【1.基本設定】</li>
<li>請確認是否清除既有資料並建立新的工程專案?(是/否)</li>
<li>(是)自動執行備份，備份路徑為同目錄下的【backup】資料夾</li>
<li>備份完成後會將資料清空
<ul>
<li>基本設定、其他設定</li>
<li>數量表、材料表、機具表、人力表、其他表</li>
</ul></li>
<li>請輸入工程名稱</li>
<li>請輸入承攬廠商</li>
<li>請輸入施工地點</li>
<li>請輸入契約編號</li>
<li>請輸入牌照號碼</li>
</ol>
<h3 id="成果">成果</h3>
<p>資料會儲存於工作表"基本設定"，有關個別欄位介紹請參考下表</p>
<table>
<colgroup>
<col style="width: 33%" />
<col style="width: 33%" />
<col style="width: 33%" />
</colgroup>
<thead>
<tr class="header">
<th>欄位名稱</th>
<th>內容</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>生效日</td>
<td>(空白)</td>
<td>新增日報前確認設定後自動註記，與開工日期同</td>
</tr>
<tr class="even">
<td>工程名稱</td>
<td>OOOO改善工程</td>
<td></td>
</tr>
<tr class="odd">
<td>承攬廠商</td>
<td>OO營造有限公司</td>
<td>同承造人</td>
</tr>
<tr class="even">
<td>施工地點</td>
<td>OO縣OO市</td>
<td></td>
</tr>
<tr class="odd">
<td>契約編號</td>
<td>A123456</td>
<td></td>
</tr>
<tr class="even">
<td>開工日期</td>
<td>(空白)</td>
<td>進度設定後自動註記，為首日日期</td>
</tr>
<tr class="odd">
<td>竣工日期</td>
<td>(空白)</td>
<td>進度設定後自動註記，為末日日期</td>
</tr>
<tr class="even">
<td>牌照號碼</td>
<td>府建管字第OOOOO號</td>
<td>建/雜/拆照號碼使用</td>
</tr>
<tr class="odd">
<td>契約金額</td>
<td>(空白)</td>
<td>契約設定後自動註記</td>
</tr>
<tr class="even">
<td>進度金額</td>
<td>(空白)</td>
<td>契約設定後自動註記，為進度計算時之分母</td>
</tr>
</tbody>
</table>
<h2 id="契約設定">2.契約設定</h2>
<blockquote>
<p>設定契約項目，這一步會比較重要且繁瑣，有需要可來信討論或代工</p>
</blockquote>
<h3 id="設定原則">設定原則</h3>
<ul>
<li>項次不能重複</li>
<li>複價總和為契約金額</li>
<li>分類為<strong>P</strong>不納入進度計算分母</li>
<li>分類為<strong>N</strong>為發包工作費外項目</li>
</ul>
<h3 id="步驟-1">步驟</h3>
<h4 id="pcces的xls">PCCES的XLS</h4>
<ol type="1">
<li>點選按鈕【2.契約設定】</li>
<li>點選按鈕【引入PCCES】</li>
<li>選擇PCCES產出之XLS檔案</li>
<li>如有舊資料存在，則跳提醒"你有舊資料存在，確定要刪除?"</li>
<li>(是)清空資料及分類，並將XLS內容導入</li>
<li>挑選發包工作費外的項目</li>
<li>挑選不計入進度計算的項目</li>
<li>關閉後會自動將"契約金額"、"進度金額"代入到"基本設定"</li>
</ol>
<p><strong>備註</strong>
選擇PCCES產出之XLS之前，可以先將決標單價修改到XLS的預算單價，未來才不用逐個修正。</p>
<h4 id="pcces的xml">PCCES的XML</h4>
<p>基本上能取得XML也就能將它匯入到PCCES後輸出XLS了，除非真的沒有辦法，才會採行下列後處理工具進行。</p>
<p>另詳 <a
href="https://hankvba.blogspot.com/2024/02/excel-vba-pcces.html">Excel
VBA @ PCCES契約項目後處理</a></p>
<h4 id="其他xls">其他XLS</h4>
<p>可以複製貼上到工作表"契約設定"或其他任何方式</p>
<h3 id="成果-1">成果</h3>
<table>
<thead>
<tr class="header">
<th>欄位名稱</th>
<th>內容</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>項次</td>
<td>壹.一.1</td>
<td>項次不能重複</td>
</tr>
<tr class="even">
<td>項目</td>
<td>施工告示牌</td>
<td></td>
</tr>
<tr class="odd">
<td>單位</td>
<td>片</td>
<td></td>
</tr>
<tr class="even">
<td>數量</td>
<td>2</td>
<td></td>
</tr>
<tr class="odd">
<td>單價</td>
<td>2500</td>
<td></td>
</tr>
<tr class="even">
<td>複價</td>
<td>5000</td>
<td></td>
</tr>
<tr class="odd">
<td>分類</td>
<td>(空白)</td>
<td>P不納入進度、N為發包工作費外</td>
</tr>
</tbody>
</table>
<ul>
<li>主項大類如沒有細項，建議將單價、複價皆歸0，避免影響契約金額總和。</li>
</ul>
<h2 id="工料設定">3.工料設定</h2>
<blockquote>
<p>設定契約項目</p>
</blockquote>
<h3 id="步驟-2">步驟</h3>
<h4 id="新增">新增</h4>
<ol type="1">
<li>點選按鈕【3.工料設定】</li>
<li>選擇屬性分類(材料)</li>
<li>輸入項目、單位、數量、單價</li>
<li>點選按鈕"新增"</li>
</ol>
<h4 id="刪除">刪除</h4>
<ol type="1">
<li>點選按鈕【3.工料設定】</li>
<li>選擇屬性分類(材料)</li>
<li>點選要刪除的項目反白後</li>
<li>點選按鈕"刪除"</li>
</ol>
<h4 id="編輯">編輯</h4>
<ol type="1">
<li>點選按鈕【3.工料設定】</li>
<li>選擇屬性分類(材料)</li>
<li>挑選要編輯的項目後快點兩下</li>
<li>輸入正確數量</li>
<li>輸入正確單價</li>
</ol>
<h3 id="成果-2">成果</h3>
<table>
<thead>
<tr class="header">
<th>欄位名稱</th>
<th>內容</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>項次</td>
<td>E0001</td>
<td></td>
</tr>
<tr class="even">
<td>項目</td>
<td>挖土機</td>
<td>項目名稱不能重複</td>
</tr>
<tr class="odd">
<td>單位</td>
<td>天</td>
<td></td>
</tr>
<tr class="even">
<td>數量</td>
<td>200</td>
<td></td>
</tr>
<tr class="odd">
<td>單價</td>
<td>1000</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>E開頭為機具</li>
<li>L開頭為人力</li>
<li>M開頭為材料</li>
</ul>
<h2 id="進度設定">4.進度設定</h2>
<blockquote>
<p>設定進度項目，包含開工日期、竣工日期、預定進度</p>
</blockquote>
<p>正確設定進度流程是採用拆項目、金額的方式安排起訖日進行，這樣會比較符合實際所需，如要採用較簡便的方式，可以將施工計畫書中的預定進度表取每半月或每月之預定累積進度做內插換算。</p>
<h3 id="步驟-3">步驟</h3>
<h4 id="自行輸入">自行輸入</h4>
<ol type="1">
<li>點選按鈕【4.進度設定】</li>
<li>選取要使用哪個方法引入(1.自行輸入,2.引入甘特圖工具)</li>
<li>(選擇1)</li>
<li>輸入日期、該日預定累積進度後加入</li>
<li>點選按鈕【進度計算】</li>
</ol>
<h4 id="引入甘特圖工具">引入甘特圖工具</h4>
<ul>
<li>詳細操作步驟blog <a
href="https://www.hanksvba.com/posts/43562660/#more">Streamlit工程進度甘特圖</a></li>
<li>工具網頁 <a
href="https://progress.streamlit.app/">工程進度甘特圖工具</a></li>
</ul>
<ol type="1">
<li>根據上述內容製作完成後留存XLS備用</li>
<li>點選按鈕【4.進度設定】</li>
<li>選取要使用哪個方法引入(1.自行輸入,2.引入甘特圖工具)</li>
<li>(選擇2)</li>
<li>選取步驟1之XLS</li>
</ol>
<h3 id="成果-3">成果</h3>
<table>
<thead>
<tr class="header">
<th>欄位名稱</th>
<th>內容</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>日期</td>
<td>2024/9/25</td>
<td></td>
</tr>
<tr class="even">
<td>預定進度</td>
<td>0.00%</td>
<td></td>
</tr>
<tr class="odd">
<td>實際進度</td>
<td>(空白)</td>
<td>填寫日報儲存後自動註記</td>
</tr>
<tr class="even">
<td>上午天氣</td>
<td>(空白)</td>
<td>填寫日報儲存後自動註記</td>
</tr>
<tr class="odd">
<td>下午天氣</td>
<td>(空白)</td>
<td>填寫日報儲存後自動註記</td>
</tr>
</tbody>
</table>
<h2 id="相關連結">相關連結</h2>
<p><a href="https://www.hanksvba.com/posts/426352985"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-記錄篇</a></p>
<p><a href="https://www.hanksvba.com/posts/997099184"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-列印篇</a></p>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Excel VBA</tag>
        <tag>施工日誌</tag>
      </tags>
  </entry>
  <entry>
    <title>施工日誌VBA-V3.5.0正式發佈</title>
    <url>/posts/1000661249/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>自2018年發布監造日報表VBA及2022年發布公共工程施工日誌資料庫VBA後，陸續有收到很多朋友的回饋，經過一次又一次的迭代修改，該遇到的問題差不多也已經解決了，對於檔案中長期累積的程式碼或許因為在下的功力不夠深厚，遺留下大量的技術債，每次的程式碼編輯會耗費不少時間，而且也需要做大量的測試，為了不要債留子孫，特地花了一些時間通盤檢討進行一次完整的重構，也就是本篇文章的主角-<strong>施工日誌VBA-V3.5.0.</strong>。</p>
<figure>
<img src="/images/constructionLog.png" alt="Fig1.選單內容" />
<figcaption aria-hidden="true">Fig1.選單內容</figcaption>
</figure>
<span id="more"></span>
<h2 id="影片操作">影片操作</h2>
<iframe width="560" height="315" src="https://www.youtube.com/embed/P068pURRRFI?si=S_-2Iab7OGOnhVF_" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen>
</iframe>
<h2 id="首頁">首頁</h2>
<figure>
<img src="1.png" alt="Fig2.主要進入點" />
<figcaption aria-hidden="true">Fig2.主要進入點</figcaption>
</figure>
<h2 id="功能">功能</h2>
<p>主要架構可分為設定、紀錄表、格式及資料備份，概述如下</p>
<h3 id="設定相關">設定相關</h3>
<blockquote>
<p>基本設定</p>
</blockquote>
<p>綜理各機關範本所需之基本資料，所需大致為</p>
<ul>
<li>工程名稱</li>
<li>承攬廠商(承造人)</li>
<li>施工地點</li>
<li>契約編號</li>
<li>契約金額</li>
<li>開工日期</li>
<li>竣工日期</li>
<li>建/雜/拆照號碼</li>
</ul>
<blockquote>
<p>契約設定</p>
</blockquote>
<p><strong>契約項次</strong>不能重複，可引入PCCES或後處理工具</p>
<figure>
<img src="3.png" alt="Fig3.契約設定畫面" />
<figcaption aria-hidden="true">Fig3.契約設定畫面</figcaption>
</figure>
<blockquote>
<p>工料設定</p>
</blockquote>
<p><strong>人機料名稱</strong>不能重複</p>
<figure>
<img src="4.png" alt="Fig4.工料設定畫面" />
<figcaption aria-hidden="true">Fig4.工料設定畫面</figcaption>
</figure>
<blockquote>
<p>進度設定</p>
</blockquote>
<p>可以透過日期與預定累積進度換算或匯入<a
href="https://progress.streamlit.app/">甘特圖工具</a>之成果</p>
<figure>
<img src="5.png" alt="Fig5.進度設定畫面" />
<figcaption aria-hidden="true">Fig5.進度設定畫面</figcaption>
</figure>
<h3 id="紀錄表相關">紀錄表相關</h3>
<ul>
<li>新增日報</li>
<li>編輯日報</li>
<li>刪除日報</li>
<li>列印日報</li>
</ul>
<p>紀錄內容包含契約項目、天氣狀況、人機料、備註及監造部分</p>
<figure>
<img src="6.png" alt="Fig6.契約項目編輯畫面" />
<figcaption aria-hidden="true">Fig6.契約項目編輯畫面</figcaption>
</figure>
<figure>
<img src="7.png" alt="Fig7.施工日誌備註編輯畫面" />
<figcaption aria-hidden="true">Fig7.施工日誌備註編輯畫面</figcaption>
</figure>
<figure>
<img src="8.png" alt="Fig8.監造報表備註編輯畫面" />
<figcaption aria-hidden="true">Fig8.監造報表備註編輯畫面</figcaption>
</figure>
<h3 id="格式相關">格式相關</h3>
<figure>
<img src="9.png" alt="Fig9.列印日報畫面" />
<figcaption aria-hidden="true">Fig9.列印日報畫面</figcaption>
</figure>
<ul>
<li>公共工程施工日誌</li>
<li>公共工程施工日誌(第二聯)</li>
<li>建築物施工日誌</li>
<li>建築物施工日誌(第二聯)</li>
<li>監造報表</li>
</ul>
<figure>
<img src="10.png" alt="Fig10.公共工程施工日誌成果" />
<figcaption aria-hidden="true">Fig10.公共工程施工日誌成果</figcaption>
</figure>
<figure>
<img src="11.png" alt="Fig11.公共工程施工日誌(第二聯)成果" />
<figcaption
aria-hidden="true">Fig11.公共工程施工日誌(第二聯)成果</figcaption>
</figure>
<figure>
<img src="12.png" alt="Fig12. 公共工程施工日誌成果" />
<figcaption aria-hidden="true">Fig12. 公共工程施工日誌成果</figcaption>
</figure>
<figure>
<img src="13.png" alt="Fig13. 監造報表成果" />
<figcaption aria-hidden="true">Fig13. 監造報表成果</figcaption>
</figure>
<h3 id="備份還原">備份還原</h3>
<p>啟動時點</p>
<ol type="1">
<li>清空資料庫</li>
<li>版本更新</li>
</ol>
<p>將設定與紀錄表匯出成新的活頁簿，如版本更新時，可將該活頁簿還原進去。</p>
<h2 id="結語">結語</h2>
<p>開發目標盡量以通用為主，但難免有機關會有自己的格式，但這都是<strong>可以處理</strong>的，當初在開發時已經將擴充的欄位甚至是報表的生成皆已進行考量，有特殊需求的人可以透過左側資訊欄聯繫我(LINE或Email)，舊版本的施工日誌VBA預計只維護到今年年底，<strong>明年1/1起</strong>將不再提供維護，皆會採用新版進行，如有購置使用的朋友可協助轉換至新版。</p>
<blockquote>
<p>施工日誌VBA相關版本內容請參考<a
href="https://www.hanksvba.com/posts/1512537146/">版本說明</a></p>
</blockquote>
<p><span class="github-emoji" data-alias="star" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">⭐</span>
有需要請LINE(ID:<span class="citation"
data-cites="903qzhwa">@903qzhwa</span>)聯繫或電子郵件(apple84026113@gmail.com)聯繫</p>
<h2 id="相關連結">相關連結</h2>
<p><a href="https://www.hanksvba.com/posts/1990910755"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-設定篇</a></p>
<p><a href="https://www.hanksvba.com/posts/426352985"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-記錄篇</a></p>
<p><a href="https://www.hanksvba.com/posts/997099184"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-列印篇</a></p>
<p><a href="https://www.hanksvba.com/posts/3015163677"><span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
施工日誌VBA-V3.6.0系列更新說明</a></p>
]]></content>
      <categories>
        <category>專案成果</category>
      </categories>
      <tags>
        <tag>Excel VBA</tag>
        <tag>施工日誌</tag>
        <tag>監造報表</tag>
      </tags>
  </entry>
  <entry>
    <title>施工照片VBA-實作流程</title>
    <url>/posts/144473154/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>工程進行階段因為業主、監造不一定都會在現場，無論施工抽查、品質管理、隱蔽部分尺寸紀錄、督導會勘...等等內容，大多數文件都會需要照片作為佐證資料，尤其是假設工程、隱蔽部分更是需要，因此整個工程案進行過程可能會累積大量的照片，後續的請款報表照片貼附、照片檔案查找，會是讓內業人員相當花費時間的一環。</p>
<p>實務上大多會採用LINE群組進行照片上傳，照片說明會出現在畫面中的小白板，再由內業人員自行下載備存，放在本機硬碟中或者是放在公司的NAS裡面，未來需要利用時再去自己所分類的資料夾中比對、下載、貼附，因此對於處理照片的檔案管理、報表輸出我想需要有方法來完成大量、繁複、簡單的工作流程，節省時間來做其他業務內容。</p>
<p>因此，施工照片VBA誕生了，於2023年1月發布給大眾使用運行至今，該修復的內容大概已經完成，以下為目前所釋出的施工照片VBA部分內容，完整內容請參考<a
href="https://portaly.cc/hanksvba/product/pkCLtQZcV6u4H7jGRH6e">施工照片VBA完整原始碼</a>。</p>
<span id="more"></span>
<h2 id="demo">DEMO</h2>
<iframe width="560" height="315" src="https://www.youtube.com/embed/UYwLdFSH5cE?si=XU_UnH55pF831T2g" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>
</iframe>
<hr />
<h2 id="第一章節-資料夾">第一章節 資料夾</h2>
<h3 id="取得資料夾">1-1 取得資料夾</h3>
<blockquote>
<p>學習如何透過VBA內建的資料夾選擇視窗將照片存放路徑放置到工作表</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> SelectFolder()</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> objDialog <span class="keyword">As</span> FileDialog</span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> objDialog = Application.FileDialog(msoFileDialogFolderPicker)</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> objDialog</span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> .Show = <span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line">    </span><br><span class="line">        Sheets(<span class="string">&quot;Main&quot;</span>).Range(<span class="string">&quot;B2&quot;</span>) = objDialog.SelectedItems(<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h3 id="查看資料夾">1-2 查看資料夾</h3>
<blockquote>
<p>學習如何透過Shell的方法來開啟指定資料夾</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> showFolder()</span><br><span class="line"></span><br><span class="line">main_path = Sheets(<span class="string">&quot;Main&quot;</span>).Range(<span class="string">&quot;B2&quot;</span>)</span><br><span class="line"></span><br><span class="line">Shell <span class="string">&quot;explorer.exe &quot;</span> &amp; main_path, vbNormalFocus</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h2 id="第二章節-照片基本資料">第二章節 照片基本資料</h2>
<h3 id="照片檔案管理">2-1 照片檔案管理</h3>
<figure>
<img src="upload_15df3895983a9426f8514c36e8fb088f.png"
alt="資料庫介面" />
<figcaption aria-hidden="true">資料庫介面</figcaption>
</figure>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> getDataFromFolder()</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> clsInf <span class="keyword">As</span> <span class="built_in">New</span> clsInformation</span><br><span class="line"><span class="keyword">Dim</span> objFile <span class="keyword">As</span> <span class="built_in">New</span> clsmyFile</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> Sheets(<span class="string">&quot;Main&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;If MsgBox(&quot;是否要貼上縮圖?&quot;, vbYesNo) = vbYes Then</span></span><br><span class="line"><span class="keyword">If</span> clsInf.IsPasteIMG = <span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    objFile.IsPaste = <span class="literal">True</span></span><br><span class="line">    mywidth = <span class="built_in">CInt</span>(clsInf.getIMGwidth) <span class="comment">&#x27;  CInt(InputBox(&quot;請輸入縮圖寬度:&quot;))</span></span><br><span class="line">    objFile.photo_width = mywidth / <span class="number">4</span></span><br><span class="line">    objFile.photo_height = mywidth</span><br><span class="line">    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">objFile.main_path = .Range(<span class="string">&quot;B2&quot;</span>)</span><br><span class="line"></span><br><span class="line">objFile.delRng <span class="comment">&#x27;刪除既有欄位</span></span><br><span class="line">objFile.getAllFolder <span class="comment">&#x27;循環取得指定資料夾中所有照片路徑</span></span><br><span class="line">objFile.PastePictures  <span class="comment">&#x27;依序貼上到操作介面</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Call</span> extractNames <span class="comment">&#x27;由檔名萃取至介面欄位</span></span><br><span class="line"><span class="keyword">Call</span> ApplyFilterToAllUsedCells <span class="comment">&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>刪除既有欄位</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> delRng()</span><br><span class="line"></span><br><span class="line">tmp = split(main_path, <span class="string">&quot;\&quot;</span>)</span><br><span class="line">main_folder = tmp(UBound(tmp))</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> shtResult</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;.Range(&quot;A1:F1&quot;) = Array(&quot;ID&quot;, &quot;縮圖&quot;, &quot;全路徑&quot;, &quot;資料夾(&quot; &amp; main_folder &amp; &quot;)&quot;, &quot;檔名&quot;, &quot;更改檔名&quot;)</span></span><br><span class="line"></span><br><span class="line">.Range(<span class="string">&quot;D1&quot;</span>) = <span class="string">&quot;資料夾(&quot;</span> &amp; main_folder &amp; <span class="string">&quot;)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> rng_last = .Cells.SpecialCells(xlCellTypeLastCell)</span><br><span class="line"></span><br><span class="line">lr = .Cells(.Rows.Count, <span class="number">1</span>).<span class="keyword">End</span>(xlUp).Row</span><br><span class="line">lc = .Cells(<span class="number">1</span>, .Columns.Count).<span class="keyword">End</span>(xlToLeft).Column</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> lr &gt; <span class="number">1</span> <span class="keyword">Then</span> .Range(<span class="string">&quot;A2&quot;</span>).Resize(rng_last.Row, rng_last.Column).Clear</span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> Shape <span class="keyword">In</span> .Shapes</span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27;Debug.Print Shape.Address</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> Shape.TopLeftCell.Row &lt;&gt; <span class="number">1</span> <span class="keyword">Then</span> Shape.Delete</span><br><span class="line"></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>取得指定資料夾下所有照片路徑</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> getAllFolder()</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> objFolder <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> objFolder = objFso.GetFolder(main_path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Call</span> getAllFile(objFolder)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> getAllFile(<span class="keyword">ByVal</span> objFolder <span class="keyword">As</span> <span class="type">Object</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> objFolder.Files.Count &lt;&gt; <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> objFile <span class="keyword">In</span> objFolder.Files</span><br><span class="line">    </span><br><span class="line">    s = objFso.GetExtensionName(objFile)</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">If</span> IsPhoto(s) <span class="keyword">Then</span> coll_photo_path.Add objFile.path</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> objFolder.subFolders.Count &lt;&gt; <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> objSubFolder <span class="keyword">In</span> objFolder.subFolders</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">Call</span> getAllFile(objSubFolder)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>貼上照片到操作介面</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> PastePictures()</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> shtResult</span><br><span class="line">    </span><br><span class="line">    lr = .Cells(<span class="number">1</span>, <span class="number">1</span>).<span class="keyword">End</span>(xlDown).Row</span><br><span class="line">    lc = .Cells(<span class="number">1</span>, <span class="number">1</span>).<span class="keyword">End</span>(xlToRight).Column - <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Set</span> rng_last = .Cells(lr, lc)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27;Set rng_last = .Cells.SpecialCells(xlCellTypeLastCell)</span></span><br><span class="line">    </span><br><span class="line">    r = <span class="number">2</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> photo_path <span class="keyword">In</span> coll_photo_path</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">If</span> IsPaste = <span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line">    </span><br><span class="line">            <span class="keyword">Set</span> objTargetCell = .Cells(r, <span class="number">2</span>)</span><br><span class="line">    </span><br><span class="line">            objTargetCell.ColumnWidth = photo_width</span><br><span class="line">            objTargetCell.RowHeight = photo_height</span><br><span class="line">        </span><br><span class="line">            <span class="keyword">Set</span> pic = .Pictures.Insert(photo_path)</span><br><span class="line">            <span class="comment">&#x27;Set pic = .Pictures.Insert(imagePath).ShapeRange.PictureFormat.Compression = 75</span></span><br><span class="line">            <span class="comment">&#x27;Set pic = .Shapes.AddPicture(photo_path) &#x27;, True, True, objTargetCell.Left + 2, objTargetCell.Top + 2, objTargetCell.Width - 4, objTargetCell.Height - 4)</span></span><br><span class="line">            <span class="comment">&#x27;pic.LockAspectRatio = msoFalse</span></span><br><span class="line">        </span><br><span class="line">            <span class="keyword">With</span> pic</span><br><span class="line">            </span><br><span class="line">                dblGap = <span class="number">2</span>#</span><br><span class="line">            </span><br><span class="line">                .ShapeRange.LockAspectRatio = msoTrue <span class="comment">&#x27;鎖定照片長寬比</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">Set</span> ranOri = objTargetCell</span><br><span class="line"></span><br><span class="line">                dblRatioPic = .Width / .Height</span><br><span class="line">                dblRatioOri = ranOri.Width / ranOri.Height</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">If</span> dblRatioPic &gt; dblRatioOri <span class="keyword">Then</span> <span class="comment">&#x27;寬度控制</span></span><br><span class="line">                    .Width = ranOri.Width - <span class="number">2</span> * dblGap</span><br><span class="line">                    .Top = ranOri.Top + <span class="number">0.5</span> * ranOri.Height - <span class="number">0.5</span> * .Height</span><br><span class="line">                    .Left = ranOri.Left + dblGap</span><br><span class="line">                <span class="keyword">Else</span>                                <span class="comment">&#x27;高度控制</span></span><br><span class="line">                    .Height = ranOri.Height - <span class="number">2</span> * dblGap</span><br><span class="line">                    .Top = ranOri.Top + dblGap</span><br><span class="line">                    .Left = ranOri.Left + <span class="number">0.5</span> * ranOri.Width - <span class="number">0.5</span> * .Width</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        .Cells(r, <span class="number">1</span>) = r - <span class="number">1</span></span><br><span class="line">        .Cells(r, <span class="number">3</span>) = photo_path</span><br><span class="line">        .Cells(r, <span class="number">4</span>) = getParentFolder(photo_path) <span class="comment">&#x27;取得上層目錄</span></span><br><span class="line">        .Cells(r, <span class="number">5</span>) = getFileName(photo_path) <span class="comment">&#x27;取得檔案名稱</span></span><br><span class="line">        </span><br><span class="line">        .Cells(r, <span class="number">1</span>).Resize(<span class="number">1</span>, rng_last.Column).Borders.LineStyle = <span class="number">1</span></span><br><span class="line">        .Cells(r, <span class="number">6</span>).Resize(<span class="number">1</span>, rng_last.Column).HorizontalAlignment = xlLeft</span><br><span class="line">        </span><br><span class="line">        <span class="comment">&#x27;Call getMarkDetail(.Cells(r, 5), r)</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        r = r + <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;====取得上層目錄路徑=====</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> getParentFolder(<span class="keyword">ByVal</span> path <span class="keyword">As</span> <span class="type">String</span>)</span><br><span class="line"></span><br><span class="line">tmp_folder = Replace(path, main_path, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">tmp = split(tmp_folder, <span class="string">&quot;\&quot;</span>)</span><br><span class="line"></span><br><span class="line">tmp_filename = tmp(UBound(tmp))</span><br><span class="line"></span><br><span class="line">getParentFolder = Replace(tmp_folder, tmp_filename, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;====取得檔案名稱=====</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> getFileName(<span class="keyword">ByVal</span> path <span class="keyword">As</span> <span class="type">String</span>)</span><br><span class="line"></span><br><span class="line">tmp = split(path, <span class="string">&quot;\&quot;</span>)</span><br><span class="line"></span><br><span class="line">getFileName = tmp(UBound(tmp))</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="基本資料登錄">2-2 基本資料登錄</h3>
<figure>
<img src="upload_5006a277fccef045e65c4a45909d3250.png"
alt="操作介面表單化" />
<figcaption aria-hidden="true">操作介面表單化</figcaption>
</figure>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&#x27;Initialize</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> Sheets(<span class="string">&quot;Result&quot;</span>)</span><br><span class="line"></span><br><span class="line">    lr = .Cells(.Rows.Count, <span class="number">1</span>).<span class="keyword">End</span>(xlUp).Row</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Me</span>.Label2.Caption = <span class="string">&quot;共&quot;</span> &amp; lr - <span class="number">1</span> &amp; <span class="string">&quot;張&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Me</span>.Label3.Caption = .Cells(<span class="number">1</span>, <span class="number">7</span>)</span><br><span class="line">    <span class="keyword">Me</span>.Label4.Caption = .Cells(<span class="number">1</span>, <span class="number">8</span>)</span><br><span class="line">    <span class="keyword">Me</span>.Label5.Caption = .Cells(<span class="number">1</span>, <span class="number">9</span>)</span><br><span class="line">    <span class="keyword">Me</span>.Label6.Caption = .Cells(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">Me</span>.Label7.Caption = .Cells(<span class="number">1</span>, <span class="number">11</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Me</span>.TextBox1 = <span class="string">&quot;1&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Me</span>.ComboBox1.AddItem <span class="string">&quot;施工抽查&quot;</span></span><br><span class="line">    <span class="keyword">Me</span>.ComboBox1.AddItem <span class="string">&quot;品質管制&quot;</span></span><br><span class="line">    <span class="keyword">Me</span>.ComboBox1.AddItem <span class="string">&quot;缺失改善&quot;</span></span><br><span class="line">    <span class="keyword">Me</span>.ComboBox1.AddItem <span class="string">&quot;施工中&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;節錄照片內容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> TextBox1_Change()</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> clsI <span class="keyword">As</span> <span class="built_in">New</span> clsInformation</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;If clsI.IsShowEditForm = False Then Exit Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> TextBox1.Value &lt;&gt; <span class="string">&quot;0&quot;</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">s = Cells(TextBox1.Value + <span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;On Error Resume Next</span></span><br><span class="line"></span><br><span class="line">Image1.Picture = LoadPicture(s)</span><br><span class="line"></span><br><span class="line">ImageTmp.TextBox2 = Cells(TextBox1.Value + <span class="number">1</span>, <span class="number">7</span>)</span><br><span class="line">ImageTmp.TextBox3 = Cells(TextBox1.Value + <span class="number">1</span>, <span class="number">8</span>)</span><br><span class="line">ImageTmp.TextBox4 = Cells(TextBox1.Value + <span class="number">1</span>, <span class="number">9</span>)</span><br><span class="line">ImageTmp.ComboBox1 = Cells(TextBox1.Value + <span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line"><span class="comment">&#x27;ImageTmp.TextBox5 = Cells(TextBox1.Value + 1, 10)</span></span><br><span class="line">ImageTmp.TextBox6 = Cells(TextBox1.Value + <span class="number">1</span>, <span class="number">11</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="第三章節-報表版型">第三章節 報表版型</h2>
<h3 id="報表基本版型">3-1 報表基本版型</h3>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> getReportShts()</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> coll <span class="keyword">As</span> <span class="built_in">New</span> Collection</span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> sht <span class="keyword">In</span> Sheets</span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> sht.Name <span class="built_in">Like</span> <span class="string">&quot;*-*&quot;</span> <span class="keyword">Then</span></span><br><span class="line">    </span><br><span class="line">    coll.Add sht.Name</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> it <span class="keyword">In</span> coll</span><br><span class="line"></span><br><span class="line">    j = j + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    p = p &amp; j &amp; <span class="string">&quot;.&quot;</span> &amp; it &amp; vbNewLine</span><br><span class="line"></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">AGAIN:</span></span><br><span class="line"></span><br><span class="line">mode = InputBox(<span class="string">&quot;請選擇列印版型:&quot;</span> &amp; vbNewLine &amp; p)</span><br><span class="line"></span><br><span class="line">Sheets(coll(<span class="built_in">CInt</span>(mode))).PrintPreview</span><br><span class="line"></span><br><span class="line">msg = MsgBox(<span class="string">&quot;這是您要的版型嗎?&quot;</span>, vbYesNo)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> msg = vbYes <span class="keyword">Then</span></span><br><span class="line">    Sheets(<span class="string">&quot;Main&quot;</span>).Range(<span class="string">&quot;B4&quot;</span>) = coll(<span class="built_in">CInt</span>(mode))</span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">    <span class="keyword">GoTo</span> AGAIN</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">Sheets(<span class="string">&quot;Main&quot;</span>).Activate</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h3 id="報表客製版型">3-2 報表客製版型<span class="github-emoji"
data-alias="star" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">⭐</span></h3>
<p>學習如何從既有版型調整標籤塊到指定位置並調整數量，批次代入工作表</p>
<ul>
<li>&lt;<照片-1>&gt; 引入照片</li>
<li>&lt;<位置-1>&gt; 對應H欄</li>
<li>&lt;<日期-1>&gt; 對應G欄</li>
<li>&lt;<說明-1>&gt; 對應I欄</li>
</ul>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> checkReportFormat()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> coll <span class="keyword">As</span> <span class="built_in">New</span> Collection</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27; 遍歷報表中的所有儲存格</span></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> rng <span class="keyword">In</span> Sheets(getReportShtName).UsedRange</span><br><span class="line"></span><br><span class="line">        <span class="comment">&#x27; 如果儲存格的值匹配 &quot;&lt;&lt;*&gt;&gt;&quot;</span></span><br><span class="line">        <span class="keyword">If</span> rng.Value <span class="built_in">Like</span> <span class="string">&quot;&lt;&lt;*&gt;&gt;&quot;</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&#x27; 去掉 &lt;&lt; 和 &gt;&gt;</span></span><br><span class="line">            tmp = Replace(rng.Value, <span class="string">&quot;&lt;&lt;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">            tmp = Replace(tmp, <span class="string">&quot;&gt;&gt;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment">&#x27; 將結果加入到 coll 集合中</span></span><br><span class="line">            coll.Add tmp</span><br><span class="line"></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> coll_unique <span class="keyword">As</span> <span class="built_in">New</span> Collection</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27; 檢查報表中每個標註項目的對應表頭名稱</span></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> it <span class="keyword">In</span> coll</span><br><span class="line"></span><br><span class="line">        <span class="comment">&#x27; 將 coll 中的每個項目按 &quot;-&quot; 拆分，取得關鍵字 ky</span></span><br><span class="line">        s = Split(it, <span class="string">&quot;-&quot;</span>)</span><br><span class="line">        ky = s(<span class="number">0</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">&#x27; 在 &quot;Result&quot; 表的第一行查找這個關鍵字</span></span><br><span class="line">        <span class="keyword">Set</span> rng = Sheets(<span class="string">&quot;Result&quot;</span>).Rows(<span class="number">1</span>).Find(ky)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">&#x27; 如果找不到，且關鍵字不等於 &quot;照片&quot;，顯示錯誤訊息並選中報表中的對應位置</span></span><br><span class="line">        <span class="keyword">If</span> rng <span class="built_in">Is</span> <span class="literal">Nothing</span> <span class="built_in">And</span> ky &lt;&gt; <span class="string">&quot;照片&quot;</span> <span class="keyword">Then</span></span><br><span class="line">            Sheets(getReportShtName).Activate</span><br><span class="line">            MsgBox <span class="string">&quot;【&quot;</span> &amp; it &amp; <span class="string">&quot;】:對應不到Result的表頭名稱&quot;</span></span><br><span class="line">            <span class="keyword">Set</span> rng_focus = Sheets(getReportShtName).Cells.Find(<span class="string">&quot;&lt;&lt;&quot;</span> &amp; it &amp; <span class="string">&quot;&gt;&gt;&quot;</span>)</span><br><span class="line">            rng_focus.<span class="keyword">Select</span></span><br><span class="line">            <span class="keyword">End</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&#x27; 將唯一的編號 num 添加到 coll_unique 集合中</span></span><br><span class="line">        num = s(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line">        coll_unique.Add num, <span class="built_in">CStr</span>(num)</span><br><span class="line">        <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">GoTo</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> coll_count <span class="keyword">As</span> <span class="built_in">New</span> Collection</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27; 計算每個唯一編號出現的次數</span></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> it_unique <span class="keyword">In</span> coll_unique</span><br><span class="line"></span><br><span class="line">        cnt = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">For</span> <span class="keyword">Each</span> it <span class="keyword">In</span> coll</span><br><span class="line"></span><br><span class="line">            s = Split(it, <span class="string">&quot;-&quot;</span>)</span><br><span class="line">            num = s(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">If</span> num = it_unique <span class="keyword">Then</span></span><br><span class="line">                cnt = cnt + <span class="number">1</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&#x27; 將結果以 &quot;編號-次數&quot; 的格式添加到 coll_count 集合中</span></span><br><span class="line">        coll_count.Add it_unique &amp; <span class="string">&quot;-&quot;</span> &amp; cnt</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27; 檢查每個唯一編號的出現次數是否一致</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> coll_count.Count - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        s_cnt = Split(coll_count(i), <span class="string">&quot;-&quot;</span>)(<span class="number">1</span>)</span><br><span class="line">        e_cnt = Split(coll_count(i + <span class="number">1</span>), <span class="string">&quot;-&quot;</span>)(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">If</span> s_cnt &lt;&gt; e_cnt <span class="keyword">Then</span></span><br><span class="line">            MsgBox <span class="string">&quot;報表位置註記項目，不同編號應具有相同數量!&quot;</span> &amp; vbNewLine &amp; _</span><br><span class="line">            <span class="string">&quot;請檢核第&quot;</span> &amp; Split(coll_count(i), <span class="string">&quot;-&quot;</span>)(<span class="number">0</span>) &amp; <span class="string">&quot;次與第&quot;</span> &amp; Split(coll_count(i + <span class="number">1</span>), <span class="string">&quot;-&quot;</span>)(<span class="number">0</span>) &amp; <span class="string">&quot;次!&quot;</span>, vbCritical</span><br><span class="line">            <span class="keyword">End</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h3 id="文字細節調整">3-3 文字細節調整</h3>
<blockquote>
<p>日期是否出現於右下角的浮水印文字塊，調整其文字顏色及網底顏色</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> AddText(<span class="keyword">ByVal</span> txtX, <span class="keyword">ByVal</span> txtY, <span class="keyword">ByVal</span> txtHeight, <span class="keyword">ByVal</span> txtWidth, <span class="keyword">ByVal</span> txtStr, <span class="keyword">Optional</span> <span class="keyword">ByVal</span> RGB_Selector <span class="keyword">As</span> <span class="type">Integer</span> = <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> o <span class="keyword">As</span> <span class="built_in">New</span> clsInformation</span><br><span class="line"><span class="keyword">Dim</span> r <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Dim</span> g <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Dim</span> b <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Dim</span> r2 <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Dim</span> g2 <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Dim</span> b2 <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> o.IsPrintDate = <span class="literal">False</span> <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line">RGB_Interior = o.getInteriorColor</span><br><span class="line"><span class="keyword">Call</span> o.VBLongToRGB(RGB_Interior, r, g, b)</span><br><span class="line">RGB_Font = o.getFontColor</span><br><span class="line"><span class="keyword">Call</span> o.VBLongToRGB(RGB_Font, r2, g2, b2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> ThisWorkbook.Sheets(report_shtname)</span><br><span class="line"></span><br><span class="line">    .Activate</span><br><span class="line"></span><br><span class="line">    ActiveSheet.Shapes.AddTextbox(msoTextOrientationHorizontal, txtX, txtY, txtHeight * Len(txtStr) * <span class="number">0.33</span>, txtHeight).<span class="keyword">Select</span></span><br><span class="line">    Selection.ShapeRange(<span class="number">1</span>).TextFrame2.TextRange.Characters.<span class="keyword">text</span> = txtStr</span><br><span class="line">        </span><br><span class="line">    Selection.ShapeRange.Fill.Visible = msoFalse</span><br><span class="line">    Selection.ShapeRange.Line.Visible = msoFalse</span><br><span class="line">    Selection.ShapeRange.ZOrder msoBringToFront</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">With</span> Selection.ShapeRange(<span class="number">1</span>).TextFrame2.TextRange.Characters.Font</span><br><span class="line"></span><br><span class="line">        .Bold = msoTrue</span><br><span class="line">        .Fill.ForeColor.RGB = RGB(r2, g2, b2)</span><br><span class="line">        .Size = txtHeight * <span class="number">0.5</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> o.IsPrintDateBack = <span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">With</span> Selection.ShapeRange(<span class="number">1</span>).Fill</span><br><span class="line">            .Visible = msoTrue</span><br><span class="line">            .ForeColor.RGB = RGB(r, g, b)</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h2 id="第四章節-報表輸出">第四章節 報表輸出</h2>
<h3 id="報表輸出方法">4-1 報表輸出方法 <span class="github-emoji"
data-alias="star" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">⭐</span></h3>
<blockquote>
<p>建立列印群組，根據版型決定每幾張要換頁，由工作表未隱藏的列決定列印順序，未來亦可建立自己的列印規則，將備註欄的資料篩選併入作為列印的觸發擴充項目(比如設定改善編號、頁次來將工作表的順序進行重新調整)。</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> getPrintGroups()</span><br><span class="line"></span><br><span class="line"><span class="keyword">Call</span> checkDateFormat</span><br><span class="line"><span class="keyword">Call</span> checkReportFormat</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> f <span class="keyword">As</span> <span class="built_in">New</span> clsMyfunction</span><br><span class="line"><span class="keyword">Dim</span> coll_rows_final <span class="keyword">As</span> <span class="built_in">New</span> Collection</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> coll_rows = getRowsUnHidden</span><br><span class="line">    </span><br><span class="line">    folder_name = Format(Now(), <span class="string">&quot;YYYYMMDD-HHMMSS &quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> r <span class="keyword">In</span> coll_rows</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">With</span> Sheets(<span class="string">&quot;Result&quot;</span>)</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">If</span> .Cells(r, .Columns.Count).<span class="keyword">End</span>(xlToLeft).Column &gt; <span class="number">5</span> <span class="keyword">Then</span></span><br><span class="line">        </span><br><span class="line">            coll_rows_final.Add r</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> coll_rows_final.Count &gt; <span class="number">0</span> <span class="keyword">Then</span> <span class="keyword">Call</span> printFilesByRows(coll_rows_final, <span class="literal">True</span>, folder_name)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Set</span> coll_rows_final = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line">Sheets(<span class="string">&quot;Main&quot;</span>).Activate</span><br><span class="line"></span><br><span class="line">Workbooks(Workbooks.Count).Activate</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>列印相關代碼，包含列印成PDF跟列印成XLS</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> printFilesByRows(<span class="keyword">ByVal</span> coll_rows, <span class="keyword">ByVal</span> IsXLS <span class="keyword">As</span> <span class="type">Boolean</span>, <span class="keyword">ByVal</span> folder_name <span class="keyword">As</span> <span class="type">String</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> o <span class="keyword">As</span> <span class="built_in">New</span> clsReport</span><br><span class="line"><span class="keyword">Dim</span> f <span class="keyword">As</span> <span class="built_in">New</span> clsMyfunction</span><br><span class="line"><span class="keyword">Dim</span> coll_recover <span class="keyword">As</span> <span class="built_in">New</span> Collection</span><br><span class="line"></span><br><span class="line">report_shtname = Sheets(<span class="string">&quot;Main&quot;</span>).Range(<span class="string">&quot;B4&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> coll_key = getKeyWords <span class="comment">&#x27;第G欄開始</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> wb = Workbooks.Add</span><br><span class="line"></span><br><span class="line">ThisWorkbook.Activate</span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> r <span class="keyword">In</span> coll_rows</span><br><span class="line"></span><br><span class="line"><span class="symbol">KeepPrint:</span></span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> s <span class="keyword">In</span> coll_key</span><br><span class="line">        </span><br><span class="line">        myKey = split(s, <span class="string">&quot;,&quot;</span>)(<span class="number">0</span>)</span><br><span class="line">        col = split(s, <span class="string">&quot;,&quot;</span>)(<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">        myAddress = getAddressByKeyWord(myKey, <span class="built_in">CStr</span>(i))</span><br><span class="line">        </span><br><span class="line"><span class="comment">&#x27;        If i = 4 Then Stop</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">If</span> myAddress &lt;&gt; <span class="string">&quot;&quot;</span> <span class="keyword">Then</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">If</span> myKey = <span class="string">&quot;照片&quot;</span> <span class="keyword">Then</span></span><br><span class="line">            </span><br><span class="line">                file_name = file_name &amp; r &amp; <span class="string">&quot;-&quot;</span></span><br><span class="line">                <span class="comment">&#x27;paste photo</span></span><br><span class="line">                <span class="keyword">Call</span> o.PastePhoto_giveRng(Sheets(getReportShtName).Range(myAddress), Sheets(<span class="string">&quot;Result&quot;</span>).Cells(r, <span class="string">&quot;C&quot;</span>), Sheets(<span class="string">&quot;Result&quot;</span>).Cells(r, <span class="built_in">CInt</span>(col)))</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">ElseIf</span> myKey = <span class="string">&quot;日期&quot;</span> <span class="keyword">Then</span></span><br><span class="line">                </span><br><span class="line">                Sheets(getReportShtName).Range(myAddress) = f.tranStrToDate(Sheets(<span class="string">&quot;Result&quot;</span>).Cells(r, <span class="built_in">CInt</span>(col)))</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">Else</span></span><br><span class="line">            </span><br><span class="line">                Sheets(getReportShtName).Range(myAddress) = Sheets(<span class="string">&quot;Result&quot;</span>).Cells(r, <span class="built_in">CInt</span>(col))</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            </span><br><span class="line">            coll_recover.Add <span class="string">&quot;&lt;&lt;&quot;</span> &amp; myKey &amp; <span class="string">&quot;-&quot;</span> &amp; <span class="built_in">CStr</span>(i) &amp; <span class="string">&quot;&gt;&gt;;&quot;</span> &amp; myAddress</span><br><span class="line">            IsPrinted = <span class="literal">False</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">Else</span></span><br><span class="line">            </span><br><span class="line">            IsPrinted = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">If</span> IsXLS = <span class="literal">False</span> <span class="keyword">Then</span></span><br><span class="line">                <span class="keyword">Call</span> printReportPDF(file_name)</span><br><span class="line">            <span class="keyword">Else</span></span><br><span class="line">                <span class="keyword">Call</span> printReportToWb(wb, file_name)</span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">Call</span> clearReport(coll_recover)</span><br><span class="line">            file_name = <span class="string">&quot;&quot;</span></span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">GoTo</span> KeepPrint</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> IsPrinted = <span class="literal">False</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> IsXLS = <span class="literal">False</span> <span class="keyword">Then</span></span><br><span class="line">        <span class="keyword">Call</span> printReportPDF(file_name)</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        <span class="keyword">Call</span> printReportToWb(wb, file_name)</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Call</span> clearReport(coll_recover)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> IsXLS = <span class="literal">True</span> <span class="keyword">Then</span> <span class="keyword">Call</span> printReportToWb_Save(wb, folder_name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="照片歸檔">4-2 照片歸檔</h3>
<blockquote>
<p>將工作表上手動紀錄的資料內容依照指定方式批次針對照片原始檔案進行檔名更改，未來引入時會先判定檔名內容引入工作表相對應資料。</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> ChangeAllFileName()</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> Sheets(<span class="string">&quot;Result&quot;</span>).AutoFilterMode <span class="keyword">Then</span></span><br><span class="line">    Sheets(<span class="string">&quot;Result&quot;</span>).AutoFilterMode = <span class="literal">False</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Call</span> getCombineNames</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> objFile <span class="keyword">As</span> <span class="built_in">New</span> clsmyFile</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> Sheets(<span class="string">&quot;Main&quot;</span>)</span><br><span class="line"></span><br><span class="line">    objFile.main_path = .Range(<span class="string">&quot;B2&quot;</span>)</span><br><span class="line">    objFile.changeFileName</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Call</span> getDataFromFolder <span class="comment">&#x27;reloading</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> getCombineNames()</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> clsInf <span class="keyword">As</span> <span class="built_in">New</span> clsInformation</span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> coll = clsInf.getCollStructure(clsInf.getReNameStruc)</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> Sheets(<span class="string">&quot;Result&quot;</span>)</span><br><span class="line"></span><br><span class="line">    lr = .Cells(.Rows.Count, <span class="number">1</span>).<span class="keyword">End</span>(xlUp).Row</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> r = <span class="number">2</span> <span class="keyword">To</span> lr</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">If</span> .Cells(r, .Columns.Count).<span class="keyword">End</span>(xlToLeft).Column &gt; <span class="number">5</span> <span class="keyword">Then</span></span><br><span class="line">        </span><br><span class="line">            p = <span class="string">&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">            <span class="keyword">For</span> <span class="keyword">Each</span> col <span class="keyword">In</span> coll</span><br><span class="line">            </span><br><span class="line">                p = p &amp; .Cells(r, col) &amp; <span class="string">&quot;_&quot;</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">Next</span></span><br><span class="line">            </span><br><span class="line">            .Cells(r, <span class="string">&quot;F&quot;</span>) = <span class="keyword">mid</span>(p, <span class="number">1</span>, Len(p) - <span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>改名部分</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> changeFileName()</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> shtResult</span><br><span class="line"></span><br><span class="line">    lr = .Cells(.Rows.Count, <span class="number">1</span>).<span class="keyword">End</span>(xlUp).Row</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> r = <span class="number">2</span> <span class="keyword">To</span> lr</span><br><span class="line">    </span><br><span class="line">        oldname = .Cells(r, <span class="number">3</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">If</span> .Cells(r, <span class="number">6</span>) <span class="built_in">Like</span> <span class="string">&quot;*.jp*&quot;</span> <span class="keyword">Then</span></span><br><span class="line">            newname = main_path &amp; .Cells(r, <span class="number">4</span>) &amp; .Cells(r, <span class="number">6</span>)</span><br><span class="line">        <span class="keyword">Else</span></span><br><span class="line">            newname = main_path &amp; .Cells(r, <span class="number">4</span>) &amp; .Cells(r, <span class="number">6</span>) &amp; <span class="string">&quot;.jpg&quot;</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">If</span> .Cells(r, <span class="number">6</span>) &lt;&gt; <span class="string">&quot;&quot;</span> <span class="keyword">Then</span></span><br><span class="line">            </span><br><span class="line">            Debug.Print <span class="string">&quot;old:&quot;</span> &amp; oldname</span><br><span class="line">            Debug.Print <span class="string">&quot;new:&quot;</span> &amp; newname</span><br><span class="line">            </span><br><span class="line">            Name oldname <span class="keyword">As</span> newname</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Excel VBA</tag>
        <tag>施工照片</tag>
      </tags>
  </entry>
  <entry>
    <title>不同版本間的CAD開發</title>
    <url>/posts/2144300187/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<p>CAD版本有非常多種，我目前有接觸過的就有AutoCAD、ZWCAD以及現在正在使用中的ProgeCAD。</p>
<p>在使用VBA進行二次開發的過程，需要考量<strong>引用物件模型</strong>之間的差異，就目前開發經驗中，AutoCAD與ZWCAD可以透過修改引用名稱就可以有很好的轉換體驗，但是ProgeCAD的<strong>基底物件</strong>有比較不同的設計，故本篇要來解釋從AutoCAD的VBAcode如何透過我所撰寫的物件轉換函數進行相容，讓程式碼在ProgeCAD也可以順利動起來。</p>
<p><a
href="https://hankvba.blogspot.com/2021/07/cadlibraryclsacad.html">🔗HanksVBA學習歷程-不同CAD版本間也可以引用的Library(clsACAD)</a></p>
<span id="more"></span>
<h2 id="版本沿革">🎯版本沿革</h2>
<h3 id="autocad">AutoCAD</h3>
<p>AutoCAD為Autodesk公司旗下產品，產品比較沒有異常，程式碼範例豐富，社群支援完整度較高，同時也是最昂貴的軟體。</p>
<h3 id="zwcad">ZWCAD</h3>
<p>ZWCAD為中望公司旗下產品，其實與AutoCAD都大同小異，費用比AutoCAD來的便宜，可惜政府機關不能接受中資，怕有資安疑慮。</p>
<h3 id="progecad">ProgeCAD</h3>
<p>ProgeCAD總部設立於義大利，採用IntelliCAD引擎驅動，就使用上不知怎麼說，就是覺得與AutoCAD少了一味，程式碼的運作比較緩慢，有些介面會跟AutoCAD有些許落差。</p>
<h2 id="開發差異">📌開發差異</h2>
<p>之前的專案大多都是用於AutoCAD運作，自從機關買斷ProgeCAD之後，為了把程式碼移轉到ProgeCAD進行，需要了解一下程式碼開發之間的差異。</p>
<h3 id="公共變數">公共變數</h3>
<p>公共變數的目的是為了能夠在各個function中相互傳遞變數使用</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Private</span> mo <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"><span class="keyword">Private</span> pa <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"><span class="keyword">Public</span> acadDoc <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"><span class="keyword">Public</span> CADVer <span class="keyword">As</span> <span class="type">String</span></span><br></pre></td></tr></table></figure>
<h3 id="連接應用程式">連接應用程式</h3>
<p>這裡我在Sheets("總表")上面做了一個選單，讓使用者可以挑選要啟用哪個後期繫結字串，strCAD為VBA呼叫CAD應用程式連接字串，CADVer為各function連接後的細微調整判斷。</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Class_Initialize()</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> Sheets(<span class="string">&quot;總表&quot;</span>).optAutoCAD = <span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    strCAD = <span class="string">&quot;AutoCAD.application&quot;</span></span><br><span class="line">    CADVer = <span class="string">&quot;AUTOCAD&quot;</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">ElseIf</span> Sheets(<span class="string">&quot;總表&quot;</span>).optZWCAD = <span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line">    </span><br><span class="line">    strCAD = <span class="string">&quot;ZWCAD.Application&quot;</span></span><br><span class="line">    CADVer = <span class="string">&quot;ZWCAD&quot;</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">ElseIf</span> Sheets(<span class="string">&quot;總表&quot;</span>).optICAD = <span class="literal">True</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    strCAD = <span class="string">&quot;ICAD.application&quot;</span></span><br><span class="line">    CADVer = <span class="string">&quot;ICAD&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Call</span> CADInit(strCAD)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> CADInit(<span class="keyword">ByVal</span> strCAD <span class="keyword">As</span> <span class="type">String</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> acadApp = GetObject(, strCAD) <span class="comment">&#x27;查看安裝</span></span><br><span class="line"><span class="keyword">If</span> Err &lt;&gt; <span class="number">0</span> <span class="keyword">Then</span> <span class="keyword">Set</span> acadApp = CreateObject(strCAD)</span><br><span class="line">acadApp.Visible = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">GoTo</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> mo = acadApp.ActiveDocument.ModelSpace</span><br><span class="line"><span class="keyword">Set</span> pa = acadApp.ActiveDocument.PaperSpace</span><br><span class="line"><span class="keyword">Set</span> acadDoc = acadApp.ActiveDocument</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h2 id="物件相容轉換函數">🌟物件相容轉換函數</h2>
<ul>
<li>AutoCAD的點物件是以一個陣列(array)儲存(0,1,2)double變數而成。</li>
<li>AutoCAD的線物件則分為LightWeightPolyline跟3dPolyline
<ul>
<li>LightWeigtPolyline是以一個陣列(vertice)<strong>至少</strong>儲存(0,1,2,3)生成，過程中不儲存高程，所以每2個值為一個點。</li>
<li>3DPolyline是以一個陣列(vertice)<strong>至少</strong>儲存(0,1,2,3,4,5)生成，過程中儲存高程，所以每3個值為一個點。</li>
</ul></li>
<li>ProgeCAD的點物件是以一個點物件(Point)，由X,Y,Z三個屬性儲存其變數而成。</li>
<li>ProgeCAD的線物件是以點群物件(Points)儲存點物件(Point)，取其變數而成。</li>
</ul>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Function</span> tranPoint(<span class="keyword">ByVal</span> CADpt)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer &lt;&gt; <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span> tranPoint = CADpt: <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> tranPoint = Library.CreatePoint(CADpt(<span class="number">0</span>), CADpt(<span class="number">1</span>), CADpt(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> tranIPoint(<span class="keyword">ByVal</span> ICADpt)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer &lt;&gt; <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span> tranIPoint = ICADpt: <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> tmp(<span class="number">2</span>) <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line">tmp(<span class="number">0</span>) = ICADpt.X</span><br><span class="line">tmp(<span class="number">1</span>) = ICADpt.Y</span><br><span class="line">tmp(<span class="number">2</span>) = ICADpt.Z</span><br><span class="line"></span><br><span class="line">tranIPoint = tmp</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> tranPoints(<span class="keyword">ByVal</span> vertices, <span class="keyword">Optional</span> cnt <span class="keyword">As</span> <span class="type">Byte</span> = <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer &lt;&gt; <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span> tranPoints = vertices: <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> vertices(<span class="number">2</span>) = <span class="number">0</span> <span class="keyword">Then</span> cnt = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> myPline, myPoints, pt</span><br><span class="line">    </span><br><span class="line"><span class="keyword">Set</span> myPoints = Library.CreatePoints</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> cnt = <span class="number">2</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> UBound(vertices) <span class="keyword">Step</span> cnt</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">Set</span> pt = Library.CreatePoint(vertices(i), vertices(i + <span class="number">1</span>))</span><br><span class="line">    </span><br><span class="line">        myPoints.Add</span><br><span class="line">        myPoints(myPoints.Count - <span class="number">1</span>).X = pt.X</span><br><span class="line">        myPoints(myPoints.Count - <span class="number">1</span>).Y = pt.Y</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> UBound(vertices) <span class="keyword">Step</span> cnt</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">Set</span> pt = Library.CreatePoint(vertices(i), vertices(i + <span class="number">1</span>), vertices(i + <span class="number">2</span>))</span><br><span class="line">    </span><br><span class="line">        myPoints.Add</span><br><span class="line">        myPoints(myPoints.Count - <span class="number">1</span>).X = pt.X</span><br><span class="line">        myPoints(myPoints.Count - <span class="number">1</span>).Y = pt.Y</span><br><span class="line">        myPoints(myPoints.Count - <span class="number">1</span>).Z = pt.Z</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> tranPoints = myPoints</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> tranIPoints(<span class="keyword">ByVal</span> myPoints)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer &lt;&gt; <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span> tranIPoints = myPoints: <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> vertices()</span><br><span class="line"><span class="keyword">ReDim</span> vertices(myPoints.Count * <span class="number">3</span> - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> it <span class="keyword">In</span> myPoints</span><br><span class="line"></span><br><span class="line">vertices(<span class="number">0</span> + j) = it.X</span><br><span class="line">vertices(<span class="number">0</span> + j + <span class="number">1</span>) = it.Y</span><br><span class="line">vertices(<span class="number">0</span> + j + <span class="number">2</span>) = it.Z</span><br><span class="line"></span><br><span class="line">j = j + <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">tranIPoints = vertices</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<h3 id="基本物件">基本物件</h3>
<p>畫點、畫圓、畫線、寫文字</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Function</span> AddPoint(pt) <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer = <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span></span><br><span class="line">    <span class="keyword">Set</span> AddPoint = mo.AddPointEntity(tranPoint(pt))</span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">    <span class="keyword">Set</span> AddPoint = mo.AddPoint(tranPoint(pt))</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> AddCircle(cpt, r) <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> AddCircle = mo.AddCircle(tranPoint(cpt), r)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> AddLine(spt, ept) <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> AddLine = mo.AddLine(tranPoint(spt), tranPoint(ept))</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> AddLineCO(X1, Y1, X2, Y2) <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> spt(<span class="number">2</span>) <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line"><span class="keyword">Dim</span> ept(<span class="number">2</span>) <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line">spt(<span class="number">0</span>) = X1: spt(<span class="number">1</span>) = Y1</span><br><span class="line">ept(<span class="number">0</span>) = X2: ept(<span class="number">1</span>) = Y2</span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> AddLineCO = AddLine(spt, ept)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> AddPolyLine(vertices) <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> AddPolyLine = mo.AddPolyLine(tranPoints(vertices))</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> Add3dPoly(vertices) <span class="comment">&#x27;20210604 new</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> Add3dPoly = mo.Add3dPoly(tranPoints(vertices))</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> AddLWPolyLine(vertices) <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> AddLWPolyLine = mo.AddLightWeightPolyline(tranPoints(vertices, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> AddArc(<span class="keyword">ByVal</span> Center, Radius <span class="keyword">As</span> <span class="type">Double</span>, StartAngle <span class="keyword">As</span> <span class="type">Double</span>, EndAngle <span class="keyword">As</span> <span class="type">Double</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> AddArc = mo.AddArc(tranPoint(Center), Radius, StartAngle, EndAngle)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> AddText(<span class="keyword">ByVal</span> myText <span class="keyword">As</span> <span class="type">String</span>, <span class="keyword">ByVal</span> txtpt, <span class="keyword">ByVal</span> txtheight <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">Optional</span> alignmode <span class="keyword">As</span> <span class="type">Byte</span> = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> mtextObj <span class="keyword">As</span> <span class="type">Object</span> <span class="comment">&#x27;IntelliCAD.Text</span></span><br><span class="line">    <span class="keyword">Dim</span> insPt</span><br><span class="line">    </span><br><span class="line">    insPt = txtpt</span><br><span class="line">    <span class="keyword">Set</span> txtobj = mo.AddText(myText, tranPoint(insPt), txtheight)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> CADVer = <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">Select</span> <span class="keyword">Case</span> alignmode</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">Case</span> <span class="number">1</span></span><br><span class="line">            txtobj.HorizontalAlignment = <span class="number">0</span>  <span class="comment">&#x27; acAlignmentMiddleLeft</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="number">2</span></span><br><span class="line">            txtobj.HorizontalAlignment = <span class="number">4</span>  <span class="comment">&#x27; acAlignmentMiddleCenter</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="number">3</span></span><br><span class="line">            txtobj.HorizontalAlignment = <span class="number">2</span> <span class="comment">&#x27; acAlignmentMiddleRight</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">Select</span> <span class="keyword">Case</span> alignmode</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">Case</span> <span class="number">1</span></span><br><span class="line">            txtobj.Alignment = <span class="number">9</span> <span class="comment">&#x27; acAlignmentMiddleLeft</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="number">2</span></span><br><span class="line">            txtobj.Alignment = <span class="number">10</span> <span class="comment">&#x27; acAlignmentMiddleCenter</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="number">3</span></span><br><span class="line">            txtobj.Alignment = <span class="number">11</span> <span class="comment">&#x27; acAlignmentMiddleRight</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line">    txtobj.TextAlignmentPoint = tranPoint(insPt)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> AddText = txtobj</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<h3 id="通用類別util">通用類別(Util)</h3>
<p>通用類別用於與應用程式間的互動居多，包含取得點、取得文字。也包含CAD物件本身所提供的無法分類屬性，也會放入通用類別。</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Function</span> GetPoint(<span class="keyword">ByVal</span> prompt <span class="keyword">As</span> <span class="type">String</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer = <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> o = IntelliCAD.ActiveDocument.Utility.GetPoint(, prompt)</span><br><span class="line">    GetPoint = tranIPoint(o)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">    GetPoint = acadDoc.Utility.GetPoint(, prompt)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> GetString(<span class="keyword">ByVal</span> prompt <span class="keyword">As</span> <span class="type">String</span>)</span><br><span class="line"></span><br><span class="line">GetString = acadDoc.Utility.GetString(<span class="literal">False</span>, prompt &amp; vbNewLine)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> GetBoundingBox(<span class="keyword">ByVal</span> entobj, MinX, MinY, MaxX, MaxY)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer = <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span> <span class="keyword">Call</span> GetBoundingBox_ICAD(entobj, MinX, MinY, MaxX, MaxY): <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Call</span> entobj.GetBoundingBox(Min, Max)</span><br><span class="line"></span><br><span class="line">MinX = Min(<span class="number">0</span>): MinY = Min(<span class="number">1</span>)</span><br><span class="line">MaxX = Max(<span class="number">0</span>): MaxY = Max(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> GetBoundingBox_ICAD(<span class="keyword">ByVal</span> entobj, MinX, MinY, MaxX, MaxY)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> Min <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"><span class="keyword">Dim</span> Max <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Call</span> entobj.GetBoundingBox(Min, Max)</span><br><span class="line"></span><br><span class="line">MinX = Min.X: MinY = Min.Y</span><br><span class="line">MaxX = Max.X: MaxY = Max.Y</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<h2 id="開發過程中的小問題">🐞開發過程中的小問題</h2>
<p>填充線也是常用於標示圖形的功能之一，這裡的AddHatch我一直試不出來，當初猜測可能是常數的問題<strong>vicHatchPatternTypePreDefined</strong>，結果還是一樣...</p>
<p>不同應用程式之間有時候<strong>常數設定會有所不同</strong>，包含<strong>排序的方式</strong>也可能會不同，像是在做selectionset(選擇集)的時候，AutoCAD可以很清楚知道順序，但是ProgeCAD似乎沒有一定的規則可言。</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> Hatch(<span class="keyword">ByVal</span> obj <span class="keyword">As</span> <span class="type">Object</span>, <span class="keyword">ByVal</span> Ratio <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByVal</span> ptrName <span class="keyword">As</span> <span class="type">String</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;usually use &quot;SOLID&quot;,&quot;ANSI32&quot;,&quot;AR-CONC&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer = <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> hatchobj <span class="keyword">As</span> <span class="type">Object</span> <span class="comment">&#x27;AcadHatch</span></span><br><span class="line"><span class="keyword">Dim</span> outerloop(<span class="number">0</span> <span class="keyword">To</span> <span class="number">0</span>) <span class="keyword">As</span> <span class="type">Object</span> <span class="comment">&#x27;AcadEntity</span></span><br><span class="line"></span><br><span class="line">PatternName = ptrName</span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> hatchobj = mo.AddHatch(<span class="number">0</span>, PatternName, <span class="literal">True</span>)</span><br><span class="line"><span class="comment">&#x27;Set hatchobj = mo.AddHatch(vicHatchPatternTypePreDefined, PatternName, True)</span></span><br><span class="line"></span><br><span class="line">hatchobj.PatternScale = <span class="number">1</span> / Ratio * <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> outerloop(<span class="number">0</span>) = obj</span><br><span class="line"></span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">hatchobj.AppendOuterLoop (outerloop)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> AddMixText(<span class="keyword">ByVal</span> s <span class="keyword">As</span> <span class="type">String</span>, <span class="keyword">ByVal</span> txtpt, <span class="keyword">ByVal</span> txtheight <span class="keyword">As</span> <span class="type">Double</span>, _</span><br><span class="line">                    <span class="keyword">Optional</span> alignmode <span class="keyword">As</span> <span class="type">Byte</span> = <span class="number">1</span>, <span class="keyword">Optional</span> dashmode <span class="keyword">As</span> <span class="type">Integer</span> = <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> txtobj <span class="keyword">As</span> <span class="type">Object</span> <span class="comment">&#x27;AcadText</span></span><br><span class="line"><span class="keyword">Dim</span> circleobj <span class="keyword">As</span> <span class="type">Object</span> <span class="comment">&#x27;AcadCircle</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> AddMixText = AddText(s, txtpt, txtheight, alignmode)</span><br><span class="line"></span><br><span class="line"><span class="keyword">With</span> mo</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> vertices(<span class="number">5</span>) <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> dashmode = <span class="number">0</span> <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Call</span> GetBoundingBox(AddMixText, MinX, MinY, MaxX, MaxY)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> dashmode</span><br><span class="line">    </span><br><span class="line">        vertices(<span class="number">0</span>) = MinX</span><br><span class="line">        vertices(<span class="number">1</span>) = MinY - txtheight / <span class="number">2</span> - txtheight / <span class="number">2</span> * <span class="number">0.5</span> * i</span><br><span class="line">        </span><br><span class="line">        vertices(<span class="number">3</span>) = MaxX</span><br><span class="line">        vertices(<span class="number">4</span>) = vertices(<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">Set</span> plineobj = AddPolyLine(vertices)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">&#x27;******整體寬度尚未解決******</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">If</span> CADVer &lt;&gt; <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span> plineobj.ConstantWidth = txtheight / <span class="number">10</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> CreateSSET(<span class="keyword">Optional</span> <span class="keyword">ByVal</span> sname <span class="keyword">As</span> <span class="type">String</span> = <span class="string">&quot;SS1&quot;</span>, <span class="keyword">Optional</span> <span class="keyword">ByVal</span> ftypetmp <span class="keyword">As</span> Variant = <span class="string">&quot;&quot;</span>, <span class="keyword">Optional</span> <span class="keyword">ByVal</span> fdatatmp <span class="keyword">As</span> Variant = <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;****PorgeCAD中似乎沒辦法做到過濾的條件?*****</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;0:object type</span></span><br><span class="line"><span class="comment">&#x27;2:object name</span></span><br><span class="line"><span class="comment">&#x27;8:layer name</span></span><br><span class="line"><span class="comment">&#x27;62:color number(0 to 256)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> FilterType() <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> FilterData() <span class="keyword">As</span> Variant</span><br><span class="line"></span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span>: acadDoc.SelectionSets(sname).Delete: <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">GoTo</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> sset = acadDoc.SelectionSets.Add(sname)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> ftypetmp = <span class="string">&quot;&quot;</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    sset.SelectOnScreen</span><br><span class="line">    </span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line"></span><br><span class="line">    ft = Split(ftypetmp, <span class="string">&quot;,&quot;</span>)</span><br><span class="line">    fd = Split(fdatatmp, <span class="string">&quot;,&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">ReDim</span> FilterType(<span class="number">0</span> <span class="keyword">To</span> UBound(ft))</span><br><span class="line">    <span class="keyword">ReDim</span> FilterData(<span class="number">0</span> <span class="keyword">To</span> UBound(fd))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> UBound(ft)</span><br><span class="line">    </span><br><span class="line">        FilterType(i) = ft(i)</span><br><span class="line">        FilterData(i) = fd(i)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    </span><br><span class="line">    sset.SelectOnScreen FilterType, FilterData</span><br><span class="line">    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> CreateSSET = sset</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> SetXdataToObj(<span class="keyword">ByVal</span> obj <span class="keyword">As</span> <span class="type">Object</span>, <span class="keyword">ByVal</span> xdata <span class="keyword">As</span> <span class="type">String</span>) <span class="comment">&#x27;提供綁入字串使用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer = <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Sub</span>  <span class="comment">&#x27;中心線樁無法提供</span></span><br><span class="line"><span class="comment">&#x27;*****用Handle處理?!***</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> DataType(<span class="number">0</span> <span class="keyword">To</span> <span class="number">1</span>) <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> Data(<span class="number">0</span> <span class="keyword">To</span> <span class="number">1</span>) <span class="keyword">As</span> Variant</span><br><span class="line"></span><br><span class="line">DataType(<span class="number">0</span>) = <span class="number">1001</span>: Data(<span class="number">0</span>) = xdata</span><br><span class="line">DataType(<span class="number">1</span>) = <span class="number">1000</span>: Data(<span class="number">1</span>) = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">obj.SetXData DataType, Data</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="建議開發方向">👉建議開發方向</h2>
<p><strong>通用才是王道</strong>，不管使用哪種應用程式，只要可以彼此匯入、匯出，最後都只是差在介面使用的習慣以及各應用程式獨立提供的功能而已。</p>
<p>如同前言所述，CAD版本有非常多種類型，在預算上若有所考量，其實也有FreeCAD、LibreCAD...等等開源選項。但若今天把大多數的開發時間都投在<strong>某一個CAD版本</strong>身上，未來如果公司要更換版本時，轉換成本會隨著你的開發時間而呈指數上升，程式碼越複雜問題越難查出來。</p>
<p>當今天開發人員已經決定要投資在CAD的二次開發上，我有幾點建議</p>
<ol type="1">
<li>確認文件是否豐富</li>
<li>社群平台是否有良好的支援</li>
<li>基底應用程式是否有細微bug</li>
<li>產出內容盡量以dxf為主</li>
</ol>
<p>掌握好上面幾點，就差不多可以開始挑選CAD的題目，慢慢嘗試，遇到問題就看文件、不行就問別人，只要沒有本身的bug，基本上CAD的開發應該可以完成80%的工作流程，搭配dxf的產出內容，未來轉換也是沒有問題的。</p>
<h2 id="python輸出dxf題外話">💡Python輸出DXF(題外話)</h2>
<p>python的ezdxf套件是我最近在使用streamlit開發時在使用，文件也算是相當詳細，這是一個<strong>單純用python所製作的CSV轉DXF專案</strong>，對於點資料轉成點物件應該有幫助，下載DXF之後只要匯入自己的CAD版本就可以進行後續使用了!</p>
<p><a href="https://csv2dxf.streamlit.app/">🔗CSV轉DXF-Streamlit</a></p>
]]></content>
      <categories>
        <category>基本概念</category>
      </categories>
      <tags>
        <tag>AutoCAD VBA</tag>
        <tag>Streamlit</tag>
        <tag>ProgeCAD VBA</tag>
      </tags>
  </entry>
  <entry>
    <title>VBA自學心得</title>
    <url>/posts/3619695554/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<p>因為工作的緣故，日常會接觸大量的Excel操作，過程不外乎都是一些<strong>重複又無趣</strong>的動作，也讓我起心動念要透過程式碼的方法來解決這些問題，我操作的軟體是Excel，那直接採用ExcelVBA的語言會是最佳的一個路徑。</p>
<p>程式語言終究還是一種與電腦溝通的工具，重點是你有什麼生活中的問題要進行實作，能夠解決問題的語言就是好語言。</p>
<p>以下是我在自學路上的一些心得，與各位做個分享。</p>
<span id="more"></span>
<hr />
<h2 id="自學心態">💭自學心態</h2>
<blockquote>
<p>自學必須要有目標，達成目標之後才會有成就感。</p>
</blockquote>
<p>想當初在學階段，學習新的事物其實並不了解是為了什麼，僅認知到是為了考試而讀書，也因此學完的東西沒有被<strong>應用</strong>，久而久之就還給老師了。</p>
<p>出社會的時候，生活上有各式各樣的問題等待被解決，而此時的目標便是<strong>找出解決問題的答案</strong>，無論是實體書、線上課程或網路上的資源，學習資源一直都有，此外還需要具備<strong>足夠探索的時間</strong>，否則在交卷期程的壓力下，你肯定會土法煉鋼趕緊交差了事。</p>
<ul>
<li>找出生活中的應用目標</li>
<li>設定足夠找答案的時間</li>
</ul>
<h3 id="找尋應用目標">找尋應用目標</h3>
<p>可以先朝著<strong>很常碰到</strong>、<strong>每次都花很多時間</strong>的方向去找題目，VBA的主要功能就是簡化流程、處理大量的重複性問題，包含資料的建檔、匯入、輸出報表...等，一個專案只要可以遵循20/80法則，先處理80%的麻煩事，對於整個專案的執行就會輕鬆很多了!</p>
<hr />
<h2 id="基本技巧">🎯基本技巧</h2>
<p>程式碼只是一種溝通語言，不需要把整本字典拿出來一字一句去背，只需要挑選對你有幫助的語法來組成<strong>剛好</strong>可以解決你的問題的內容就好，對於VBA來說大部分的內容網路上都會有說明，以下會建議學習順序與參考資料</p>
<h3 id="資料庫概念">資料庫概念</h3>
<p>在正統資料庫的設計上有所謂<strong>正規化</strong>的概念，目的是將資料庫的內容以最小單元的方式進行，通常是記錄文字內容而已，如有圖片或檔案則以外部連結進行替代。</p>
<h4 id="excel的單元分類">Excel的單元分類</h4>
<ol type="1">
<li>儲存格(cell)</li>
<li>欄(column)、列(row)</li>
<li>工作表(sheet)</li>
<li>活頁簿(workbook)</li>
</ol>
<p>儲存格以每格存放一個資料為原則，<strong>避免跨格合併</strong>的方式進行資料存放。</p>
<h3 id="開發人員環境">開發人員環境</h3>
<p>Excel預設會把開發環境關起來，先把開發環境開起來才有地方寫程式碼。</p>
<p><a
href="https://blog.gtwang.org/windows/excel-vba-programming-hello-world/">VBA環境設定-GT
Wang</a></p>
<h3 id="開發單元">開發單元</h3>
<p>Sub的概念其實就是腳本執行的單元，可以透過按鈕指定巨集執行，也可以透過其他Sub來呼叫(call)執行，此外Function也是類似的概念，不過它還可以額外回傳結果。</p>
<p><a
href="https://blog.gtwang.org/programming/excel-vba-function-and-sub/">Sub
vs Function-GT Wang</a></p>
<h3 id="資料型態">資料型態</h3>
<p>雖然VBA本身不太要求正確的資料型態，算是比較不嚴謹的語言，但了解一下double、string、integer、date、object之間的差異會比較好在程式碼最上層寫下<strong>Option
Explicit</strong>，會使撰寫過程必須要宣告參數的資料型態，有助於達成良好的程式寫作習慣(未來轉換到別的語言比較不會那麼痛苦)。</p>
<p><a
href="https://blog.gtwang.org/programming/excel-vba-programming-variable/">VBA資料型態-GT
Wang</a></p>
<h3 id="邏輯操作">邏輯操作</h3>
<p>腳本執行過程通常會有條件判斷跟迴圈循環，根據實際需求演算，看範例才會清楚，不外乎就是
if else、for i=1 to n、do loop ...
等。此外關於如何加減乘除、等於不等於之類的運算子也是會被參雜在其中，這也是必須要知道的。</p>
<p><a
href="https://blog.gtwang.org/programming/excel-vba-programming-operators/">VBA運算子-GT
Wang</a></p>
<p><a
href="https://blog.gtwang.org/programming/excel-vba-programming-if-then-else-condition/">VBA條件判斷-GT
Wang</a></p>
<p><a
href="https://blog.gtwang.org/programming/excel-vba-programming-loop/">VBA迴圈控制-GT
Wang</a></p>
<h3 id="除錯技巧">除錯技巧</h3>
<p>程式撰寫過程必須要知道所設定的參數是不是有如想像中的執行，因此學會利用debug.print及查看區域變數視窗是最基本的要求，爾後再導入單元測試的概念即可。</p>
<p><a href="https://ithelp.ithome.com.tw/articles/10157214">Excel
VBA的眉眉角角-除錯技巧</a></p>
<h3 id="介面操作">介面操作</h3>
<p>對於使用者而言，透過按按鈕來執行程式碼非常直觀，經過多年的使用習慣大部分的操作介面都是如此，若是在比較古老的程式也許會使用菜單進行。</p>
<p>按鈕可以出現在工作表也可以在表單(Userform)，工作表本身也可以算是一個介面，很多人也會使用這樣的設計方法，在工作表上面按按鈕去執行相對應流程，然而表單的使用比較可以讓使用者照著自己的流程進行，不會跳來跳去</p>
<blockquote>
<p>表單屬於比較進階的部分，先讓程式可以按按鈕執行就好</p>
</blockquote>
<p><a
href="https://blog.gtwang.org/programming/excel-vba-programming-create-button-and-macro/">VBA按鈕執行-GT
Wang</a></p>
<h3 id="發布方式">發布方式</h3>
<p>程式寫完之後，在本機可以直接開始使用通常沒有問題，怕就是會遇到<strong>巨集封鎖</strong>這類的安全性保護機制，對於一般使用者來說，看到這個就會心生疑慮，如果開發者是你可信任的就可以解除封鎖或者加入白名單就好。</p>
<p><a
href="https://vocus.cc/article/64429bebfd89780001e26a23">解除封鎖巨集</a></p>
<p><a
href="https://answers.microsoft.com/zh-hant/msoffice/forum/all/%E9%A1%AF%E7%A4%BA%E5%B7%A8%E9%9B%86%E8%A2%AB/789b5b25-df73-48f8-b8ba-fb5c81faf9c9">加入白名單</a></p>
<h2 id="拆解單元">⚙️拆解單元</h2>
<p>解決問題的方法若能夠進行良好的拆解對於程式碼的撰寫過程會有極大的幫助，也有助於釐清思緒並在次單元的完成過程中獲得滿滿的成就感，每個案子都會有自己的心智圖，每一個分支都有自己要完成的事，光一個產生報表的行為，就能拆解成</p>
<ol type="1">
<li>去哪裡找資料</li>
<li>收到資料要如何篩選</li>
<li>篩選資料要如何排序</li>
<li>排序完要放入報表</li>
<li>報表產出是什麼格式</li>
</ol>
<blockquote>
<p>程式碼就是一連串的小流程，不斷的堆疊而成的專案</p>
</blockquote>
<p>不要太貪心一次想要完成全部的功能，透過sub或者function把每個階段要做的事情做良好的拆解並完成，比較不會中途放棄，之後在偵錯過程比較好了解哪邊有錯誤。</p>
<hr />
<h2 id="尋找答案">🔎尋找答案</h2>
<blockquote>
<p>尋找答案時，必須要了解如何清楚描述問題，沒有人有辦法回答不明確的內容。</p>
</blockquote>
<h3 id="買書的必要">買書的必要?</h3>
<p>當初我為了學習這項語言買了不下10本工具書，發現其實都大同小異，初學者可以去圖書館找一本順眼的來看基本語法，有範例的那種最好。這一步是為了要讓你確定你喜不喜歡VBA，不建議一開始就花錢。</p>
<p>若是覺得自己真的看得懂的時候，我建議買一本比較新的來當作工具書(畢竟書比較便宜?)，工具書的意義就是<strong>需要</strong>的時候再來查，查個幾次基本上熟悉了，此時也會有一些實作程式碼範例留存在電腦中，等之後遇到同樣的問題就會知道哪邊有寫過，直接複製貼上(?)。</p>
<h3 id="ai時代來臨">AI時代來臨</h3>
<p>AI時代的進步讓上述的流程又能更加精簡，當然上網google找答案還是需要的，有時問AI問題若不夠精確時會產生幻覺，複製貼上的程式碼動不起來就是動不起來，畢竟...程式碼會卡住那就是無效內容，為了讓他100%可以運作有時候還是需要人工介入。</p>
<h3 id="問問題的方法">問問題的方法</h3>
<p>當你為了這項問題努力試著去找答案時發現真的無法解決，只要願意把你的<strong>範例</strong>、<strong>操作步驟</strong>、<strong>爬文內容</strong>給描述清楚，相信還是有願意幫助你的人(畢竟在社會上沒有人有義務回答你的問題，一切都是良心驅使)。</p>
<h4 id="範例">範例</h4>
<p>可以是檔案、截圖、螢幕錄影</p>
<h4 id="操作步驟">操作步驟</h4>
<p>描述完整的操作過程，每一次過程預期會發生什麼事，但現在發生什麼問題</p>
<h4 id="爬文內容">爬文內容</h4>
<p>把目前遇到的問題問AI或Google搜尋，嘗試過哪些方法?</p>
<h2 id="好站連結">好站連結</h2>
<p><a
href="https://www.youtube.com/watch?v=wg3R5LdQ56k&amp;list=PL7enJ2-v6SPm-EHMuRMCG7R7C-vXQugNM">🔗PAPAYA電腦教室-EXCEL基本教學</a></p>
<p><a
href="https://ithelp.ithome.com.tw/articles/10156346">🔗IT邦幫忙-ExcelVBA的眉眉角角</a></p>
<p><a
href="https://blog.gtwang.org/programming/vba/">🔗VBA程式設計-GT.Wang</a></p>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Excel VBA</tag>
      </tags>
  </entry>
  <entry>
    <title>Streamlit打造工程估算系統</title>
    <url>/posts/2910899188/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>工程估算為提報計畫前的必要內容，所提報的概估經費關乎於計畫核定後是否會造成實際所需經費是否足夠、執行率會不會有問題。</p>
</blockquote>
<p>工程估算方法有兩種:材料及類別</p>
<ul>
<li>材料是將單元拆分為鋼筋、模板、混凝土...等等可以從標準斷面計算而得的內容。</li>
<li>類別是將工程拆分為渠道工程、道路工程、橋梁工程...等可以明確分類的內容。</li>
</ul>
<p>本篇文章希望能夠藉由<strong>雲端介面</strong>的操作來達成以下幾點需求</p>
<ol type="1">
<li>工程估算方法將以往的<strong>材料</strong>導向為<strong>類別</strong>。</li>
<li>各類別單元內容計算由程式接手，減少人力調配參數。</li>
<li>輸出報表採用最新版本號，避免各地版本不一造成困擾。</li>
<li>手機也能在工區現場獲得經費估算成果。</li>
</ol>
<span id="more"></span>
<h2 id="工程估算方法">工程估算方法</h2>
<p>工程估算方法不同是目前在處理計畫提報時常常造成提報經費與實際經費有落差的主因，經查發現原來是大多數人都用<strong>材料</strong>作為品項而非用<strong>工程類別</strong>作為品項，導致在估算過程容易忽略道路鋪面、擋土設施這類內容。</p>
<h3 id="估太少">估太少</h3>
<p>設計過程會需要東扣西扣，為了主體工程能夠收尾必須要捨棄掉某些也是很重要的項目。</p>
<h3 id="估太多">估太多</h3>
<p>會被檢討為什麼當初黑白估造成執行率不高，很多人都是因為被刁難過經費不能超過上限，所以就給他用力估下去，造成這樣的結果。</p>
<h2 id="類別計算內容">類別計算內容</h2>
<h3 id="渠道工程版橋工程">渠道工程、版橋工程</h3>
<ul>
<li>給定渠道長寬及長度，回推牆厚及所需鋼筋</li>
<li>給定版橋長寬及座數，回推版厚及所需鋼筋</li>
</ul>
<h3 id="擋土牆">擋土牆</h3>
<ul>
<li>懸臂式擋土牆</li>
<li>重力式擋土牆</li>
</ul>
<h3 id="道路工程版樁工程">道路工程、版樁工程</h3>
<p>分為AC、再生AC、碎石級配、CLSM的各種排列組合，透過新增的方式來逐行增加，也可以進行刪除。</p>
<h3 id="雜項及其他">雜項及其他</h3>
<p>將前述內容加總後乘上<strong>雜項費用係數(預設為0.1)</strong></p>
<h3 id="間接費用">間接費用</h3>
<p>為前幾項的加總後乘上<strong>間接費用係數(預設為0.3)</strong>，這部分包含職安、環保、廠商利潤、工程管理費等</p>
<h2 id="輸出報表">輸出報表</h2>
<p>工作時如有需要輸出報表的時候，不外乎會採用word或者excel之類的工具，當版本有更新的時候會需要請同事重新下載使用，並在報表的某處壓一個<strong>版本號</strong>作為辨識，然而往往頒布適用的時候，還是會有不少同事以舊的版本提送報表。</p>
<p>為解決上述版本差異問題，這次選擇利用雲端網頁作為可<strong>及時更新</strong>的報表輸出媒介，一旦計算規則改變或報表格式變化就能夠在同事輸入完基本資料之後，確保輸出的內容會是正確版的。</p>
<h2 id="實作成果">實作成果</h2>
<figure>
<img src="1.JPG" alt="系統操作流程" />
<figcaption aria-hidden="true">系統操作流程</figcaption>
</figure>
<hr />
<figure>
<img src="2.JPG" alt="工程基本資料" />
<figcaption aria-hidden="true">工程基本資料</figcaption>
</figure>
<hr />
<figure>
<img src="3.JPG" alt="工程施作位置" />
<figcaption aria-hidden="true">工程施作位置</figcaption>
</figure>
<hr />
<figure>
<img src="4.JPG" alt="工程內容概要" />
<figcaption aria-hidden="true">工程內容概要</figcaption>
</figure>
]]></content>
      <categories>
        <category>專案成果</category>
      </categories>
      <tags>
        <tag>Streamlit</tag>
      </tags>
  </entry>
  <entry>
    <title>批次轉換doc到pdf</title>
    <url>/posts/1066861632/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<ol type="1">
<li><p>交通部的部頒規範下載下來之後會變成很多細碎的檔案，包含PDF跟DOC，在進行檔案內容搜尋的時候時常需要跨檔案比對，無法在<strong>同個檔案</strong>中一次到位。</p></li>
<li><p>有些規範有進行修改的內容需要先修改doc後再輸出PDF，乾脆將所有PDF都先進行刪除，後續再針對資料夾批次轉檔成PDF後再做合併。</p></li>
</ol>
<div class="note info"><p>解決目標:將doc修改完畢後輸出為pdf，丟到pdf_merge中進行合併，這實在是很麻煩。</p>
</div>
<p>本篇介紹如何撰寫程式碼來簡化製作<strong>公路橋梁設計規範</strong>的流程，有興趣請繼續閱讀</p>
<span id="more"></span>
<hr />
<h3 id="檔案來源">檔案來源</h3>
<ul>
<li><p>原始檔案下載連結 <img src="1.png"
alt="Fig1.規範下載處" /></p></li>
<li><p>原始檔案下載內容 <img src="2.png"
alt="Fig2.規範下載內容-PDF與DOC" /></p></li>
<li><p>預先處理內容 <img src="3.png"
alt="Fig3.預先刪除所有PDF" /></p></li>
</ul>
<hr />
<h2 id="python的解決方案">👉Python的解決方案</h2>
<h3
id="預計使用工具為docx2pdf進行轉檔">預計使用工具為docx2pdf進行轉檔</h3>
<p><a href="https://pypi.org/project/docx2pdf/">docx2pdf</a></p>
<p>使用時所輸出的內容一直出現空白頁，而且可以接受的內容也只有docx
可能是我還沒研究透徹...?</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> docx2pdf <span class="keyword">import</span> convert</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convert_docx_to_pdf</span>(<span class="params">input_folder, output_folder</span>):</span><br><span class="line">    <span class="comment"># 確保輸入文件夾存在</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(input_folder):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;輸入文件夾不存在！&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 確保輸出文件夾存在</span></span><br><span class="line">    os.makedirs(output_folder, exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍歷輸入文件夾中的所有文件</span></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(input_folder):</span><br><span class="line">        <span class="keyword">if</span> filename.endswith(<span class="string">&quot;.docx&quot;</span>) :<span class="comment">#or filename.endswith(&quot;.doc&quot;):</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;filename&#125;</span> found&quot;</span>)</span><br><span class="line"></span><br><span class="line">            input_path = os.path.join(input_folder, filename)</span><br><span class="line">            output_filename = filename.replace(<span class="string">&quot;.docx&quot;</span>, <span class="string">&quot;.pdf&quot;</span>)</span><br><span class="line">            output_path = os.path.join(output_folder, output_filename)</span><br><span class="line">            <span class="comment"># 將 Word 文件轉換為 PDF</span></span><br><span class="line">            </span><br><span class="line">            convert(input_path, output_path)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;filename&#125;</span> 轉換完成&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    input_folder = <span class="string">r&quot;D:\GoogleDrive-參考手冊\公路橋梁設計規範&quot;</span>  <span class="comment"># 輸入文件夾的路徑</span></span><br><span class="line">    output_folder = <span class="string">r&quot;D:\Python\pdf_output&quot;</span>  <span class="comment"># 輸出文件夾的路徑</span></span><br><span class="line">    convert_docx_to_pdf(input_folder, output_folder)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>後來還是想別的辦法去轉檔。</p>
<hr />
<h2 id="最終選擇">👍最終選擇</h2>
<p>身為忠臣的VBA用戶，如果能夠用VBA處理會是比較得心應手的，突然想起
Excel VBA 本身可以呼叫 Word VBA 執行PDF轉檔。</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&#x27;以下內容來自與ChatGPT之間的對話+我自己稍微修改</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> ConvertDocToPDF()</span><br><span class="line">    <span class="keyword">Dim</span> WordApp <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line">    <span class="keyword">Dim</span> WordDoc <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line">    <span class="keyword">Dim</span> FolderPath <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    <span class="keyword">Dim</span> FileName <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    <span class="keyword">Dim</span> PDFFileName <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; ?置 Word ?用?象</span></span><br><span class="line">    <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line">    <span class="keyword">Set</span> WordApp = GetObject(, <span class="string">&quot;Word.Application&quot;</span>)</span><br><span class="line">    <span class="keyword">If</span> WordApp <span class="built_in">Is</span> <span class="literal">Nothing</span> <span class="keyword">Then</span></span><br><span class="line">        <span class="keyword">Set</span> WordApp = CreateObject(<span class="string">&quot;Word.Application&quot;</span>)</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">GoTo</span> <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; ?置 Word ?用?不可?</span></span><br><span class="line">    WordApp.Visible = <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; ?置文件?路?</span></span><br><span class="line">    FolderPath = <span class="string">&quot;D:\GoogleDrive-參考手冊\公路橋梁設計規範&quot;</span> <span class="comment">&#x27; 更改?你的文件?路?</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; 遍?文件?中的所有 Word 文件</span></span><br><span class="line">    FileName = Dir(FolderPath &amp; <span class="string">&quot;\*.doc*&quot;</span>)</span><br><span class="line">    <span class="keyword">Do</span> <span class="keyword">While</span> FileName &lt;&gt; <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="comment">&#x27; 打? Word 文?</span></span><br><span class="line">        <span class="keyword">Set</span> WordDoc = WordApp.Documents.Open(FolderPath &amp; <span class="string">&quot;\&quot;</span> &amp; FileName)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">&#x27; 构建 PDF 文件名</span></span><br><span class="line">        PDFFileName = Replace(FolderPath &amp; <span class="string">&quot;\&quot;</span> &amp; FileName, <span class="string">&quot;.doc&quot;</span>, <span class="string">&quot;.pdf&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">&#x27; 保存? PDF</span></span><br><span class="line">        WordDoc.ExportAsFixedFormat OutputFileName:=PDFFileName, ExportFormat:=<span class="number">17</span> <span class="comment">&#x27; 17 表示 PDF 格式</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&#x27; ?? Word 文?</span></span><br><span class="line">        WordDoc.Close <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&#x27; ??下一?文件</span></span><br><span class="line">        FileName = Dir</span><br><span class="line">    <span class="keyword">Loop</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; ?? Word ?用</span></span><br><span class="line">    WordApp.Quit</span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27; ?放?象</span></span><br><span class="line">    <span class="keyword">Set</span> WordDoc = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> WordApp = <span class="literal">Nothing</span></span><br><span class="line">    </span><br><span class="line">    MsgBox <span class="string">&quot;列印完成！&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr />
<h3 id="暫時結果">暫時結果</h3>
<p>經過轉檔之後，原本是doc或docx的檔案都會依照原本名稱變成pdf的副檔名</p>
<p>下一步就是要進行<strong>pdf合併了</strong>!!</p>
<figure>
<img src="4.png" alt="Fig4.暫時生成結果" />
<figcaption aria-hidden="true">Fig4.暫時生成結果</figcaption>
</figure>
<hr />
<h3 id="列印順序">列印順序</h3>
<p>因為PDF文件的名稱不一定是我所需要的順序</p>
<p>希望能夠依循下列步驟</p>
<ol type="1">
<li>列出該檔案夾中的檔案名稱順序成為CSV檔案</li>
<li>根據我所指定的順序進行選取合併</li>
</ol>
<hr />
<h4 id="生成csv順序">生成CSV順序</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_pdf_files_to_csv</span>(<span class="params">input_folder, output_csv</span>):</span><br><span class="line">    <span class="comment"># 打开 CSV 文件以写入模式</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_csv, <span class="string">&quot;w&quot;</span>, newline=<span class="string">&#x27;&#x27;</span>, encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>) <span class="keyword">as</span> csv_file:</span><br><span class="line">        <span class="comment"># 创建 CSV writer 对象</span></span><br><span class="line">        csv_writer = csv.writer(csv_file)</span><br><span class="line">        csv_writer.writerow([<span class="string">&#x27;順序&#x27;</span>,<span class="string">&#x27;檔案名稱&#x27;</span>,<span class="string">&#x27;檔案路徑&#x27;</span>])</span><br><span class="line">        order=<span class="number">1</span></span><br><span class="line">        <span class="comment"># 遍历输入文件夹中的所有文件</span></span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(input_folder):</span><br><span class="line">            <span class="comment"># 检查文件名是否以 &quot;.pdf&quot; 结尾</span></span><br><span class="line">            <span class="keyword">if</span> filename.lower().endswith(<span class="string">&quot;.pdf&quot;</span>):</span><br><span class="line">                <span class="comment"># 将文件信息写入 CSV 文件</span></span><br><span class="line">                file_path = os.path.join(input_folder, filename)</span><br><span class="line">                csv_writer.writerow([order,filename, file_path])</span><br><span class="line">                <span class="comment"># 更新顺序号</span></span><br><span class="line">                order += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    input_folder =<span class="string">r&quot;D:\GoogleDrive-參考手冊\公路橋梁設計規範&quot;</span>  <span class="comment"># 输入文件夹的路径</span></span><br><span class="line">    output_csv = <span class="string">r&quot;D:\Python\pdf_doc\pdf_files.csv&quot;</span>  <span class="comment"># 输出 CSV 文件的路径</span></span><br><span class="line">    list_pdf_files_to_csv(input_folder, output_csv)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>生成之後可以藉由Excel的幫助進行順序排序，再另存為csv檔案的格式就可以備用。</p>
<h4 id="根據csv順序進行合併">根據CSV順序進行合併</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">from</span> PyPDF2 <span class="keyword">import</span> PdfMerger</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_csv_to_pdf_files</span>(<span class="params">csv_file</span>):</span><br><span class="line">    pdf_files = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打开 CSV 文件并读取内容</span></span><br><span class="line">    <span class="comment">#with open(csv_file, &quot;r&quot;, newline=&#x27;&#x27;,errors=&#x27;replace&#x27;) as file:#有出現問題的話用這行</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(csv_file, <span class="string">&quot;r&quot;</span>, newline=<span class="string">&#x27;&#x27;</span>,encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>) <span class="keyword">as</span> file:<span class="comment">#全新虛擬環境用這行</span></span><br><span class="line">        reader = csv.reader(file)</span><br><span class="line">        <span class="built_in">next</span>(reader)  <span class="comment"># 跳过标题行</span></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">            order = row[<span class="number">0</span>]<span class="comment">#第一列是顺序</span></span><br><span class="line">            filename = row[<span class="number">1</span>]  <span class="comment"># 第二列是文件名</span></span><br><span class="line">            pdf_path = row[<span class="number">2</span>]  <span class="comment"># 第三列是 PDF 文件的绝对路径</span></span><br><span class="line">            pdf_files.append((order, filename, pdf_path))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pdf_files</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge_pdfs_directly</span>(<span class="params">pdf_files,output_folder</span>):</span><br><span class="line">    <span class="comment"># 创建一个 PdfMerger 对象</span></span><br><span class="line">    merger = PdfMerger()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历列表中的每个元素 這個不能亂改會報錯</span></span><br><span class="line">    <span class="keyword">for</span> order, filename,pdf_path <span class="keyword">in</span> pdf_files:</span><br><span class="line">        <span class="comment"># 将 PDF 文件添加到合并器中</span></span><br><span class="line">        merger.append(pdf_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 确保输出文件夹存在</span></span><br><span class="line">    os.makedirs(output_folder, exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将合并后的 PDF 保存到文件</span></span><br><span class="line">    output_path = os.path.join(output_folder, <span class="string">&quot;merged_pdf.pdf&quot;</span>)</span><br><span class="line">    merger.write(output_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关闭合并器</span></span><br><span class="line">    merger.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    csv_file = <span class="string">r&quot;D:\Python\pdf_doc\pdf_files.csv&quot;</span>  <span class="comment"># CSV 文件的路径</span></span><br><span class="line">    pdf_files = read_csv_to_pdf_files(csv_file)</span><br><span class="line">    output_folder = <span class="string">r&quot;D:\Python\pdf_doc&quot;</span>  <span class="comment"># 输出文件夹的路径</span></span><br><span class="line">    merge_pdfs_directly(pdf_files,output_folder)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="最終成果">最終成果</h4>
<div class="note success"><p>藉由vba的轉檔及python的合併處理成的檔案，總共有432頁的PDF <span
class="github-emoji" data-alias="link" style=""
data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span>
<a
href="https://1drv.ms/b/s!AvmbvZ-TA-bAgpsFgHAua545ujNtnw?e=57r41J">🔗完整版-公路橋梁設計規範成果下載</a></p>
</div>
<hr />
<h2 id="開發過程的問題">👻開發過程的問題</h2>
<p>操作CSV的過程曾經出現一些奇怪的問題，記錄一下比較不會忘記</p>
<h3
id="檔案名稱為中文要收集匯入csv檔案的時會變成亂碼">檔案名稱為中文，要收集匯入csv檔案的時會變成亂碼</h3>
<p>需要將編碼由<strong>utf-8</strong>改為<strong>utf-8-sig</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(output_csv, <span class="string">&quot;w&quot;</span>, newline=<span class="string">&#x27;&#x27;</span>, encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>) <span class="keyword">as</span> csv_file: </span><br></pre></td></tr></table></figure>
<p><a
href="https://blog.csdn.net/weixin_46640900/article/details/110602702">CSDN參考</a></p>
<h3
id="要將csv的內容匯入到python進行後續運用時會出現unicodedecodeerror">要將CSV的內容匯入到python進行後續運用時會出現'UnicodeDecodeError'</h3>
<p>將原本的讀取內容中的<strong>encoding</strong>換成
<strong>errors='replace'</strong> 即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;some.csv&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  reader = csv.reader(f)</span><br><span class="line">  <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;some.csv&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>, errors=<span class="string">&#x27;replace&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">   reader = csv.reader(f)</span><br><span class="line">   <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br></pre></td></tr></table></figure>
<p><a
href="https://stackoverflow.com/questions/12752313/unicodedecodeerror-in-python-3-when-importing-a-csv-file">Stack
overflow參考資料</a></p>
<h3
id="開啟一個全新的環境要將csv的內容匯入到python進行後續運用時會出現">開啟一個全新的環境，要將CSV的內容匯入到python進行後續運用時會出現</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">FileNotFoundError: [Errno <span class="number">2</span>] No such file <span class="keyword">or</span> directory: <span class="string">&#x27;D:\\GoogleDrive-������������\\��祈楝璈�璇�閮剛��閬� 蝭�\\蝚砌��蝡� 蝮賢��1090103.pdf</span></span><br></pre></td></tr></table></figure>
<p>原本第二點可以解決編譯問題的程式碼調整 errors='replace'
已經無法作用，我把encoding='utf-8-sig'重新加上去，然後就好了(?)</p>
<blockquote>
<p>猜測是新的環境中還沒有預設的encoding，所以中文還沒有辦法被知道要怎麼編譯。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;some.csv&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>, encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  reader = csv.reader(f)</span><br><span class="line">  <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>ExcelVBA</tag>
      </tags>
  </entry>
  <entry>
    <title>監造報表-數量計算-引用來源</title>
    <url>/posts/3212778286/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<p>工程價格資料庫作業辦法有明定，新台幣1000萬元以上之<strong>公共工程</strong>於決標日起30日內必須將資料傳輸到主管機關，資料內容:</p>
<ol type="1">
<li>得標廠商之契約單價</li>
<li>經機關核定之預算單價</li>
<li>其他經主管機關指定者</li>
</ol>
<p>包含詳細價目表、單價分析表及資源統計表。</p>
<p>最容易達成的方式便是透過公共工程經費電腦估價系統(PCCES)進行預算書與契約編制。</p>
<p>因為大家都使用同一套系統，那麼輸出格式就能夠通用，後續要將契約內容彙整到公司內部所開發的報表系統只需要做一次工就可以了，然而非公共工程的內容會就因為個案不同而需要做細微調整。</p>
<span id="more"></span>
<h2 id="預算書範例">📔預算書範例</h2>
<p>一般在公共工程設計階段，需要製作以下表格</p>
<ol type="1">
<li>預算總表</li>
<li>預算詳細表</li>
<li>預算單價分析表</li>
<li>預算資源統計表(一定規模才要)</li>
</ol>
<p>承攬廠商得標後，契約項目、數量、單位基本上會按照設計階段內容，僅單價部分會依照標比進行調整。</p>
<blockquote>
<p>成立契約後所得到的內容便是後續辦理數量填寫、變更設計、估驗計價等程序的依據。</p>
</blockquote>
<h3 id="公共工程">公共工程</h3>
<p>大多都是採用公共工程經費電腦估價系統(PCCES)進行，以編碼正確率40%為推動目標並加以列管，若是用前人留下來的Excel進行<strong>模仿</strong>，通常都比較會難以達成最低編碼正確率的要求，建議還是學習PCCES如何使用比較好。</p>
<p>在將項目移轉至內部報表的過程，會遇到欄位名稱比較長的出現<strong>跳列</strong>的情況，此時要將項目搬移至內部報表系統時會需要做先行處理，否則會有項目名稱不完整的狀況，而這通常會在日後會出現一些問題，先行處理雖然麻煩但還是不可免。</p>
<figure>
<img src="upload_33eb45717c5bc11304ad3865fbf5d446.png"
alt="Fig2.契約項目跳列" />
<figcaption aria-hidden="true">Fig2.契約項目跳列</figcaption>
</figure>
<h3 id="非公共工程">非公共工程</h3>
<p>非公共工程雖然未強制要求編碼正確率，因此所輸出的預算書格式比較會千奇百怪，但通常也是不脫離公共工程的基本概念，有關契約總表、契約詳細表、契約單價分析表通常都會出現。</p>
<p>在將項目移轉至內部報表的過程，當然也可以用手動的方式把資料PASS到內部報表系統上面，但若像是建築工程有幾百幾千項的，建議透過VBA進行處理會比較理想，只要是Excel應該都有機會找出編製的脈絡進行程式撰寫，這就需要看個案而定，找出契約上的規律，透過迴圈、判別式一一找出脈絡並進行項目萃取。</p>
<h2 id="契約項目">契約項目</h2>
<p>在監造報表上要執行數量計算時，為控制報表長度，通常會以<strong>契約詳細表</strong>中的內容為主，其中會有以下幾種型態</p>
<blockquote>
<p>可量化型態</p>
</blockquote>
<p>鋼筋(Unit=T)、模板(Unit=m2)、混凝土(Unit=m3)...等具備明確單位、可被量化且編列於詳細表上的內容</p>
<blockquote>
<p>一式型態</p>
</blockquote>
<p>因特定工程項目之價格或數量編列不易，無法以明確單位加以計量，難以估計的內容會以概估的方式給定一式的費用，例如擋抽排水費</p>
<blockquote>
<p>百分比型態</p>
</blockquote>
<p>環境保護費、職業安全衛生費、品管作業費、廠商管理費、營業稅...等，依據預算編列內容後經換算比例而得到的費用。</p>
<h2 id="匯入內容">匯入內容</h2>
<h3 id="xml">XML</h3>
<p>PCCES可以輸出XML或XLS</p>
<p>XML是一種半結構化資料，以&lt;...&gt;開始、&lt;/...&gt;結束，中間所夾的內容有屬性(attribute)跟文字(text)，屬性為一健值對，可針對屬性值進行操作，也可針對文字進行使用。</p>
<blockquote>
<p>節錄自PCCES產出的XML檔案</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">PayItem</span> <span class="attr">itemKey</span>=<span class="string">&quot;7&quot;</span> <span class="attr">itemNo</span>=<span class="string">&quot;一&quot;</span> <span class="attr">refItemCode</span>=<span class="string">&quot;       &quot;</span> <span class="attr">itemKind</span>=<span class="string">&quot;mainItem&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Description</span> <span class="attr">language</span>=<span class="string">&quot;zh-TW&quot;</span>&gt;</span>主體工程<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Description</span> <span class="attr">language</span>=<span class="string">&quot;en&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Unit</span> <span class="attr">language</span>=<span class="string">&quot;zh-TW&quot;</span>&gt;</span>          <span class="tag">&lt;/<span class="name">Unit</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Unit</span> <span class="attr">language</span>=<span class="string">&quot;en&quot;</span>&gt;</span>          <span class="tag">&lt;/<span class="name">Unit</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Quantity</span>&gt;</span>1<span class="tag">&lt;/<span class="name">Quantity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Price</span> <span class="attr">fixed</span>=<span class="string">&quot;false&quot;</span> <span class="attr">calculateDecimal</span>=<span class="string">&quot;0&quot;</span>&gt;</span>11824021<span class="tag">&lt;/<span class="name">Price</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Amount</span> <span class="attr">fixed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">calculateDecimal</span>=<span class="string">&quot;0&quot;</span>&gt;</span>11824021<span class="tag">&lt;/<span class="name">Amount</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Remark</span>&gt;</span>[發包]<span class="tag">&lt;/<span class="name">Remark</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Percent</span>&gt;</span>0<span class="tag">&lt;/<span class="name">Percent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">PayItem</span> <span class="attr">itemKey</span>=<span class="string">&quot;15&quot;</span> <span class="attr">itemNo</span>=<span class="string">&quot;1&quot;</span> <span class="attr">refItemCode</span>=<span class="string">&quot;02300C00</span></span></span><br><span class="line"><span class="string"><span class="tag"></span></span></span><br></pre></td></tr></table></figure>
<h3 id="xls">XLS</h3>
<p>XLS就是指Excel的活頁簿，大家應該很常見，不多做解釋。</p>
<h3 id="pcces契約項目後處理">PCCES契約項目後處理</h3>
<p>跟眾多網友交流下來，發現最多人在使用監造報表VBA或施工日誌VBA時都是卡在契約項目的建立，當契約項目無法正常建立時，確實對於整個報表就會是一大阻礙，因此我針對<strong>公共工程</strong>的預算書有做了一個後處理的轉換工具(XML到XLS)，之後再將轉換所得的資料貼到自訂的VBA工具即可正常使用。</p>
<p>詳情請參考 <a
href="https://hankvba.blogspot.com/2024/02/excel-vba-pcces.html">ExcelVBA@PCCES契約項目後處理工具</a></p>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Excel VBA</tag>
        <tag>監造報表</tag>
      </tags>
  </entry>
  <entry>
    <title>監造報表-數量計算-數量填寫</title>
    <url>/posts/2699779571/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<p>監造報表的數量填寫為<strong>施工紀錄</strong>時最重要的基本功，填寫方式可分為以儲存格填寫、使用者表單填寫，如果掌管工地現場的工地主任對資訊比較不了解的，也很有可能會將內容寫在紙本或白板上拍照上傳群組回報，再由內業工程人員進行資料登打，無論哪種方式，填寫內容都還是以契約項目為依據，只在數量部分做琢磨而已。</p>
<p>契約項目以可量化型態、一式型態、百分比型態為主，這部分請參考前文，不再另外闡述，本篇內容主要介紹填寫時透過<strong>單元</strong>的概念進行<strong>組合項目</strong>的過程，當內容以單元進行時，除了工地主任的回報會比較明確，同時也可以針對單元的進行輔以相對的檢核機制與防呆機制，會省下很多麻煩。</p>
<span id="more"></span>
<h2 id="填寫方式">✒️填寫方式</h2>
<h3 id="儲存格填寫">儲存格填寫</h3>
<p>儲存格可能是文字、數字、日期...等，除非有先修改儲存格格式，否則他會根據當下的狀況自動判斷要以哪種方式存在，這通常會造成一些奇怪的問題，例如原本輸入日期2023/2/5顯示卻變成44962，還有輸入手機號碼的時候，最前面的0會被去掉，此時就需要將數字變成字串(在手機號碼最前面打上')才能正確顯示。</p>
<p>即便可以將儲存格的格式問題排除，建議複雜資料還是<strong>不要讓使用者直接用儲存格進行填寫</strong>，你永遠不知道使用者他們會怎麼亂給資料，後續的資料再利用會有很多限制。</p>
<h3 id="使用者表單填寫">使用者表單填寫</h3>
<p>使用者表單為VBA所提供的介面，透過拖曳的方式將控制項放入表單畫面，並且針對各控制項的事件進行邏輯判斷與後續處理，需要一點VBA的基本功才有辦法掌握，以下介紹用的到的控制項、事件名稱、用途說明，關於使用者表單的教學再另開一篇專文說明。</p>
<table>
<thead>
<tr class="header">
<th>控制項目</th>
<th>用途說明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Lable</td>
<td>顯示內容</td>
</tr>
<tr class="even">
<td>TextBox</td>
<td>提供使用者填寫內容</td>
</tr>
<tr class="odd">
<td>ComboBox</td>
<td>提供既有內容讓使用者選擇</td>
</tr>
<tr class="even">
<td>CheckBox</td>
<td>註記功能是否進行</td>
</tr>
<tr class="odd">
<td>CommandButton</td>
<td>執行功能</td>
</tr>
</tbody>
</table>
<p>好處是可以有效控制使用者填寫內容的正確性，後續資料再利用時比較不會有困擾，盡可能在收集複雜資料的過程都採用這種方式，<strong>簡單資料</strong>還是可以透過直接填寫儲存格完成沒有關係。</p>
<figure>
<img src="2.png" alt="Fig1. 填寫施作資料介面" />
<figcaption aria-hidden="true">Fig1. 填寫施作資料介面</figcaption>
</figure>
<h3 id="紙本填寫">紙本填寫</h3>
<p>當工程資料大多都以紙本進行時，如果要進行統計分析時會消耗很多人力，這也是為什麼EXCEL這類的試算表會被發展出來的原因，也因此紙本資料轉換對於資料電腦化會是一件很痛苦的事情，每次的資料搬遷都可能會有資料丟失跟資料誤繕的可能，但營建產業這樣的情況可說是很常見。</p>
<p>對於不太會使用電腦的工地人員而言，人人有一隻有網路的手機，也是滿合情合理的，只要有網路就可以<strong>將手機作為表單的填寫媒介</strong>先送到雲端上面，再由內業人員將資料彙整出來，字太小可以用平板電腦克服，甚至用響應式網站的方式進行調整，資料能夠減少一次搬遷對於後續都會是一件好事。</p>
<figure>
<img src="3.png" alt="Fig2. Google表單+Sheets" />
<figcaption aria-hidden="true">Fig2. Google表單+Sheets</figcaption>
</figure>
<h2 id="契約項目">📔契約項目</h2>
<h3 id="一般項目">一般項目</h3>
<p>透過直接採用契約項目之可量化型態、一式型態進行填寫，百分比型態則後續報表產製時根據比例進行換算。</p>
<p><a
href="https://www.hanksvba.com/posts/3212778286/">監造報表-數量計算-引用來源</a></p>
<h3 id="組合項目">組合項目</h3>
<p>在進行經費估算時，數量計算表的產製為降低錯誤，通常會給圖說上出現的組合構件進行編號，對於帶狀工程則會有每進行米的概念，因為不管在哪個樁號其實都長得差不多，只要算出每進行米有多少材料，計算時乘上總長度即可得到答案。</p>
<blockquote>
<p>單元構件</p>
</blockquote>
<p>建築工程常見的構件是柱梁板牆，橋梁工程常見的構件是墩柱、節塊，<strong>單元</strong>可以自行定義，主要是為了方便撿料及工班說明而已。</p>
<blockquote>
<p>每進行米</p>
</blockquote>
<p>灌溉排水工程會以矩型溝作為每進行米的撿料標準，道路工程則會以鋪面剖面或擋土構造物(重力式擋土牆、懸臂式擋土牆...等)為每進行米的撿料標準，整體會考慮漸變段，採用平均值計算，工程細節如要再進行拆分，則又會分成襯底、渠底、鋼筋組立、左右牆身...等進行每進行米的填寫依據。</p>
<h2 id="檢核機制">☑️檢核機制</h2>
<p>將圖面內容轉為單元去進行分析，最大的好處就是可以進行單元統計了解與數量計算表之間的差異、透過計算樁號區段繪製條狀圖理解目前施工工序及預測下階段施作樁號、達成樁號重覆填寫的防呆，更重要的是藉由工項更正可以批次調整已經紀錄的內容，即時修正單元的數量計算。</p>
<h3 id="單元統計">單元統計</h3>
<p>當發生單元填寫完畢卻與契約數量不符時，可以使用單元統計，先將所有單元名稱材料進行<strong>總計</strong>，確認契約數量與單元統計總計所得之總數量是否相符，如果不相符則是當初在切分單元的時候就已經存在錯誤。</p>
<p>確定是切分單元的時候的錯誤後，可以根據不同單元名稱作為分類，將該<strong>合計</strong>內容總數量與數量計算表的相關工項名稱<strong>逐行列表</strong>進行比對，從最小單元進行錯誤查找，通常都會抓到一些問題，可以進行後續的工項更正。</p>
<figure>
<img src="4.png" alt="Fig3. 單元統計範例" />
<figcaption aria-hidden="true">Fig3. 單元統計範例</figcaption>
</figure>
<h3 id="工項更正">工項更正</h3>
<p>工項更正則是利用單元名稱於施工紀錄表上的註記，將正確的單元材料回推至施工紀錄表上的數量，藉此更新資訊並提示使用者更正明細。</p>
<p>有些內業人員會擔心工項更正後會影響已經製作的日報內容，希望可以透過錯誤暫存的方式，在未來填寫新的日報時做些微的增刪來調整，要點選這顆按鈕時要慎思，當然也可以在工程剛開始就先全部紀錄上去試試，有發現與契約數量不符時馬上更正，但若是遇到變更設計就沒轍，變更設計還是有可能會更改到單元材料。</p>
<figure>
<img src="8.jpg" alt="Fig4. 工項更正範例" />
<figcaption aria-hidden="true">Fig4. 工項更正範例</figcaption>
</figure>
<h3 id="條狀圖查看">條狀圖查看</h3>
<p>透過施工進程的拆分、進行樁號區間的繪製，搭配樁號防呆機制，能夠有效檢核施工進程的合理性，通常以灌溉排水工程為例，工序為襯底&gt;鋼筋組立&gt;大底&gt;左右牆身，此外因應施工規範要求需要以隔段施工進行，並預留模板拆除時間，從施工進度條狀圖上所登載的日期與單元名稱便可掌握整體施工順序。</p>
<figure>
<img src="6.png" alt="Fig5. 條狀圖範例" />
<figcaption aria-hidden="true">Fig5. 條狀圖範例</figcaption>
</figure>
<h3 id="樁號防呆">樁號防呆</h3>
<p>帶狀工程最容易出現的問題就是重複紀錄樁號區間，在單元統計的時只能知道目前總長度為多少，但卻無法知道區間是否重疊，尤其當工序相當複雜時，沒有將區間進行可視化更是難以判別，因此最方便的方式便是在<strong>填寫樁號</strong>時就先判定是否有重複，重複的原因可能是起始樁號位於既設樁號區間(A)、結束樁號位於既設樁號區間(B)、起訖樁號包含既設樁號區間(C)。</p>
<figure>
<img src="7.jpg" alt="Fig6. 樁號區間衝突情境" />
<figcaption aria-hidden="true">Fig6. 樁號區間衝突情境</figcaption>
</figure>
<blockquote>
<p>程式碼運作上會先把樁號轉成數字再進行區間判斷，節錄自我的Github</p>
</blockquote>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">Function</span> TranLoc(<span class="keyword">ByVal</span> Data <span class="keyword">As</span> <span class="type">String</span>) <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;樁號型態轉成可計算之樁號</span></span><br><span class="line"></span><br><span class="line">tmp = split(Data, <span class="string">&quot;+&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> UBound(tmp) = -<span class="number">1</span> <span class="built_in">Or</span> Data = <span class="string">&quot;&quot;</span> <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Function</span> <span class="comment">&#x27; TranLoc = CDbl(Data): Exit Function</span></span><br><span class="line"></span><br><span class="line">tloc = tmp(<span class="number">0</span>) <span class="comment">&#x27;千位數</span></span><br><span class="line">dloc = tmp(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> dloc <span class="built_in">Like</span> <span class="string">&quot;*(*&quot;</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    tmp2 = split(dloc, <span class="string">&quot;(&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> tmp2(<span class="number">0</span>) <span class="built_in">Like</span> <span class="string">&quot;*.*&quot;</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">        tmp3 = split(tmp2(<span class="number">0</span>), <span class="string">&quot;.&quot;</span>)</span><br><span class="line">        dloc = tmp3(<span class="number">0</span>) + tmp3(<span class="number">1</span>) / <span class="number">10</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">    </span><br><span class="line">        dloc = tmp2(<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> dloc &gt; <span class="number">1000</span> <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> Len(tloc)</span><br><span class="line"></span><br><span class="line">    loc_ch = <span class="keyword">mid</span>(tloc, i, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">If</span> IsNumeric(loc_ch) <span class="keyword">Then</span> ref = ref &amp; loc_ch</span><br><span class="line"></span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">TranLoc = <span class="built_in">CDbl</span>(ref) * <span class="number">1000</span> + <span class="built_in">CDbl</span>(dloc)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> IsRecLocPass(<span class="keyword">ByVal</span> rec_loc <span class="keyword">As</span> <span class="type">String</span>, <span class="keyword">ByVal</span> item_loc <span class="keyword">As</span> <span class="type">String</span>) <span class="comment">&#x27;, ByVal r As Integer)</span></span><br><span class="line"></span><br><span class="line">IsRecLocPass = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> myfunc <span class="keyword">As</span> <span class="built_in">New</span> clsMyfunction</span><br><span class="line"></span><br><span class="line">tmp = split(rec_loc, <span class="string">&quot;~&quot;</span>)</span><br><span class="line"></span><br><span class="line">rec_sloc = myfunc.TranLoc(tmp(<span class="number">0</span>))</span><br><span class="line">rec_eloc = myfunc.TranLoc(tmp(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">tmp2 = split(item_loc, <span class="string">&quot;~&quot;</span>)</span><br><span class="line"></span><br><span class="line">item_sloc = myfunc.TranLoc(tmp2(<span class="number">0</span>))</span><br><span class="line">item_eloc = myfunc.TranLoc(tmp2(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> item_sloc &gt;= rec_sloc <span class="built_in">And</span> item_sloc &lt; rec_eloc <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    err_prompt = <span class="string">&quot;第&quot;</span> &amp; r &amp; <span class="string">&quot;列衝突=&gt;紀錄起點【&quot;</span> &amp; tmp2(<span class="number">0</span>) &amp; <span class="string">&quot;】已包含於本次填報【&quot;</span> &amp; rec_loc &amp; <span class="string">&quot;】&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> err_prompt &lt;&gt; <span class="string">&quot;&quot;</span> <span class="keyword">Then</span> p = p &amp; err_prompt &amp; vbNewLine</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> item_eloc &gt; rec_sloc <span class="built_in">And</span> item_eloc &lt;= rec_eloc <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    err_prompt = <span class="string">&quot;第&quot;</span> &amp; r &amp; <span class="string">&quot;列衝突=&gt;紀錄終點【&quot;</span> &amp; tmp2(<span class="number">1</span>) &amp; <span class="string">&quot;】已包含於本次填報【&quot;</span> &amp; rec_loc &amp; <span class="string">&quot;】&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> err_prompt &lt;&gt; <span class="string">&quot;&quot;</span> <span class="keyword">Then</span> p = p &amp; err_prompt &amp; vbNewLine</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> rec_sloc &gt;= item_sloc <span class="built_in">And</span> rec_sloc &lt; item_eloc <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    err_prompt = <span class="string">&quot;第&quot;</span> &amp; r &amp; <span class="string">&quot;列衝突=&gt;填報起點【&quot;</span> &amp; tmp(<span class="number">0</span>) &amp; <span class="string">&quot;】已包含於舊有紀錄【&quot;</span> &amp; item_loc &amp; <span class="string">&quot;】&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> err_prompt &lt;&gt; <span class="string">&quot;&quot;</span> <span class="keyword">Then</span> p = p &amp; err_prompt &amp; vbNewLine</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> rec_eloc &gt; item_sloc <span class="built_in">And</span> rec_eloc &lt;= item_eloc <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    err_prompt = <span class="string">&quot;第&quot;</span> &amp; r &amp; <span class="string">&quot;列衝突=&gt;填報終點【&quot;</span> &amp; tmp(<span class="number">1</span>) &amp; <span class="string">&quot;】已包含於舊有紀錄【&quot;</span> &amp; item_loc &amp; <span class="string">&quot;】&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> err_prompt &lt;&gt; <span class="string">&quot;&quot;</span> <span class="keyword">Then</span> p = p &amp; err_prompt &amp; vbNewLine</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> p = <span class="string">&quot;&quot;</span> <span class="keyword">Then</span> IsRecLocPass = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Excel VBA</tag>
        <tag>監造報表</tag>
      </tags>
  </entry>
  <entry>
    <title>縱斷面插旗文字重疊問題</title>
    <url>/posts/2767553795/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<h3 id="縱斷面發展來源">👉縱斷面發展來源</h3>
<p><a
href="https://hankvba.blogspot.com/2018/03/autocad-vba.html">AutoCAD VBA
縱斷面繪製自動化</a></p>
<h3 id="開發過程中的小問題">🐞開發過程中的小問題</h3>
<p>縱斷面繪製時會針對需要文字說明的樁號進行插旗繪製，可能會造成插旗文字出現重疊的原因有兩個</p>
<ol type="1">
<li>插旗說明樁號距離太近(0+200、0+205)</li>
<li>繪製X軸比例太小(1:1000 vs 1:5000)</li>
</ol>
<p>繪製過程會考量圖紙輸出的舒適度，最小字高通常會以<strong>3.4.5</strong>為原則，文字說明會固定以30度呈現</p>
<blockquote>
<p>當距離太近時可以透過調整X軸比例讓間距拉開，橫向會重疊的時候就進行上下位移，方便讀者觀看。</p>
</blockquote>
<p>因此本篇就是要透過VBA抓取說明文字的外框及下線，自動調整文字重疊內容，以下進行說明:</p>
<span id="more"></span>
<hr />
<h2 id="範例說明">📌範例說明</h2>
<figure>
<img src="image.png" alt="Fig1. 插旗文字說明" />
<figcaption aria-hidden="true">Fig1. 插旗文字說明</figcaption>
</figure>
<h2 id="流程解說">🔷流程解說</h2>
<p>一般插旗文字都是屬於旋轉至第一象限的內容(0度~90度)</p>
<ol type="1">
<li>透過CAD VBA內建指令GetBoundingBox找到邊界點。</li>
<li>透過幾何圖形學及三角函數關係進行列式。</li>
<li>用一元二次聯立方程式解析參數。</li>
<li>代回原本第一象限的正確點位。</li>
<li>引入clsACAD進行LINE物件繪製。</li>
</ol>
<hr />
<h2 id="幾何關係">🌟幾何關係</h2>
<p><span class="math display">\[ Hcos\theta+Lsin\theta=Y_1-Y_0=const.
\]</span> <span class="math display">\[
Hsin\theta+Lcos\theta=X_1-X_0=const. \]</span></p>
<p>正確角點:</p>
<table>
<thead>
<tr class="header">
<th>點名</th>
<th>X座標</th>
<th>Y座標</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>左下</td>
<td><span class="math display">\[ X_0+Hsin\theta \]</span></td>
<td><span class="math display">\[ Y_0 \]</span></td>
</tr>
<tr class="even">
<td>右下</td>
<td><span class="math display">\[ X_1 \]</span></td>
<td><span class="math display">\[ Y_1-Hcos\theta \]</span></td>
</tr>
<tr class="odd">
<td>左上</td>
<td><span class="math display">\[ X_0 \]</span></td>
<td><span class="math display">\[ Y_0+Hcos\theta \]</span></td>
</tr>
<tr class="even">
<td>右上</td>
<td><span class="math display">\[ X_1-Hsin\theta \]</span></td>
<td><span class="math display">\[ Y_1 \]</span></td>
</tr>
</tbody>
</table>
<figure>
<img src="SAMPLE.JPG" alt="Fig2. 文字外框、點位幾何關係" />
<figcaption aria-hidden="true">Fig2. 文字外框、點位幾何關係</figcaption>
</figure>
<hr />
<figure>
<img src="SAMPLE2.JPG" alt="Fig3. 上下底線繪製成果" />
<figcaption aria-hidden="true">Fig3. 上下底線繪製成果</figcaption>
</figure>
<h2 id="程式碼">⚡程式碼</h2>
<h3 id="模組module">模組(module)</h3>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> test_getBoundingBox()</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;適用於第一象限</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> CAD <span class="keyword">As</span> <span class="built_in">New</span> clsACAD</span><br><span class="line">    <span class="keyword">Dim</span> L <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line">    <span class="keyword">Dim</span> H <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> sset2 = CAD.CreateSSET()</span><br><span class="line">    <span class="keyword">Set</span> entobj = sset2(<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">    rotate_degree = entobj.Rotation * <span class="number">180</span> / <span class="number">3.14</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Call</span> entobj.GetBoundingBox(Min, Max)</span><br><span class="line">    </span><br><span class="line">    X0 = Min(<span class="number">0</span>)</span><br><span class="line">    Y0 = Min(<span class="number">1</span>)</span><br><span class="line">    X1 = Max(<span class="number">0</span>)</span><br><span class="line">    Y1 = Max(<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Call</span> CAD.AddPoint(Min)</span><br><span class="line">    <span class="keyword">Call</span> CAD.AddPoint(Max)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27;---一元二次聯立方程式---</span></span><br><span class="line">    </span><br><span class="line">    a1 = Sin(rotate_degree / <span class="number">180</span> * <span class="number">3.14</span>)</span><br><span class="line">    b1 = Cos(rotate_degree / <span class="number">180</span> * <span class="number">3.14</span>)</span><br><span class="line">    c1 = Y1 - Y0</span><br><span class="line">    </span><br><span class="line">    a2 = Cos(rotate_degree / <span class="number">180</span> * <span class="number">3.14</span>)</span><br><span class="line">    b2 = Sin(rotate_degree / <span class="number">180</span> * <span class="number">3.14</span>)</span><br><span class="line">    c2 = X1 - X0</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Call</span> SolveLinearEquations(a1, b1, c1, a2, b2, c2, L, H)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27;------底線------</span></span><br><span class="line">    </span><br><span class="line">    Xpt_LD = X0 + H * Sin(rotate_degree / <span class="number">180</span> * <span class="number">3.14</span>)</span><br><span class="line">    Ypt_LD = Y0</span><br><span class="line">    </span><br><span class="line">    Xpt_RD = X1</span><br><span class="line">    Ypt_RD = Y1 - H * Cos(rotate_degree / <span class="number">180</span> * <span class="number">3.14</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Call</span> CAD.AddLineCO(Xpt_LD, Ypt_LD, Xpt_RD, Ypt_RD)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">&#x27;-------頂線------</span></span><br><span class="line">    </span><br><span class="line">    Xpt_LU = X0</span><br><span class="line">    Ypt_LU = Y0 + H * Cos(rotate_degree / <span class="number">180</span> * <span class="number">3.14</span>)</span><br><span class="line">    </span><br><span class="line">    Xpt_RU = X1 - H * Sin(rotate_degree / <span class="number">180</span> * <span class="number">3.14</span>)</span><br><span class="line">    Ypt_RU = Y1</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Call</span> CAD.AddLineCO(Xpt_LU, Ypt_LU, Xpt_RU, Ypt_RU)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> SolveLinearEquations(<span class="keyword">ByVal</span> a1 <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByVal</span> b1 <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByVal</span> c1 <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByVal</span> a2 <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByVal</span> b2 <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByVal</span> c2 <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByRef</span> x <span class="keyword">As</span> <span class="type">Double</span>, <span class="keyword">ByRef</span> y <span class="keyword">As</span> <span class="type">Double</span>) <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line">    <span class="keyword">Dim</span> determinant <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line">    </span><br><span class="line">    determinant = a1 * b2 - a2 * b1</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> determinant = <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line">        SolveLinearEquations = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        x = (c1 * b2 - c2 * b1) / determinant</span><br><span class="line">        y = (a1 * c2 - a2 * c1) / determinant</span><br><span class="line">        SolveLinearEquations = <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="物件類別模組clsacad">物件類別模組(clsACAD)</h3>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">Private</span> mo <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"><span class="keyword">Private</span> pa <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Public</span> acadDoc <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"><span class="keyword">Public</span> CADVer <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Class_Initialize()</span><br><span class="line"></span><br><span class="line">strCAD = <span class="string">&quot;AutoCAD.application&quot;</span></span><br><span class="line">CADVer = <span class="string">&quot;AUTOCAD&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Call</span> CADInit(strCAD)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> CADInit(<span class="keyword">ByVal</span> strCAD <span class="keyword">As</span> <span class="type">String</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> acadApp = GetObject(, strCAD) <span class="comment">&#x27;查看安裝</span></span><br><span class="line"><span class="keyword">If</span> Err &lt;&gt; <span class="number">0</span> <span class="keyword">Then</span> <span class="keyword">Set</span> acadApp = CreateObject(strCAD)</span><br><span class="line">acadApp.Visible = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">GoTo</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> mo = acadApp.ActiveDocument.ModelSpace</span><br><span class="line"><span class="keyword">Set</span> pa = acadApp.ActiveDocument.PaperSpace</span><br><span class="line"><span class="keyword">Set</span> acadDoc = acadApp.ActiveDocument</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> CreateSSET(<span class="keyword">Optional</span> <span class="keyword">ByVal</span> sname <span class="keyword">As</span> <span class="type">String</span> = <span class="string">&quot;SS1&quot;</span>, <span class="keyword">Optional</span> <span class="keyword">ByVal</span> ftypetmp <span class="keyword">As</span> Variant = <span class="string">&quot;&quot;</span>, <span class="keyword">Optional</span> <span class="keyword">ByVal</span> fdatatmp <span class="keyword">As</span> Variant = <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;****PorgeCAD中似乎沒辦法做到過濾的條件?*****</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;0:object type</span></span><br><span class="line"><span class="comment">&#x27;2:object name</span></span><br><span class="line"><span class="comment">&#x27;8:layer name</span></span><br><span class="line"><span class="comment">&#x27;62:color number(0 to 256)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> FilterType() <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> FilterData() <span class="keyword">As</span> Variant</span><br><span class="line"></span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span>: acadDoc.SelectionSets(sname).Delete: <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">GoTo</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> sset = acadDoc.SelectionSets.Add(sname)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> ftypetmp = <span class="string">&quot;&quot;</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">    sset.SelectOnScreen</span><br><span class="line">    </span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line"></span><br><span class="line">    ft = Split(ftypetmp, <span class="string">&quot;,&quot;</span>)</span><br><span class="line">    fd = Split(fdatatmp, <span class="string">&quot;,&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">ReDim</span> FilterType(<span class="number">0</span> <span class="keyword">To</span> UBound(ft))</span><br><span class="line">    <span class="keyword">ReDim</span> FilterData(<span class="number">0</span> <span class="keyword">To</span> UBound(fd))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> UBound(ft)</span><br><span class="line">    </span><br><span class="line">        FilterType(i) = ft(i)</span><br><span class="line">        FilterData(i) = fd(i)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    </span><br><span class="line">    sset.SelectOnScreen FilterType, FilterData</span><br><span class="line">    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> CreateSSET = sset</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> AddPoint(pt) <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer = <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span></span><br><span class="line">    <span class="keyword">Set</span> AddPoint = mo.AddPointEntity(tranPoint(pt))</span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">    <span class="keyword">Set</span> AddPoint = mo.AddPoint(tranPoint(pt))</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> AddLineCO(X1, Y1, X2, Y2) <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> spt(<span class="number">2</span>) <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line"><span class="keyword">Dim</span> ept(<span class="number">2</span>) <span class="keyword">As</span> <span class="type">Double</span></span><br><span class="line">spt(<span class="number">0</span>) = X1: spt(<span class="number">1</span>) = Y1</span><br><span class="line">ept(<span class="number">0</span>) = X2: ept(<span class="number">1</span>) = Y2</span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> AddLineCO = AddLine(spt, ept)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> AddLine(spt, ept) <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> AddLine = mo.AddLine(tranPoint(spt), tranPoint(ept))</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;=============transform ICAD about point and points======================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> tranPoint(<span class="keyword">ByVal</span> CADpt)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> CADVer &lt;&gt; <span class="string">&quot;ICAD&quot;</span> <span class="keyword">Then</span> tranPoint = CADpt: <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Set</span> tranPoint = Library.CreatePoint(CADpt(<span class="number">0</span>), CADpt(<span class="number">1</span>), CADpt(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="後續利用">👉後續利用</h2>
<p>確認<strong>下一文字外框點</strong>是否位於這次文字框中，進行重疊文字判識，如不符合則再上下位移即可。</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">Function</span> checkPtFromBorders(midX,midY,BorderPTs) <span class="keyword">as</span> <span class="type">boolean</span></span><br><span class="line"></span><br><span class="line">Border_minX = <span class="built_in">CDbl</span>(BorderPTs(<span class="number">0</span>))</span><br><span class="line">Border_minY = <span class="built_in">CDbl</span>(BorderPTs(<span class="number">1</span>))</span><br><span class="line">Border_maxX = <span class="built_in">CDbl</span>(BorderPTs(<span class="number">2</span>))</span><br><span class="line">Border_maxY = <span class="built_in">CDbl</span>(BorderPTs(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> midX &gt;= Border_minX <span class="built_in">And</span> midX &lt;= Border_maxX <span class="built_in">And</span> midY &gt;= Border_minY <span class="built_in">And</span> midY &lt;= Border_maxY <span class="keyword">Then</span></span><br><span class="line">    </span><br><span class="line">    checkPtFromBorders = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">Exit</span> <span class="keyword">For</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>基本概念</category>
      </categories>
      <tags>
        <tag>AutoCAD VBA</tag>
        <tag>ProgeCAD VBA</tag>
      </tags>
  </entry>
  <entry>
    <title>明渠水理計算</title>
    <url>/posts/3021870975/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<p>明渠輸水渠道的設計重點大概羅列如下幾點:</p>
<ol type="1">
<li>排水渠道要注意流量是否可以提供農田排水10年重現期距1日排出。</li>
<li>灌溉渠道要確認灌溉計畫所需計畫流量。</li>
<li>設計的最小容許流速不能低於水草生長速度或淤沙速度。</li>
<li>設計的最大容許流速不能高於規範所限制的速度。</li>
<li>設計時需注意不能太接近臨界流況，動水壓力對構造物較容易不穩定。</li>
<li>挑選合宜的出水高度提高其他因素所致之額外流量。</li>
<li>檢討各田區所需灌溉水頭是否足夠，盡量減少制水汴版的使用。</li>
</ol>
<p>有關農田排水的流量可以參考<strong>農田排水工程規劃設計原則參考手冊(108版)</strong>進行推算</p>
<blockquote>
<p>演算流程可以利用Python中的Streamlit套件進行，從<strong>參數設定&gt;檢核流程&gt;報表產製</strong>都交給電腦</p>
</blockquote>
<span id="more"></span>
<h2 id="主要操作畫面">主要操作畫面</h2>
<figure>
<img src="Streamlit.JPG" alt="圖1.Streamlit 操作介面" />
<figcaption aria-hidden="true">圖1.Streamlit 操作介面</figcaption>
</figure>
<h2 id="計算依據">計算依據</h2>
<ol type="1">
<li>中國農業工程手冊-農業水利之部(下稱農工手冊)</li>
<li>農田水利會技術人員訓練教材灌溉排水工程類合訂本(下稱合訂本)</li>
</ol>
<hr />
<h2 id="基本參數">基本參數</h2>
<table>
<thead>
<tr class="header">
<th>名詞</th>
<th>代號</th>
<th>數值</th>
<th>單位</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>計畫流量</td>
<td>q</td>
<td>{q}</td>
<td>cms</td>
</tr>
<tr class="even">
<td>曼寧係數</td>
<td>n</td>
<td>{n}</td>
<td></td>
</tr>
<tr class="odd">
<td>渠寬</td>
<td>b</td>
<td>{B}</td>
<td>m</td>
</tr>
<tr class="even">
<td>填角</td>
<td>F</td>
<td>{F}</td>
<td>m</td>
</tr>
<tr class="odd">
<td>坡度</td>
<td>s</td>
<td>1/{s}</td>
<td></td>
</tr>
</tbody>
</table>
<hr />
<h2 id="計算過程">計算過程</h2>
<p>相關計算公式如下:</p>
<p><span class="math display">\[ P = (b - 2 \cdot F) + 2
\sqrt2 \cdot F + 2 \cdot (y - F) \]</span></p>
<p><span class="math display">\[ A = b \cdot y -  F ^2 \]</span></p>
<p><span class="math display">\[ R = \frac{A}{P} \]</span></p>
<p><span class="math display">\[ V = \frac{1}{n} \cdot R^\frac{2}{3}
\cdot s ^ \frac{1}{2} \]</span></p>
<p><span class="math display">\[ Q = A \cdot V \]</span></p>
<p><span class="math display">\[ Fr^2 = \frac{Q^2T}{gA^3} \]</span></p>
<table>
<thead>
<tr class="header">
<th>名詞</th>
<th>代號</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>潤周</td>
<td>P</td>
</tr>
<tr class="even">
<td>通水面積</td>
<td>A</td>
</tr>
<tr class="odd">
<td>水力半徑</td>
<td>R</td>
</tr>
<tr class="even">
<td>流速</td>
<td>V</td>
</tr>
<tr class="odd">
<td>流量</td>
<td>Q</td>
</tr>
</tbody>
</table>
<hr />
<h2 id="計算結果">計算結果</h2>
<h3 id="檢算等速流況"><strong>檢算等速流況</strong></h3>
<blockquote>
<p>設計流量Q需大於計畫流量q</p>
</blockquote>
<p>經試誤法後得到</p>
<table>
<thead>
<tr class="header">
<th>名詞</th>
<th>代號</th>
<th>數值</th>
<th>單位</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>水深</td>
<td>y</td>
<td>{y}</td>
<td>m</td>
</tr>
<tr class="even">
<td>設計流量</td>
<td>Q</td>
<td>{Q}</td>
<td>cms</td>
</tr>
<tr class="odd">
<td>流速</td>
<td>V</td>
<td>{V}</td>
<td>m/s</td>
</tr>
<tr class="even">
<td>福祿數</td>
<td>Fr</td>
<td>{Fr}</td>
<td></td>
</tr>
</tbody>
</table>
<hr />
<h3 id="檢算臨界流況"><strong>檢算臨界流況</strong></h3>
<blockquote>
<p>設定條件為 Fr=1</p>
</blockquote>
<p>經試誤法後得到</p>
<table>
<thead>
<tr class="header">
<th>名詞</th>
<th>代號</th>
<th>數值</th>
<th>單位</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>臨界水深</td>
<td>yc</td>
<td>{yc}</td>
<td>m</td>
</tr>
<tr class="even">
<td>臨界流速</td>
<td>Vc</td>
<td>{Vc}</td>
<td>m/s</td>
</tr>
</tbody>
</table>
<hr />
<h2 id="水理特性檢討">水理特性檢討</h2>
<h3 id="最小容許流速"><strong>最小容許流速</strong></h3>
<ul>
<li>水草生長速度 0.7 m/s</li>
<li>泥沙淤積速度</li>
</ul>
<table>
<colgroup>
<col style="width: 9%" />
<col style="width: 9%" />
<col style="width: 9%" />
<col style="width: 9%" />
<col style="width: 9%" />
<col style="width: 9%" />
<col style="width: 9%" />
<col style="width: 9%" />
<col style="width: 9%" />
<col style="width: 9%" />
<col style="width: 9%" />
</colgroup>
<thead>
<tr class="header">
<th>最小容許流速(m/s)</th>
<th>0.19</th>
<th>0.30</th>
<th>0.38</th>
<th>0.45</th>
<th>0.56</th>
<th>0.65</th>
<th>0.69</th>
<th>0.70</th>
<th>0.77</th>
<th>0.82</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>水深</td>
<td>0.3</td>
<td>0.6</td>
<td>0.9</td>
<td>1.2</td>
<td>1.5</td>
<td>1.8</td>
<td>2.1</td>
<td>2.4</td>
<td>2.7</td>
<td>3.0</td>
</tr>
</tbody>
</table>
<h3 id="最大容許流速"><strong>最大容許流速</strong></h3>
<ul>
<li>農工手冊建議</li>
</ul>
<table>
<thead>
<tr class="header">
<th>材質</th>
<th style="text-align: center;">最大容許流速(m/s)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>厚混凝土(&gt;18cm)</td>
<td style="text-align: center;">3.00</td>
</tr>
<tr class="even">
<td>薄混凝土(&lt;10cm)</td>
<td style="text-align: center;">1.50</td>
</tr>
</tbody>
</table>
<blockquote>
<p>排水路、退水路、側溢道 可以乘<strong>1.5</strong>倍進行分析</p>
</blockquote>
<ul>
<li>合訂本建議</li>
</ul>
<table>
<thead>
<tr class="header">
<th>材質</th>
<th style="text-align: center;">最大容許流速(m/s)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>混凝土</td>
<td style="text-align: center;">4.00</td>
</tr>
</tbody>
</table>
<hr />
<h3 id="考量動水壓力"><strong>考量動水壓力</strong></h3>
<p>應避免接近臨界流速(水面易起激盪)</p>
<p>農工手冊建議:</p>
<p><span class="math display">\[ V_\text &lt;
\frac23 V_c \]</span></p>
<p>合訂本計算例(P.450)建議:</p>
<p><span class="math display">\[ V_\text &lt; 0.8
\cdot V_c \]</span></p>
<hr />
<h3 id="出水高度檢核"><strong>出水高度檢核</strong></h3>
<p>為考量以下情況予以調整</p>
<ol type="1">
<li>渠道糙率係數之變動</li>
<li>流速水頭變換為靜水頭水面之上升</li>
<li>對水面波動等所需增加之高度</li>
</ol>
<p><strong>合訂本建議:</strong></p>
<ol type="1">
<li><p>計畫最高水深之1/3(但不能少於15cm)</p></li>
<li><p>重要渠道可增至最大水深之1/2</p></li>
<li><p>彎曲處需考量水面超高</p>
<p><span class="math display">\[ F_b = \frac{B \cdot V^2}{g \cdot r}
\]</span></p>
<ul>
<li><p>B=水面寬度(m)</p></li>
<li><p>r=彎曲半徑(m)</p></li>
<li><p>g=9.81</p></li>
</ul></li>
</ol>
<p><strong>農工手冊建議:</strong></p>
<ul>
<li><p>純挖渠道或內面工渠道</p>
<p>Fb=0.05d+hv+(0.05~0.15)</p></li>
<li><p>座槽或渡槽</p>
<p>Fb=0.07d+hv+(0.05~0.15)</p>
<p>有洪水流入時 最小Fb=0.1</p></li>
<li><p>暗渠及隧道 A,B取大值 (A)按計畫流量估算
d/D=0.80~0.83(但至少為0.30m)</p>
<p>(B)有洪水流入時 d/D=0.90~0.93</p>
<ul>
<li>d=水深=y</li>
<li>D=暗渠高度或隧道直徑</li>
</ul></li>
</ul>
<hr />
]]></content>
      <categories>
        <category>基本概念</category>
      </categories>
      <tags>
        <tag>Streamlit</tag>
        <tag>Python</tag>
        <tag>明渠計算</tag>
      </tags>
  </entry>
  <entry>
    <title>跨系統網頁自動化填寫做法</title>
    <url>/posts/706100979/</url>
    <content><![CDATA[<h2 id="背景">背景</h2>
<p>上級單位需要管考目前管理處執行中的工程案件，建立<strong>農田水利設施工程管考系統</strong>(以下稱外部系統)供各管理處進行填報，然而管理處於前期便已建立<strong>工程管考E化系統</strong>(以下稱內部系統)做為內部資料的收集，監造單位需要在內部系統先進行填寫後，再由管理單位進入外部系統將內部系統資料再重新謄打一次。</p>
<p>為進行外部系統資料填報，最理想的狀況當然是能透過內部系統自身觸發器(Trigger)執行外部系統API發送，內部系統資料庫異動時也能一併修改到外部系統的內容。</p>
<p>然而今日<strong>沒有外部系統API使用</strong>，需要另外想辦法從原本的資料庫撈取資料進行<strong>網頁自動化填報</strong>才能省事，首先要確認內部系統的資料庫欄位是否能進行資料梳理，再者確認網頁自動化填報做法為何。</p>
<span id="more"></span>
<hr />
<h3 id="外部系統操作畫面">外部系統操作畫面</h3>
<figure>
<img src="1.JPG" alt="Fig1. 新增計畫工程" />
<figcaption aria-hidden="true">Fig1. 新增計畫工程</figcaption>
</figure>
<hr />
<figure>
<img src="2.JPG" alt="Fig2. 計畫工程成果" />
<figcaption aria-hidden="true">Fig2. 計畫工程成果</figcaption>
</figure>
<hr />
<figure>
<img src="3.JPG" alt="Fig3. 新增分項工程" />
<figcaption aria-hidden="true">Fig3. 新增分項工程</figcaption>
</figure>
<hr />
<figure>
<img src="4.JPG" alt="Fig4. 分項工程成果" />
<figcaption aria-hidden="true">Fig4. 分項工程成果</figcaption>
</figure>
<hr />
<figure>
<img src="5.JPG" alt="Fig5. 工程概要表填寫欄位(一)" />
<figcaption aria-hidden="true">Fig5. 工程概要表填寫欄位(一)</figcaption>
</figure>
<hr />
<figure>
<img src="6.JPG" alt="Fig6. 工程概要表填寫欄位(二)" />
<figcaption aria-hidden="true">Fig6. 工程概要表填寫欄位(二)</figcaption>
</figure>
<h3 id="內部系統資料庫">內部系統資料庫</h3>
<p>經查外部系統相關資料欄位分散於內部系統資料庫(SQLserver)各個不同資料表，雖然透過JOIN的方式也可以產出一個滿接近可以直接輸入的成果，但筆者對於資料庫的操作經驗尚顯不足，期程迫在眉睫，只好先將內部系統相關各表先匯出成excel，再透過熟悉的VBA進行資料梳理，整理成未來網頁自動化填報待載入的內容。</p>
<p>為不影響既有資料庫運作，先請各同仁將欲填報資料內容填寫完後進行資料庫備份，於本地端重啟一個資料庫服務並導入備份內容進行後續操作。</p>
<h4 id="資料梳理細節">資料梳理細節</h4>
<table>
<thead>
<tr class="header">
<th>外部系統頁面</th>
<th>欄位名稱</th>
<th>內部系統資料表</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>工程研提</td>
<td>工程編號(自訂)</td>
<td>APMFORM</td>
</tr>
<tr class="even">
<td></td>
<td>工程名稱</td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td>鄉鎮市</td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td>水路名稱列表(自訂)</td>
<td></td>
</tr>
<tr class="odd">
<td>分項工程</td>
<td>水路名稱</td>
<td>MONFORM</td>
</tr>
<tr class="even">
<td>工程概要表</td>
<td>受益面積</td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td>改善類別</td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td>改善效益</td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td>用地情形</td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td>規劃情形</td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td>相關情形</td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td>農民意願</td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td>水源情形</td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td>水權情形</td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td>是否需配合斷水期施工</td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td>工程重要性</td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td>經費概估項目</td>
<td>MONFUND</td>
</tr>
<tr class="even">
<td></td>
<td>現況照片及設計簡圖</td>
<td>MONFPIC</td>
</tr>
</tbody>
</table>
<h4 id="照片處理">照片處理</h4>
<p>在處理照片對映時，發現資料庫中的照片存成二進位，需先把二進位轉成圖片才有辦法進行後續處理。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_photos</span>():</span><br><span class="line">    conn = get_db_connection()</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line"></span><br><span class="line">    query=<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    SELECT  </span></span><br><span class="line"><span class="string">        mf.[MN_ID],</span></span><br><span class="line"><span class="string">        mf.[WRD_NAME],</span></span><br><span class="line"><span class="string">        mp.[PIC_FILE],  -- 假設你想要選擇圖片欄位</span></span><br><span class="line"><span class="string">        mp.[PIC_PATH]</span></span><br><span class="line"><span class="string">    FROM </span></span><br><span class="line"><span class="string">        [CMPSGS].[dbo].[MONFORM] mf</span></span><br><span class="line"><span class="string">    JOIN </span></span><br><span class="line"><span class="string">        [CMPSGS].[dbo].[MONFPIC] mp</span></span><br><span class="line"><span class="string">        ON mf.[MN_ID] = mp.[MN_ID]</span></span><br><span class="line"><span class="string">    WHERE </span></span><br><span class="line"><span class="string">        mf.[ADD_DT] &gt; &#x27;2024-11-01&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ORDER BY</span></span><br><span class="line"><span class="string">        mf.[MN_ID]</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    cursor.execute(query)</span><br><span class="line">    <span class="comment"># 獲取列名</span></span><br><span class="line">    columns = [column[<span class="number">0</span>] <span class="keyword">for</span> column <span class="keyword">in</span> cursor.description]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 將結果轉換為字典列表</span></span><br><span class="line">    results = [<span class="built_in">dict</span>(<span class="built_in">zip</span>(columns, row)) <span class="keyword">for</span> row <span class="keyword">in</span> cursor.fetchall()]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># print(&quot;Results:&quot;, results)  # 新增這一行</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 將結果轉換為 DataFrame</span></span><br><span class="line">    df = pd.DataFrame(results)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> index, row <span class="keyword">in</span> df.iterrows():</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> index %<span class="number">3</span>==<span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(row[<span class="string">&quot;WRD_NAME&quot;</span>])</span><br><span class="line">            folder_name=row[<span class="string">&quot;WRD_NAME&quot;</span>]</span><br><span class="line">            os.makedirs(<span class="string">&quot;./data/&quot;</span>+folder_name, exist_ok=<span class="literal">True</span>)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./data/&quot;</span>+folder_name+<span class="string">&quot;/&quot;</span>+row[<span class="string">&quot;WRD_NAME&quot;</span>]+<span class="string">&quot;-&quot;</span>+row[<span class="string">&quot;PIC_PATH&quot;</span>], <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> image_file:</span><br><span class="line">            image_file.write(row[<span class="string">&quot;PIC_FILE&quot;</span>])</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">str</span>(index)+<span class="string">&quot;...OK!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    cursor.close()</span><br><span class="line">    conn.close()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="2.png" alt="Fig7. 資料夾安排(以渠道名稱為分類)" /> <img
src="3.png" alt="Fig8. 資料夾內容(檔案名稱取為數字方便排序進行)" /></p>
<hr />
<h3 id="網頁自動化填報">網頁自動化填報</h3>
<p>原本想像中的Selenium會需要<strong>從無到有</strong>開啟一個網站後開始進行資料填寫，大多數的網站都會有帳號密碼驗證機制，甚至祭出驗證碼、選擇汽車圖片、移動滑鼠到指定位置...等反爬蟲機制來確認是否為機器人，但若網頁可以被<strong>接管</strong>繞開這些機制的話，那整個資料填報作業就會很有機會讓電腦代勞，這就是寫程式的趣味來源，當然還是要小心不能點太快，否則網站可能會負荷不過來。</p>
<h4 id="chrome">Chrome</h4>
<p>網頁瀏覽器，透過以下指令即可進行網站操作接管，需要根據自身電腦的chrome安裝路徑執行，建議將原本所開啟中的chrome畫面通通關閉後再執行以下指令。</p>
<ul>
<li>WIN10</li>
</ul>
<p><code>"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" –remote-debugging-port=9222</code></p>
<ul>
<li>WIN11</li>
</ul>
<p><code>"C:\Program Files\Google\Chrome\Application\chrome.exe" –remote-debugging-port=9222</code></p>
<p>NOTE:如果仍然找不到瀏覽器的執行路徑，可以在原本桌面瀏覽器捷徑找尋內容</p>
<figure>
<img src="1.png" alt="Fig9. 瀏覽器畫面" />
<figcaption aria-hidden="true">Fig9. 瀏覽器畫面</figcaption>
</figure>
<hr />
<p><a
href="https://www.hanksvba.com/posts/391727536/#more">更多細節請參考.Selenium詳細操作步驟</a></p>
<h2 id="操作demo">操作DEMO</h2>
<iframe width="560" height="315" src="https://www.youtube.com/embed/i5GgfOp73Ns?si=teimgdo9aPiJLhaP" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen>
</iframe>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SQL</tag>
        <tag>Selenium</tag>
      </tags>
  </entry>
  <entry>
    <title>Selenium操作細節</title>
    <url>/posts/391727536/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>原本想像中的Selenium會需要<strong>從無到有</strong>開啟一個網站後開始進行資料填寫，大多數的網站都會有帳號密碼驗證機制，甚至祭出驗證碼、選擇汽車圖片、移動滑鼠到指定位置...等反爬蟲機制來確認是否為機器人，但若網頁可以被<strong>接管</strong>繞開這些機制的話，那整個資料填報作業就會很有機會讓電腦代勞，這就是寫程式的趣味來源，當然還是要小心不能點太快，否則網站可能會負荷不過來。</p>
<span id="more"></span>
<h2 id="使用工具">使用工具</h2>
<h3 id="chrome">Chrome</h3>
<p>網頁瀏覽器，透過以下指令即可進行網站操作接管，需要根據自身電腦的chrome安裝路徑執行，建議將原本所開啟中的chrome畫面通通關閉後再執行以下指令。</p>
<h4 id="win10">WIN10</h4>
<p><code>"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" –remote-debugging-port=9222</code></p>
<h4 id="win11">WIN11</h4>
<p><code>"C:\Program Files\Google\Chrome\Application\chrome.exe" –remote-debugging-port=9222</code></p>
<p>NOTE:如果仍然找不到瀏覽器的執行路徑，可以在原本桌面瀏覽器捷徑找尋內容</p>
<figure>
<img src="1.png" alt="Fig1. 瀏覽器畫面" />
<figcaption aria-hidden="true">Fig1. 瀏覽器畫面</figcaption>
</figure>
<h3 id="selenium">Selenium</h3>
<p>目前使用為Selenium4的語法，透過分析網站的元素來進行文字輸入、文字萃取、點擊連結、循環表格取得目標欄位...等。</p>
<h2 id="網站接管步驟">網站接管步驟</h2>
<ol type="1">
<li>打開終端機
<ul>
<li>搜尋&gt;輸入<strong>cmd</strong></li>
</ul></li>
<li>輸入指令
<ul>
<li><code>"C:\Program Files\Google\Chrome\Application\chrome.exe" –remote-debugging-port=9222</code></li>
</ul></li>
<li>開啟網站，<strong>輸入帳號密碼驗證碼</strong>後到可填寫畫面</li>
<li>交給Selenium來進行網站自動填報作業。</li>
</ol>
<h2 id="python">Python</h2>
<h3 id="requirements.txt">requirements.txt</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">selenium</span><br><span class="line">pandas</span><br><span class="line">openpyxl</span><br></pre></td></tr></table></figure>
<h3 id="main.py">main.py</h3>
<h4 id="接管瀏覽器">接管瀏覽器</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init_driver</span>():</span><br><span class="line">    chrome_options = Options()</span><br><span class="line">    chrome_options.add_experimental_option(<span class="string">&quot;debuggerAddress&quot;</span>, <span class="string">&quot;127.0.0.1:9222&quot;</span>)</span><br><span class="line"></span><br><span class="line">    driver = webdriver.Chrome(options=chrome_options)</span><br><span class="line">    <span class="keyword">return</span> driver</span><br><span class="line">    </span><br><span class="line"><span class="comment">#======主要介面開始======</span></span><br><span class="line"></span><br><span class="line">driver=init_driver()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 獲取當前網址</span></span><br><span class="line">current_url = driver.current_url</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;當前網址:&quot;</span>, current_url)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="取得網頁元素">取得網頁元素</h4>
<table>
<thead>
<tr class="header">
<th>方法</th>
<th>適用情況</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>ID</strong></td>
<td>用於定位具有唯一標識符的元素</td>
</tr>
<tr class="even">
<td><strong>XPATH</strong></td>
<td>當元素位置不確定或無法使用其他方式定位時使用</td>
</tr>
<tr class="odd">
<td><strong>LINK_TEXT</strong></td>
<td>用於定位頁面上可點擊的超連結文字</td>
</tr>
<tr class="even">
<td><strong>CSS_SELECTOR</strong></td>
<td>當元素的結構較為複雜或無法使用ID時使用</td>
</tr>
</tbody>
</table>
<h4 id="執行網頁動作">執行網頁動作</h4>
<table>
<colgroup>
<col style="width: 20%" />
<col style="width: 32%" />
<col style="width: 46%" />
</colgroup>
<thead>
<tr class="header">
<th>操作類型</th>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>文字欄位操作</strong></td>
<td><strong>clear</strong></td>
<td>清空文字欄位的內容</td>
</tr>
<tr class="even">
<td></td>
<td><strong>sendkey</strong></td>
<td>在文字欄位中輸入文字</td>
</tr>
<tr class="odd">
<td></td>
<td><strong>click</strong></td>
<td>點擊文字欄位（若為可點擊的元素）</td>
</tr>
<tr class="even">
<td><strong>選擇欄位操作</strong></td>
<td><strong>select_by_value</strong></td>
<td>根據選項的值來選擇</td>
</tr>
<tr class="odd">
<td></td>
<td><strong>select_by_visible_value</strong></td>
<td>根據選項的可見文字來選擇</td>
</tr>
</tbody>
</table>
<h4 id="網頁表格操作">網頁表格操作</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">edit_case</span>(<span class="params">driver,targetID</span>): </span><br><span class="line"></span><br><span class="line">    select_element  = driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;DataTables_Table_0_length&quot;]/label/select&#x27;</span>)</span><br><span class="line">    select = Select(select_element)</span><br><span class="line">    select.select_by_value(<span class="string">&quot;100&quot;</span>)</span><br><span class="line">    table = driver.find_element(By.ID, <span class="string">&quot;DataTables_Table_0&quot;</span>)</span><br><span class="line"></span><br><span class="line">    rows = table.find_elements(By.CSS_SELECTOR, <span class="string">&quot;tbody tr&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line"></span><br><span class="line">        cells = row.find_elements(By.CSS_SELECTOR, <span class="string">&quot;td&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># print(cells[0].text)</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> cells[<span class="number">0</span>].text==targetID:</span><br><span class="line">            <span class="built_in">print</span>(cells[<span class="number">0</span>].text)</span><br><span class="line"></span><br><span class="line">            edit_button = cells[<span class="number">3</span>].find_element(By.CSS_SELECTOR, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">            edit_button.click()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<h4 id="刪除時之警告視窗">刪除時之警告視窗</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_item_by_chname</span>(<span class="params">driver,ch_name,is_rebuild</span>):</span><br><span class="line"></span><br><span class="line">    table = driver.find_element(By.ID, <span class="string">&quot;DataTables_Table_0&quot;</span>)</span><br><span class="line">    rows = table.find_elements(By.CSS_SELECTOR, <span class="string">&quot;tbody tr&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line"></span><br><span class="line">        cells = row.find_elements(By.CSS_SELECTOR, <span class="string">&quot;td&quot;</span>)</span><br><span class="line">        del_button=cells[<span class="number">3</span>].find_element(By.CSS_SELECTOR, <span class="string">&#x27;a[onclick^=&quot;delConfirm&quot;]&#x27;</span>)</span><br><span class="line">        del_button.click()</span><br><span class="line"></span><br><span class="line">        alert = Alert(driver)</span><br><span class="line">        alert.accept()  <span class="comment"># 點擊確認</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;已經強制刪除&quot;</span>)</span><br><span class="line">        </span><br></pre></td></tr></table></figure>
<h4 id="圖片置換處理">圖片置換處理</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_photo_path</span>(<span class="params">ch_name</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(<span class="string">&#x27;./data/&#x27;</span>+ch_name):</span><br><span class="line"></span><br><span class="line">        photo_list=[]</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(<span class="string">&#x27;D:/Python/st_selenium/data/&#x27;</span>+ch_name):</span><br><span class="line">            <span class="built_in">print</span>(file)</span><br><span class="line">            photo_list.append(<span class="string">&#x27;D:/Python/st_selenium/data/&#x27;</span>+ch_name+<span class="string">&quot;/&quot;</span>+file)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> photo_list</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">paste_photo</span>(<span class="params">driver,photo_list</span>):</span><br><span class="line">    <span class="comment"># 定位文件上傳的 input 元素</span></span><br><span class="line">    file_input = driver.find_element(By.ID, <span class="string">&quot;userfile1&quot;</span>)</span><br><span class="line">    file_path =photo_list[<span class="number">0</span>] <span class="comment"># 請替換成你圖片的絕對路徑</span></span><br><span class="line">    file_input.send_keys(file_path)</span><br><span class="line"></span><br><span class="line">    file_input = driver.find_element(By.ID, <span class="string">&quot;userfile2&quot;</span>)</span><br><span class="line">    file_path =photo_list[<span class="number">1</span>] <span class="comment"># 請替換成你圖片的絕對路徑</span></span><br><span class="line">    file_input.send_keys(file_path)</span><br><span class="line"></span><br><span class="line">    file_input = driver.find_element(By.ID, <span class="string">&quot;userfile3&quot;</span>)</span><br><span class="line">    file_path =photo_list[<span class="number">2</span>] <span class="comment"># 請替換成你圖片的絕對路徑</span></span><br><span class="line">    file_input.send_keys(file_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ===主要操作內容===</span></span><br><span class="line">    </span><br><span class="line">photo_list=get_photo_path(ch)</span><br><span class="line">paste_photo(driver,photo_list)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>
<blockquote>
<p>資料夾安排</p>
</blockquote>
<figure>
<img src="2.png" alt="Fig2. 資料夾安排(以渠道名稱為分類)" />
<figcaption aria-hidden="true">Fig2.
資料夾安排(以渠道名稱為分類)</figcaption>
</figure>
<blockquote>
<p>資料夾內容</p>
</blockquote>
<figure>
<img src="3.png" alt="Fig1. 資料夾內容(檔案名稱取為數字方便排序進行)" />
<figcaption aria-hidden="true">Fig1.
資料夾內容(檔案名稱取為數字方便排序進行)</figcaption>
</figure>
<h2 id="錯誤紀錄">錯誤紀錄</h2>
<ul>
<li>如果取得表格之後就要直接進行各項功能操作，會出現中止狀況，需要先把每個列的資料先儲存成list，才能根據每個list中的內容進行後續填寫、修改、儲存等功能。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">166</span>,<span class="number">167</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(&quot;OO113T&quot;+str(i))</span></span><br><span class="line"></span><br><span class="line">    edit_case(driver,<span class="string">&quot;OO113T&quot;</span>+<span class="built_in">str</span>(i))</span><br><span class="line"></span><br><span class="line">    table = driver.find_element(By.ID, <span class="string">&quot;DataTables_Table_0&quot;</span>)</span><br><span class="line">    rows = table.find_elements(By.CSS_SELECTOR, <span class="string">&quot;tbody tr&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">### 先把資料儲存起來</span></span><br><span class="line">    </span><br><span class="line">    ch_list=[]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">        cells = row.find_elements(By.CSS_SELECTOR, <span class="string">&quot;td&quot;</span>)</span><br><span class="line">        ch=cells[<span class="number">1</span>].text</span><br><span class="line">        ch_list.append(ch)</span><br><span class="line"></span><br><span class="line">    <span class="comment">### 循環每個LIST中的內容進行後續處理</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> ch_list:</span><br><span class="line"></span><br><span class="line">        <span class="comment">#do something~</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>基本原理</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Selenium</tag>
      </tags>
  </entry>
  <entry>
    <title>雲端空間Synology-C2-Object</title>
    <url>/posts/1168852487/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>一提到雲端空間，廣為人知的不外乎是Google
Drive、DropBox、OneDrive等等知名大廠的產品，NAS(地端儲存伺服器)則大多常見為Synology群暉所主導，而本篇要介紹的Synology
C2 Object則是群暉所提供的服務之一。</p>
<p>在網路上有許多服務經過使用者對<strong>網頁</strong>進行互動，伺服器背後通常都會有一個以上的資料庫及檔案空間進行儲存，而本篇
Synology C2 Object
就是指檔案存存放空間，只因為它屬於雲端所提供的服務，因此叫做雲端空間。</p>
<p>未來只要有建立好連接的參數，就可以透過API進行呼叫存放、取用，有關檔案空間申請主要目的為取得下列重要參數，以備未來進行檔案空間串接。</p>
<ul>
<li>BUCKET_NAME</li>
<li>endpoint_url</li>
<li>aws_access_key_id</li>
<li>aws_secret_access_key</li>
</ul>
<span id="more"></span>
<hr />
<h2 id="申請流程">申請流程</h2>
<h3 id="點擊登入">點擊登入</h3>
<p>可以綁定Google或者自行申請一組帳號密碼</p>
<figure>
<img src="1.png" alt="Fig1.多種登入方式" />
<figcaption aria-hidden="true">Fig1.多種登入方式</figcaption>
</figure>
<h3 id="登入畫面">登入畫面</h3>
<figure>
<img src="2.png" alt="Fig2.入口畫面" />
<figcaption aria-hidden="true">Fig2.入口畫面</figcaption>
</figure>
<h3 id="選取c2-object-storage">選取C2 Object Storage</h3>
<figure>
<img src="3.png" alt="Fig3.選擇C2 Object Storage服務" />
<figcaption aria-hidden="true">Fig3.選擇C2 Object
Storage服務</figcaption>
</figure>
<h3 id="點選開始使用15gb免費空間">點選開始使用15GB免費空間</h3>
<figure>
<img src="4.png" alt="Fig4.開始使用" />
<figcaption aria-hidden="true">Fig4.開始使用</figcaption>
</figure>
<h3 id="點選服務條款">點選服務條款</h3>
<figure>
<img src="5.png" alt="Fig5.服務條款" />
<figcaption aria-hidden="true">Fig5.服務條款</figcaption>
</figure>
<h3 id="建立儲存體">建立儲存體</h3>
<figure>
<img src="6.png" alt="Fig6.建立儲存體" />
<figcaption aria-hidden="true">Fig6.建立儲存體</figcaption>
</figure>
<figure>
<img src="7.png" alt="Fig7.建立存取金鑰" />
<figcaption aria-hidden="true">Fig7.建立存取金鑰</figcaption>
</figure>
<figure>
<img src="8.png" alt="Fig8.預設就好" />
<figcaption aria-hidden="true">Fig8.預設就好</figcaption>
</figure>
<h3 id="取得金鑰id與私密金鑰">取得金鑰ID與私密金鑰</h3>
<figure>
<img src="9.png" alt="Fig9.存取金鑰與私密金鑰" />
<figcaption aria-hidden="true">Fig9.存取金鑰與私密金鑰</figcaption>
</figure>
<ul>
<li>aws_access_key_id</li>
<li>aws_secret_access_key</li>
</ul>
<h3 id="確認儲存體名稱及端點">確認儲存體名稱及端點</h3>
<figure>
<img src="10.png" alt="Fig9.儲存體名稱及端點" />
<figcaption aria-hidden="true">Fig9.儲存體名稱及端點</figcaption>
</figure>
<ul>
<li>BUCKET_NAME</li>
<li>endpoint_url</li>
</ul>
<h2 id="結論">結論</h2>
<p>申請完畢之後就可以用Python中Boto3的套件進行檔案空間的儲存、下載了，未來要開發相關網站的時候也多了一個地方可以放置檔案。</p>
<h3 id="開發範例">開發範例</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"><span class="keyword">from</span> botocore.exceptions <span class="keyword">import</span> NoCredentialsError, PartialCredentialsError</span><br><span class="line"><span class="keyword">import</span> streamlit <span class="keyword">as</span> st</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 請填入你的 bucket 名稱</span></span><br><span class="line">BUCKET_NAME = <span class="string">&#x27;hankbucket&#x27;</span></span><br><span class="line"><span class="comment"># 設定 S3 客戶端</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_s3_client</span>():</span><br><span class="line">    <span class="keyword">return</span> boto3.client(</span><br><span class="line">        <span class="string">&#x27;s3&#x27;</span>,</span><br><span class="line">        endpoint_url=<span class="string">&#x27;https://OOOOO.OO.synologyc2.net&#x27;</span>,</span><br><span class="line">        aws_access_key_id=<span class="string">&#x27;twmOPTcq8MAxXaNVMOOOOOOOOO&#x27;</span>,</span><br><span class="line">        aws_secret_access_key=<span class="string">&#x27;n7O1Pys3nyp15T5OGOOOOOOO&#x27;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有檔案</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_files</span>(<span class="params">bucket_name</span>):</span><br><span class="line">    s3 = get_s3_client()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = s3.list_objects_v2(Bucket=bucket_name)</span><br><span class="line">        files = response.get(<span class="string">&#x27;Contents&#x27;</span>, [])</span><br><span class="line">        <span class="comment"># print(files)</span></span><br><span class="line">        file_list = []</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            file_info = &#123;</span><br><span class="line">                <span class="string">&quot;File Name&quot;</span>: file[<span class="string">&#x27;Key&#x27;</span>],</span><br><span class="line">                <span class="string">&quot;Size (bytes)&quot;</span>: file[<span class="string">&#x27;Size&#x27;</span>],</span><br><span class="line">                <span class="string">&quot;Last Modified&quot;</span>: file[<span class="string">&#x27;LastModified&#x27;</span>],</span><br><span class="line">                <span class="string">&quot;ETag&quot;</span>: file[<span class="string">&#x27;ETag&#x27;</span>]</span><br><span class="line">            &#125;</span><br><span class="line">            file_list.append(file_info)</span><br><span class="line">        <span class="keyword">return</span> file_list</span><br><span class="line">    <span class="keyword">except</span> (NoCredentialsError, PartialCredentialsError) <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(e)</span><br><span class="line"><span class="comment"># 上傳檔案</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_file</span>(<span class="params">bucket_name, file_path, object_name</span>):</span><br><span class="line">    s3 = get_s3_client()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            s3.upload_fileobj(f, bucket_name, object_name)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;Uploaded <span class="subst">&#123;object_name&#125;</span> to <span class="subst">&#123;bucket_name&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(e)</span><br><span class="line"><span class="comment"># 上傳檔案並獲取唯一碼</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_file_and_get_etag</span>(<span class="params">bucket_name, file_path, object_name</span>):</span><br><span class="line">    s3 = get_s3_client()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            response = s3.upload_fileobj(f, bucket_name, object_name)</span><br><span class="line">        <span class="keyword">return</span> response[<span class="string">&#x27;ETag&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(e)</span><br><span class="line"><span class="comment"># 上傳檔案並顯示唯一碼</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_new_file</span>():</span><br><span class="line">    uploaded_file = st.file_uploader(<span class="string">&quot;Choose a file&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> uploaded_file <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(uploaded_file.name, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(uploaded_file.getbuffer())</span><br><span class="line">        etag = upload_file_and_get_etag(BUCKET_NAME, uploaded_file.name, uploaded_file.name)</span><br><span class="line">        st.write(<span class="string">f&quot;Uploaded <span class="subst">&#123;uploaded_file.name&#125;</span> with ETag: <span class="subst">&#123;etag&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># 刪除檔案</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete_file</span>(<span class="params">bucket_name, object_name</span>):</span><br><span class="line">    s3 = get_s3_client()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s3.delete_object(Bucket=bucket_name, Key=object_name)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;Deleted <span class="subst">&#123;object_name&#125;</span> from <span class="subst">&#123;bucket_name&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(e)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有檔案</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_all_files</span>():</span><br><span class="line">    files = list_files(BUCKET_NAME)</span><br><span class="line">    <span class="keyword">if</span> files:</span><br><span class="line">        <span class="comment"># print(files)</span></span><br><span class="line">        file_list = [&#123;<span class="string">&quot;File Name&quot;</span>: file[<span class="string">&#x27;File Name&#x27;</span>],</span><br><span class="line">                       <span class="string">&quot;Etag&quot;</span>: file[<span class="string">&#x27;ETag&#x27;</span>],</span><br><span class="line">                       <span class="string">&quot;Size (bytes)&quot;</span>: file[<span class="string">&#x27;Size (bytes)&#x27;</span>], <span class="string">&quot;Last Modified&quot;</span>: file[<span class="string">&#x27;Last Modified&#x27;</span>]&#125;</span><br><span class="line">                         <span class="keyword">for</span> file <span class="keyword">in</span> files]</span><br><span class="line">        df = pd.DataFrame(file_list)</span><br><span class="line">        <span class="keyword">return</span> df</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> pd.DataFrame(columns=[<span class="string">&quot;File Name&quot;</span>, <span class="string">&quot;ETag&quot;</span>])</span><br><span class="line"><span class="comment"># 下載檔案</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_file</span>(<span class="params">bucket_name, object_name</span>):</span><br><span class="line">    s3 = get_s3_client()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(object_name, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            s3.download_fileobj(bucket_name, object_name, f)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;Downloaded <span class="subst">&#123;object_name&#125;</span> from <span class="subst">&#123;bucket_name&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(e)</span><br><span class="line"><span class="comment"># 下載檔案</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_selected_file</span>(<span class="params">selected_file</span>):</span><br><span class="line">    response = download_file(BUCKET_NAME, selected_file)</span><br><span class="line">    st.write(response)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Streamlit app layout</span></span><br><span class="line">st.title(<span class="string">&quot;Synology C2 Storage Management with S3 API&quot;</span>)</span><br><span class="line"></span><br><span class="line">st.header(<span class="string">&quot;List and Download Files&quot;</span>)</span><br><span class="line">files_df = list_all_files()</span><br><span class="line">st.dataframe(files_df)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> files_df.empty:</span><br><span class="line">    selected_file = st.selectbox(<span class="string">&quot;Select a file to download&quot;</span>, files_df[<span class="string">&quot;File Name&quot;</span>].tolist())</span><br><span class="line">    <span class="keyword">if</span> st.button(<span class="string">&quot;Download File&quot;</span>):</span><br><span class="line">        download_selected_file(selected_file)</span><br><span class="line"></span><br><span class="line">st.header(<span class="string">&quot;Upload a New File and Get Unique ETag&quot;</span>)</span><br><span class="line">upload_new_file()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>基本概念</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>API</tag>
      </tags>
  </entry>
  <entry>
    <title>Clever cloud postgreSQL申請流程</title>
    <url>/posts/3965020317/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<h3 id="資料庫介紹">資料庫介紹</h3>
<p>資料庫(此為關聯式資料庫)的主要用途是為資料提供一個儲存空間，讓使用者可以進行讀取、寫入、修改、刪除等功能。</p>
<p>關聯式資料庫常見如下:</p>
<ul>
<li>MySQL 和 PostgreSQL 是開源且廣泛使用的選擇，適合中小型應用程式</li>
<li>Microsoft SQL Server 通常用於大型企業解決方案</li>
<li>SQLite 則是一個輕量級的資料庫，適合用於嵌入式應用或單機應用。</li>
</ul>
<h3 id="申請雲端服務">申請雲端服務</h3>
<p>本篇文章介紹的部分為Clever Cloud 所提供無料的 256MB PostgreSQL
服務，適合需要基本資料庫功能的小型應用程式。</p>
<h3 id="重要參數">重要參數</h3>
<p>當您成功註冊並啟用 PostgreSQL 服務後，只需要取得一項重要參數
<code>CONNECTION_URI</code>即可開始使用雲端資料庫。</p>
<span id="more"></span>
<h2 id="進入網站">進入網站</h2>
<p><a href="https://www.clever-cloud.com/">Clever-Coud</a></p>
<h2 id="註冊">註冊</h2>
<figure>
<img src="1.png" alt="Fig1. 登入頁面" />
<figcaption aria-hidden="true">Fig1. 登入頁面</figcaption>
</figure>
<p>註冊方式:</p>
<ol type="1">
<li>email</li>
<li>Github</li>
</ol>
<figure>
<img src="2.png" alt="Fig2. 登入頁面2" />
<figcaption aria-hidden="true">Fig2. 登入頁面2</figcaption>
</figure>
<h2 id="入口畫面">入口畫面</h2>
<figure>
<img src="3.png" alt="Fig3. 入口畫面" />
<figcaption aria-hidden="true">Fig3. 入口畫面</figcaption>
</figure>
<h3
id="需要先去驗證你的email是否正確">需要先去驗證你的email是否正確</h3>
<figure>
<img src="4.png" alt="Fig4. 驗證信內容" />
<figcaption aria-hidden="true">Fig4. 驗證信內容</figcaption>
</figure>
<h2 id="新增一個addon">新增一個addon</h2>
<figure>
<img src="5.png" alt="Fig5. 新建按鈕" />
<figcaption aria-hidden="true">Fig5. 新建按鈕</figcaption>
</figure>
<h2 id="選取postgresql">選取PostgreSQL</h2>
<figure>
<img src="6.png" alt="Fig6. 資料庫服務" />
<figcaption aria-hidden="true">Fig6. 資料庫服務</figcaption>
</figure>
<h2
id="指定計畫名稱為dev最右下角有一個next">指定計畫名稱為DEV，最右下角有一個next</h2>
<figure>
<img src="7.png" alt="Fig7. 選擇內容DEV" />
<figcaption aria-hidden="true">Fig7. 選擇內容DEV</figcaption>
</figure>
<h2 id="填寫名稱">填寫名稱</h2>
<figure>
<img src="8.png" alt="Fig8. 服務名稱" />
<figcaption aria-hidden="true">Fig8. 服務名稱</figcaption>
</figure>
<h2 id="服務成功建立">服務成功建立</h2>
<figure>
<img src="9.png" alt="Fig9. 資料庫管理介面" />
<figcaption aria-hidden="true">Fig9. 資料庫管理介面</figcaption>
</figure>
<hr />
<h2 id="結論">結論</h2>
<p>上述結論就可以得到一組 <strong>Connection
URI</strong>，這就可以拿來當作其他網站的<strong>資料庫</strong>使用了!!</p>
<blockquote>
<p>256MB雖然沒有很大，但是可以塞大概58萬條純文字紀錄，一般開發上來說滿夠的。</p>
</blockquote>
<h2 id="串接範例">串接範例</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine, Column, Integer, String, DateTime, JSON, UniqueConstraint, ForeignKey</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker,declarative_base, relationship</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select,text</span><br><span class="line"><span class="keyword">import</span> pytz</span><br><span class="line"></span><br><span class="line"><span class="comment"># PostgreSQL 配置(改成你的)</span></span><br><span class="line">DATABASE_URL=<span class="string">&quot;postgresql://uizbhnmkOOOOOO:K0r18XtU1Nb2yGwC1SfwoOOOOOOO@bngbuvea6wkwlOOOg-postgresql.services.clever-cloud.com:50OOO/bngbuvea6wOOOOOOhzig&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">engine = create_engine(DATABASE_URL)</span><br><span class="line">SessionLocal = sessionmaker(autocommit=<span class="literal">False</span>, autoflush=<span class="literal">False</span>, bind=engine)</span><br><span class="line"></span><br><span class="line"><span class="comment"># DATABASE_URL2=&quot;sqlite:///members.db&quot;</span></span><br><span class="line"><span class="comment"># engine2 = create_engine(DATABASE_URL2)</span></span><br><span class="line"><span class="comment"># SessionLocal2 = sessionmaker(autocommit=False, autoflush=False, bind=engine2)</span></span><br><span class="line">    </span><br><span class="line">Base = declarative_base()</span><br><span class="line"><span class="comment"># 定義數據庫模型</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Photo</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;photos_backup&#x27;</span></span><br><span class="line">    <span class="built_in">id</span> = Column(Integer, primary_key=<span class="literal">True</span>, index=<span class="literal">True</span>)</span><br><span class="line">    user_id = Column(String(<span class="number">255</span>))</span><br><span class="line">    group_id = Column(String(<span class="number">255</span>))</span><br><span class="line">    photo_name = Column(String(<span class="number">255</span>))</span><br><span class="line">    photo_url = Column(String(<span class="number">255</span>))</span><br><span class="line">    photo_thumbnail_url = Column(String(<span class="number">255</span>))</span><br><span class="line">    place_tmp=  Column(String(<span class="number">50</span>))</span><br><span class="line">    created_time = Column(DateTime, default=<span class="keyword">lambda</span>: datetime.now(pytz.timezone(<span class="string">&#x27;Asia/Taipei&#x27;</span>)))</span><br><span class="line">    photo_properties = Column(JSON)</span><br><span class="line">    photo_image_hash = Column(String(<span class="number">255</span>))<span class="comment">#, unique=True, nullable=False)</span></span><br><span class="line"></span><br><span class="line">Base.metadata.create_all(bind=engine)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_photo</span>(<span class="params">user_id, group_id, photo_name, photo_url, photo_thumbnail_url, place_tmp, photo_properties, photo_image_hash</span>):</span><br><span class="line">    <span class="comment"># 創建一個新的數據庫會話</span></span><br><span class="line">    db: Session = SessionLocal()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 創建 Photo 實例</span></span><br><span class="line">        new_photo = Photo(</span><br><span class="line">            user_id=user_id,</span><br><span class="line">            group_id=group_id,</span><br><span class="line">            photo_name=photo_name,</span><br><span class="line">            photo_url=photo_url,</span><br><span class="line">            photo_thumbnail_url=photo_thumbnail_url,</span><br><span class="line">            place_tmp=place_tmp,</span><br><span class="line">            photo_properties=photo_properties,</span><br><span class="line">            photo_image_hash=photo_image_hash</span><br><span class="line">        )</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 將新實例添加到會話中</span></span><br><span class="line">        db.add(new_photo)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 提交會話以保存更改</span></span><br><span class="line">        db.commit()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 刷新會話以獲取新資料的 ID</span></span><br><span class="line">        db.refresh(new_photo)</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;新增照片資料成功，ID: <span class="subst">&#123;new_photo.<span class="built_in">id</span>&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># 如果發生錯誤，回滾事務</span></span><br><span class="line">        db.rollback()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;新增照片資料失敗: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 關閉會話</span></span><br><span class="line">        db.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_all_photos</span>():</span><br><span class="line">    <span class="comment"># 創建一個新的數據庫會話</span></span><br><span class="line">    db: Session = SessionLocal()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 獲取所有照片資料</span></span><br><span class="line">        photos = db.query(Photo).<span class="built_in">all</span>()</span><br><span class="line">        <span class="keyword">return</span> photos</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># 如果發生錯誤，回滾事務</span></span><br><span class="line">        db.rollback()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;獲取照片資料失敗: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 關閉會話</span></span><br><span class="line">        db.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete_photo_by_id</span>(<span class="params">photo_id</span>):</span><br><span class="line">    <span class="comment"># 創建一個新的數據庫會話</span></span><br><span class="line">    db: Session = SessionLocal()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 透過 ID 刪除照片資料</span></span><br><span class="line">        db.query(Photo).<span class="built_in">filter</span>(Photo.<span class="built_in">id</span> == photo_id).delete()</span><br><span class="line">        db.commit()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;刪除照片資料成功，ID: <span class="subst">&#123;photo_id&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># 如果發生錯誤，回滾事務</span></span><br><span class="line">        db.rollback()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;刪除照片資料失敗: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 關閉會話</span></span><br><span class="line">        db.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用範例</span></span><br><span class="line">add_photo(</span><br><span class="line">    user_id=<span class="string">&quot;user_123&quot;</span>,</span><br><span class="line">    group_id=<span class="string">&quot;group_456&quot;</span>,</span><br><span class="line">    photo_name=<span class="string">&quot;example_photo.jpg&quot;</span>,</span><br><span class="line">    photo_url=<span class="string">&quot;http://example.com/photo.jpg&quot;</span>,</span><br><span class="line">    photo_thumbnail_url=<span class="string">&quot;http://example.com/photo_thumb.jpg&quot;</span>,</span><br><span class="line">    place_tmp=<span class="string">&quot;Taipei&quot;</span>,</span><br><span class="line">    photo_properties=&#123;<span class="string">&quot;description&quot;</span>: <span class="string">&quot;A beautiful sunset.&quot;</span>&#125;,</span><br><span class="line">    photo_image_hash=<span class="string">&quot;hash_value_example&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">photos = get_all_photos()</span><br><span class="line"><span class="built_in">print</span>(photos)</span><br><span class="line"></span><br><span class="line">delete_photo_by_id(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">session = SessionLocal()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 使用原生 SQL 執行 ALTER TABLE，並使用 text() 包裝 SQL 語句</span></span><br><span class="line">    <span class="comment"># session.execute(text(&quot;ALTER TABLE photos_backup ADD COLUMN description TEXT&quot;))</span></span><br><span class="line">    session.execute(text(<span class="string">&quot;DROP TABLE IF EXISTS photos_backup&quot;</span>))</span><br><span class="line">    session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;出錯了: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    session.rollback()</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    session.close()</span><br></pre></td></tr></table></figure>
<h2 id="遭遇問題紀錄">遭遇問題紀錄</h2>
<p>當介面的PG
Studio無法登入時，會無法操作資料庫中的所有內容，儘管用pgadmin來進行也會出現'ServerManager'沒有存在user_info之類的錯誤訊息。</p>
<p>我用streamlit建立一個介面去進行操作也無法成功(後來操作成功了!?)</p>
<p>VScode進行連接時會出現pg_table無法顯示</p>
<p>總言之就是一個很無解的過程，<del>看來雲端服務也不一定是好的方案</del>，能夠完整掌握會比較安全</p>
]]></content>
      <categories>
        <category>基本概念</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>監造報表規劃-數量計算</title>
    <url>/posts/1952534825/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<p>契約項目、單價、數量、單位是整個工程進行中的<strong>數量計算</strong>核心。</p>
<p>契約項目的起源於設計階段會成立預算書便開始，招標階段會以標單的形式讓廠商進行填列投標，決標時再以標比調整契約單價，爾後成立契約後便以此當計價依據。</p>
<p>工程進行要做到完全不變更設計實在相當困難，因為現場條件改變、居民特殊需求、甚至編制預算書的錯誤未被發現都可能導致<strong>變更設計</strong>的發生，此時變更設計需求項目沒有列於契約項目，則會伴隨<strong>新增項目新增單價</strong>程序同步進行。</p>
<p>工程執行一定比例後，廠商可提出估驗計價，此時也是以當期契約項目、單價、實際數量作為付款依據，配合累積進度相互勾稽，避免超估發生。</p>
<span id="more"></span>
<h2 id="引用來源">📔引用來源</h2>
<p>公共工程所使用的PCCES可以生成XML或XLS，可以透過VBA的方式匯入成監造報表的契約項目，在引入過程中，對於監造報表中的契約項目欄位規劃，需要特別注意<strong>結構性</strong>與<strong>擴充性</strong>才會方便作業。</p>
<h3 id="契約項目欄位規劃">契約項目欄位規劃</h3>
<blockquote>
<p>結構性</p>
</blockquote>
<p>在資料庫的設計上有所謂<strong>正規化</strong>的概念，儲存格以每格存放一個資料為原則，<strong>避免跨格合併</strong>的方式進行資料存放，通常資料庫只紀錄文字內容而已，圖片或檔案則紀錄<strong>外部連結路徑</strong>替代。</p>
<blockquote>
<p>擴充性</p>
</blockquote>
<p>工作表則是以不同類別做拆分，例如:契約項目、施作數量、試驗統計、基本資料放於不同工作表，各工作表由上而下發展，以第一列為表頭進行記錄。(如果要放置按鈕則另當別論)</p>
<figure>
<img src="upload_6e802f62772646653c59aa4bfdfb83db.png"
alt="Fig1.預算詳細表範例" />
<figcaption aria-hidden="true">Fig1.預算詳細表範例</figcaption>
</figure>
<h2 id="進度依據">🚸進度依據</h2>
<p>工地現場會有當日施作項目，施工廠商會另製作一份施工日誌及自主檢查表，達抽查頻率時會提出檢驗停留點申請單會同監造前往抽查，並將已抽查完成的數量填報上去監造日報作為施作數量，此時的數量則為換算實際進度的依據。</p>
<p>當初在預算書階段時以比例計算之項目則歸類為百分比項目(職業安全、環境保護、品管作業費、廠商利潤、營業稅)，會依照當初在換算比例時的契約項目之實作數量占契約數量之金額比例填寫。</p>
<blockquote>
<p>EX:環境保護費用會依(主體工程+雜項工程)之實作金額/(主體工程+雜項工程)之契約金額填列</p>
</blockquote>
<figure>
<img src="fig.JPG" alt="Fig2.百分比項目範例" />
<figcaption aria-hidden="true">Fig2.百分比項目範例</figcaption>
</figure>
<h2 id="變更設計">✂️變更設計</h2>
<p>當工程需要改動契約項目或提供新的契約項目時，會辦理變更設計或新增項目新增單價，提報概估表及變更設計預算書來完成變更設計流程，如有新增契約項目時則須先行辦理新增項目新單價。</p>
<p>若預算書階段有先敘明，實作數量計價則會在工程完工前辦理一次<strong>修正預算</strong>，依照契約項目填列實作數量等候竣工結算，若已經有發生變更設計，則後續皆已變更設計程序進行，不再以修正預算程序辦理。</p>
<p>同時會需要依照變更前後的數量差異、金額差異另製成<strong>變更設計總表、變更設計明細表</strong>，這些報表內容都是與契約項目、單價有很高的關聯性。</p>
<figure>
<img src="change.JPG" alt="Fig3.變更設計介面" />
<figcaption aria-hidden="true">Fig3.變更設計介面</figcaption>
</figure>
<h2 id="估驗計價">💰估驗計價</h2>
<p>工程執行一定比例後，廠商可以提出估驗計價來支付工程款，監造此時需要對照契約項目、數量、單價，估驗數量不得超過日報施作數量，並且累積估驗進度亦不得超過累積實際進度。</p>
<p>需要依照該期別的工程估驗內容另製成<strong>工程估驗總表、工程估驗詳細表</strong>，這些報表內容也都是與契約項目、單價有很高的關聯性。</p>
<figure>
<img src="cost.JPG" alt="Fig4.估驗計價介面" />
<figcaption aria-hidden="true">Fig4.估驗計價介面</figcaption>
</figure>
<h2 id="開發中遇過的小問題">🐞開發中遇過的小問題</h2>
<ul>
<li>引入項目時引到重覆項目</li>
<li>實際進度的計算分母需將廠商利潤、營業稅進行排除</li>
<li>變更設計未將試驗數量同步變更</li>
<li>變更設計後進度不升反降</li>
<li>估驗計價的以前估驗價值因為變更設計而更動</li>
</ul>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Excel VBA</tag>
        <tag>監造報表</tag>
      </tags>
  </entry>
  <entry>
    <title>監造日報表設計規劃</title>
    <url>/posts/168906144/</url>
    <content><![CDATA[<h2 id="前言">🙌前言</h2>
<blockquote>
<p>監造報表為公共工程三級品管制度下的必備表單</p>
</blockquote>
<p>依公共工程施工品質管理作業要點第十一、監造單位及其所派駐現場人員工作重點如下:(十五)依規定填報<strong>監造報表</strong></p>
<ul>
<li>格式來源請參考<a
href="https://www.pcc.gov.tw/cp.aspx?n=82B82C5E132EEB1F">監造報表(附表五)</a></li>
</ul>
<p>監造報表所需登載內容除基本資料外，其餘重點簡述如下:</p>
<ol type="1">
<li>工程進度</li>
<li>數量計算</li>
<li>施工抽查</li>
<li>品質試驗</li>
<li>文件管理</li>
</ol>
<p>本篇為我所開發的監造日報表VBA的一些專案設計架構簡述，
有興趣請繼續觀看...</p>
<span id="more"></span>
<figure>
<img src="附表五_公共工程監造報表_page-0001.jpg"
alt="Fig1. 監造報表畫面" />
<figcaption aria-hidden="true">Fig1. 監造報表畫面</figcaption>
</figure>
<hr />
<h2 id="工程進度">🚸工程進度</h2>
<h3 id="預定進度">預定進度</h3>
<blockquote>
<p>此處的紀錄內容為提報施工計畫書時的施工進度網圖內容</p>
</blockquote>
<p>複雜的案子可能會是箭線網圖畫、簡單的案子通常用甘特圖，不管如何，最底下的累積進度通常每半個月會有一個數值，這就是報表上所需的預定進度，如果比較簡單的案子可以用內插值的方式去補數值。</p>
<div class="note info"><p>累積進度以內插方式進行時，在某些大案子中可能無法貼近預排進度，建議透過構造物的拆項預排，由構造物的單元分析去換算契約價金，再以該價金進行預定進度的換算會比較準確。</p>
</div>
<h3 id="實際進度">實際進度</h3>
<blockquote>
<p>按契約詳細表項目已經抽查完成部分所換算之金額佔契約價金之金額百分比。</p>
</blockquote>
<p>有些業主會要求計算工程進度分母時，<strong>不要計入</strong>廠商管理費及營業稅，但卻又要求要顯示於監造報表的詳細表上...</p>
<h3 id="突發情形">突發情形</h3>
<p>在工程執行期間，可能有諸多原因導致<strong>展延工期</strong>、<strong>停工</strong>等情況，此時也需要重新調整施工網圖並將正確之預定進度紀錄上去。</p>
<hr />
<h2 id="數量計算">✏️數量計算</h2>
<blockquote>
<p>對應於 一、工程進行情況(含約定之重要施工項目及數量)</p>
</blockquote>
<p>在監造計畫書中會提及重要施工項目及數量，可以用這部分的內容來進行紀錄</p>
<p>紀錄內容可能會有以下情況</p>
<ol type="1">
<li>紀錄累積數量不為<strong>0</strong>的契約項目(即部分呈現)</li>
<li>紀錄契約數量不為<strong>0</strong>的契約項目(即全部呈現)</li>
<li>紀錄當日施作內容，再另檢附第二聯詳細表(即全部呈現在第二聯)</li>
</ol>
<p>這部分的差異變化比較大，我的專案都會把這些邏輯建立起來，到時再來選要哪一種即可</p>
<hr />
<h2 id="施工抽查">⚒️施工抽查</h2>
<blockquote>
<p>對應於
二、監督依照設計圖說及核定施工圖說施工(含約定之檢驗停留點及施工抽查等情形)</p>
</blockquote>
<p>依照監造計畫書所提及的檢驗頻率進行檢驗停留點抽查或隨機抽查。</p>
<p>紀錄內容為抽查紀錄表的編號、項目、合格與否。</p>
<p>很多委員都會認為紀錄表就是要用<strong>手寫</strong>才有FU，因此在進行施工抽查的歸檔時，會需要再另外掃描。</p>
<h2 id="品質試驗">📋品質試驗</h2>
<blockquote>
<p>對應於
三、查核材料規格及品質(含約定之檢驗停留點、材料設備管制及檢(試)驗等抽驗情形)</p>
</blockquote>
<p>依照品質計畫書所提及的材料設備品管頻率進行廠驗或抽驗。</p>
<p>紀錄內容為材料設備管制名稱、契約數量、已作數量。</p>
<p>這部分跟施工抽查有點類似，試驗報告通常也會是紙本的內容，因此在品質試驗的歸檔，一樣也是要另外掃描起來。</p>
<h2 id="文件管理">📚文件管理</h2>
<blockquote>
<p>對應於
五、其他約定監造事項(含重要事項紀錄、主辦機關指示及通知廠商辦理事項)</p>
</blockquote>
<ul>
<li>機關公文(變更、新增、展延、停工、材料、估驗、行政文件...等)</li>
<li>督導查核</li>
<li>會議記錄</li>
<li>交辦事項</li>
<li><strong>其他覺得應該要紀錄的內容</strong></li>
</ul>
<p>每個工程案應該都會有無數個會議、無數個來往公文，無論是對業主還是對廠商都是，而這些都會需要紀錄在監造報表中</p>
<p>預期每個對工程案不了解的人，透過翻找監造報表，就能夠了解整個工程的大致內容，這就是撰寫的主要目的。</p>
<h2 id="監造報表vba系統架構圖">💥監造報表VBA系統架構圖</h2>
<figure>
<img src="監造報表VBA_page-0001.jpg"
alt="Fig2. 監造報表VBA系統架構圖" />
<figcaption aria-hidden="true">Fig2. 監造報表VBA系統架構圖</figcaption>
</figure>
]]></content>
      <categories>
        <category>專案開發</category>
      </categories>
      <tags>
        <tag>Excel VBA</tag>
        <tag>監造報表</tag>
      </tags>
  </entry>
</search>
